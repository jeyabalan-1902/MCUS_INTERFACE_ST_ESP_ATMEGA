
4LT_Touch.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000007a  00800100  00001aae  00001b42  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001aae  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000006c  0080017a  0080017a  00001bbc  2**0
                  ALLOC
  3 .comment      00000060  00000000  00000000  00001bbc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001c1c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000320  00000000  00000000  00001c60  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000030bd  00000000  00000000  00001f80  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000013ff  00000000  00000000  0000503d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001702  00000000  00000000  0000643c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000620  00000000  00000000  00007b40  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001a0f  00000000  00000000  00008160  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000bb9  00000000  00000000  00009b6f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000278  00000000  00000000  0000a728  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 66 00 	jmp	0xcc	; 0xcc <__ctors_end>
       4:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
       8:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
       c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      10:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      14:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      18:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      1c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      20:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      24:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      28:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      2c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      30:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      34:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      38:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      3c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      40:	0c 94 8a 00 	jmp	0x114	; 0x114 <__vector_16>
      44:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      48:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      4c:	0c 94 dc 03 	jmp	0x7b8	; 0x7b8 <__vector_19>
      50:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      54:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      58:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      5c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      60:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      64:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      68:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      6c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      70:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      74:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      78:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      7c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      80:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      84:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      88:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      8c:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      90:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      94:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      98:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      9c:	0c 94 49 03 	jmp	0x692	; 0x692 <__vector_39>
      a0:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      a4:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      a8:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      ac:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      b0:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      b4:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      b8:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      bc:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      c0:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      c4:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>
      c8:	0c 94 83 00 	jmp	0x106	; 0x106 <__bad_interrupt>

000000cc <__ctors_end>:
      cc:	11 24       	eor	r1, r1
      ce:	1f be       	out	0x3f, r1	; 63
      d0:	cf ef       	ldi	r28, 0xFF	; 255
      d2:	d8 e0       	ldi	r29, 0x08	; 8
      d4:	de bf       	out	0x3e, r29	; 62
      d6:	cd bf       	out	0x3d, r28	; 61

000000d8 <__do_copy_data>:
      d8:	11 e0       	ldi	r17, 0x01	; 1
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b1 e0       	ldi	r27, 0x01	; 1
      de:	ee ea       	ldi	r30, 0xAE	; 174
      e0:	fa e1       	ldi	r31, 0x1A	; 26
      e2:	02 c0       	rjmp	.+4      	; 0xe8 <__do_copy_data+0x10>
      e4:	05 90       	lpm	r0, Z+
      e6:	0d 92       	st	X+, r0
      e8:	aa 37       	cpi	r26, 0x7A	; 122
      ea:	b1 07       	cpc	r27, r17
      ec:	d9 f7       	brne	.-10     	; 0xe4 <__do_copy_data+0xc>

000000ee <__do_clear_bss>:
      ee:	21 e0       	ldi	r18, 0x01	; 1
      f0:	aa e7       	ldi	r26, 0x7A	; 122
      f2:	b1 e0       	ldi	r27, 0x01	; 1
      f4:	01 c0       	rjmp	.+2      	; 0xf8 <.do_clear_bss_start>

000000f6 <.do_clear_bss_loop>:
      f6:	1d 92       	st	X+, r1

000000f8 <.do_clear_bss_start>:
      f8:	a6 3e       	cpi	r26, 0xE6	; 230
      fa:	b2 07       	cpc	r27, r18
      fc:	e1 f7       	brne	.-8      	; 0xf6 <.do_clear_bss_loop>
      fe:	0e 94 bd 01 	call	0x37a	; 0x37a <main>
     102:	0c 94 55 0d 	jmp	0x1aaa	; 0x1aaa <_exit>

00000106 <__bad_interrupt>:
     106:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000010a <atmel_start_init>:
/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
	system_init();
     10a:	0e 94 97 03 	call	0x72e	; 0x72e <system_init>

	touch_init();
     10e:	0e 94 b0 02 	call	0x560	; 0x560 <touch_init>
     112:	08 95       	ret

00000114 <__vector_16>:

#include <driver_init.h>
#include <compiler.h>

ISR(TIMER0_COMPA_vect)
{
     114:	1f 92       	push	r1
     116:	0f 92       	push	r0
     118:	0f b6       	in	r0, 0x3f	; 63
     11a:	0f 92       	push	r0
     11c:	11 24       	eor	r1, r1
     11e:	2f 93       	push	r18
     120:	3f 93       	push	r19
     122:	4f 93       	push	r20
     124:	5f 93       	push	r21
     126:	6f 93       	push	r22
     128:	7f 93       	push	r23
     12a:	8f 93       	push	r24
     12c:	9f 93       	push	r25
     12e:	af 93       	push	r26
     130:	bf 93       	push	r27
     132:	ef 93       	push	r30
     134:	ff 93       	push	r31

	mega_touch_timer();
     136:	0e 94 fd 02 	call	0x5fa	; 0x5fa <mega_touch_timer>

	/* Clear the timer flag */
	TIFR0 |= OCF0A;
     13a:	85 b3       	in	r24, 0x15	; 21
     13c:	81 60       	ori	r24, 0x01	; 1
     13e:	85 bb       	out	0x15, r24	; 21
}
     140:	ff 91       	pop	r31
     142:	ef 91       	pop	r30
     144:	bf 91       	pop	r27
     146:	af 91       	pop	r26
     148:	9f 91       	pop	r25
     14a:	8f 91       	pop	r24
     14c:	7f 91       	pop	r23
     14e:	6f 91       	pop	r22
     150:	5f 91       	pop	r21
     152:	4f 91       	pop	r20
     154:	3f 91       	pop	r19
     156:	2f 91       	pop	r18
     158:	0f 90       	pop	r0
     15a:	0f be       	out	0x3f, r0	; 63
     15c:	0f 90       	pop	r0
     15e:	1f 90       	pop	r1
     160:	18 95       	reti

00000162 <SPI_MasterInit>:
	TIMSK1 |= (1 << OCIE1A);
	TCCR1B |= (1 << CS12) | (1 << CS10);
}

void SPI_MasterInit() {
	DDRB |= (1 << SPI_SS_PIN) | (1 << SPI_MOSI_PIN) | (1 << SPI_SCK_PIN);
     162:	84 b1       	in	r24, 0x04	; 4
     164:	80 6b       	ori	r24, 0xB0	; 176
     166:	84 b9       	out	0x04, r24	; 4
	SPCR0 = (1 << SPE) | (1 << MSTR) | (1 << SPR0); 
     168:	81 e5       	ldi	r24, 0x51	; 81
     16a:	8c bd       	out	0x2c, r24	; 44
	PORTB |= (1 << SPI_SS_PIN);
     16c:	85 b1       	in	r24, 0x05	; 5
     16e:	80 61       	ori	r24, 0x10	; 16
     170:	85 b9       	out	0x05, r24	; 5
     172:	08 95       	ret

00000174 <SPI_MasterTransmit>:
}

void SPI_MasterTransmit(uint8_t data) {
	PORTB &= ~(1 << SPI_SS_PIN);
     174:	95 b1       	in	r25, 0x05	; 5
     176:	9f 7e       	andi	r25, 0xEF	; 239
     178:	95 b9       	out	0x05, r25	; 5
	SPDR0 = data;
     17a:	8e bd       	out	0x2e, r24	; 46
	while (!(SPSR0 & (1 << SPIF))) {
     17c:	0d b4       	in	r0, 0x2d	; 45
     17e:	07 fe       	sbrs	r0, 7
     180:	fd cf       	rjmp	.-6      	; 0x17c <SPI_MasterTransmit+0x8>
	}
	PORTB |= (1 << SPI_SS_PIN);
     182:	85 b1       	in	r24, 0x05	; 5
     184:	80 61       	ori	r24, 0x10	; 16
     186:	85 b9       	out	0x05, r24	; 5
     188:	08 95       	ret

0000018a <SPI_MasterTransmitString>:
		    touch_counter_4 = 0;
	    }
    }
}

void SPI_MasterTransmitString(const char* str) {
     18a:	0f 93       	push	r16
     18c:	1f 93       	push	r17
     18e:	cf 93       	push	r28
     190:	df 93       	push	r29
     192:	8c 01       	movw	r16, r24
	for (int i = 0; str[i] != '\0'; i++) {
     194:	c0 e0       	ldi	r28, 0x00	; 0
     196:	d0 e0       	ldi	r29, 0x00	; 0
     198:	0c c0       	rjmp	.+24     	; 0x1b2 <SPI_MasterTransmitString+0x28>
		SPI_MasterTransmit(str[i]);
     19a:	0e 94 ba 00 	call	0x174	; 0x174 <SPI_MasterTransmit>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     19e:	2f ef       	ldi	r18, 0xFF	; 255
     1a0:	80 e7       	ldi	r24, 0x70	; 112
     1a2:	92 e0       	ldi	r25, 0x02	; 2
     1a4:	21 50       	subi	r18, 0x01	; 1
     1a6:	80 40       	sbci	r24, 0x00	; 0
     1a8:	90 40       	sbci	r25, 0x00	; 0
     1aa:	e1 f7       	brne	.-8      	; 0x1a4 <SPI_MasterTransmitString+0x1a>
     1ac:	00 c0       	rjmp	.+0      	; 0x1ae <SPI_MasterTransmitString+0x24>
     1ae:	00 00       	nop
	    }
    }
}

void SPI_MasterTransmitString(const char* str) {
	for (int i = 0; str[i] != '\0'; i++) {
     1b0:	21 96       	adiw	r28, 0x01	; 1
     1b2:	f8 01       	movw	r30, r16
     1b4:	ec 0f       	add	r30, r28
     1b6:	fd 1f       	adc	r31, r29
     1b8:	80 81       	ld	r24, Z
     1ba:	81 11       	cpse	r24, r1
     1bc:	ee cf       	rjmp	.-36     	; 0x19a <SPI_MasterTransmitString+0x10>
		SPI_MasterTransmit(str[i]);
		_delay_ms(100);
	}
}
     1be:	df 91       	pop	r29
     1c0:	cf 91       	pop	r28
     1c2:	1f 91       	pop	r17
     1c4:	0f 91       	pop	r16
     1c6:	08 95       	ret

000001c8 <touchpin1>:
		}
	}
}

void touchpin1() {
	previous_key_status_1 = key_status_1;
     1c8:	80 91 a5 01 	lds	r24, 0x01A5	; 0x8001a5 <key_status_1>
     1cc:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <previous_key_status_1>
	key_status_1 = get_sensor_state(0) & 0x80;
     1d0:	80 e0       	ldi	r24, 0x00	; 0
     1d2:	90 e0       	ldi	r25, 0x00	; 0
     1d4:	0e 94 3a 03 	call	0x674	; 0x674 <get_sensor_state>
     1d8:	80 78       	andi	r24, 0x80	; 128
     1da:	80 93 a5 01 	sts	0x01A5, r24	; 0x8001a5 <key_status_1>
	if (key_status_1 && !previous_key_status_1) {
     1de:	88 23       	and	r24, r24
     1e0:	b1 f0       	breq	.+44     	; 0x20e <touchpin1+0x46>
     1e2:	90 91 a0 01 	lds	r25, 0x01A0	; 0x8001a0 <previous_key_status_1>
     1e6:	91 11       	cpse	r25, r1
     1e8:	12 c0       	rjmp	.+36     	; 0x20e <touchpin1+0x46>
		second_counter = 0;
     1ea:	10 92 7d 01 	sts	0x017D, r1	; 0x80017d <second_counter+0x1>
     1ee:	10 92 7c 01 	sts	0x017C, r1	; 0x80017c <second_counter>
		touch_counter_1 = 1;
     1f2:	81 e0       	ldi	r24, 0x01	; 1
     1f4:	80 93 9d 01 	sts	0x019D, r24	; 0x80019d <touch_counter_1>
		if (touch_counter_1 == 1) {
			SPI_MasterTransmitString("L1");                     // Transmits "L1"
     1f8:	84 e6       	ldi	r24, 0x64	; 100
     1fa:	91 e0       	ldi	r25, 0x01	; 1
     1fc:	0e 94 c5 00 	call	0x18a	; 0x18a <SPI_MasterTransmitString>
			second_counter = 0;
     200:	10 92 7d 01 	sts	0x017D, r1	; 0x80017d <second_counter+0x1>
     204:	10 92 7c 01 	sts	0x017C, r1	; 0x80017c <second_counter>
			touch_counter_1 = 0;
     208:	10 92 9d 01 	sts	0x019D, r1	; 0x80019d <touch_counter_1>
     20c:	08 95       	ret
		}
	}
	else if (key_status_1) {
     20e:	88 23       	and	r24, r24
     210:	49 f0       	breq	.+18     	; 0x224 <touchpin1+0x5c>
		second_counter++;
     212:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <second_counter>
     216:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <second_counter+0x1>
     21a:	01 96       	adiw	r24, 0x01	; 1
     21c:	90 93 7d 01 	sts	0x017D, r25	; 0x80017d <second_counter+0x1>
     220:	80 93 7c 01 	sts	0x017C, r24	; 0x80017c <second_counter>
     224:	08 95       	ret

00000226 <touchpin2>:
	}
}

void touchpin2() {
	previous_key_status_2 = key_status_2;
     226:	80 91 9f 01 	lds	r24, 0x019F	; 0x80019f <key_status_2>
     22a:	80 93 a2 01 	sts	0x01A2, r24	; 0x8001a2 <previous_key_status_2>
	key_status_2 = get_sensor_state(1) & 0x80;
     22e:	81 e0       	ldi	r24, 0x01	; 1
     230:	90 e0       	ldi	r25, 0x00	; 0
     232:	0e 94 3a 03 	call	0x674	; 0x674 <get_sensor_state>
     236:	80 78       	andi	r24, 0x80	; 128
     238:	80 93 9f 01 	sts	0x019F, r24	; 0x80019f <key_status_2>
	if (key_status_2 && !previous_key_status_2) {
     23c:	88 23       	and	r24, r24
     23e:	b1 f0       	breq	.+44     	; 0x26c <touchpin2+0x46>
     240:	90 91 a2 01 	lds	r25, 0x01A2	; 0x8001a2 <previous_key_status_2>
     244:	91 11       	cpse	r25, r1
     246:	12 c0       	rjmp	.+36     	; 0x26c <touchpin2+0x46>
		second_counter_2 = 0;
     248:	10 92 7b 01 	sts	0x017B, r1	; 0x80017b <__data_end+0x1>
     24c:	10 92 7a 01 	sts	0x017A, r1	; 0x80017a <__data_end>
		touch_counter_2 = 1;
     250:	81 e0       	ldi	r24, 0x01	; 1
     252:	80 93 a3 01 	sts	0x01A3, r24	; 0x8001a3 <touch_counter_2>
		if (touch_counter_2 == 1) {
			SPI_MasterTransmitString("L2");                     // Transmits "L2"
     256:	87 e6       	ldi	r24, 0x67	; 103
     258:	91 e0       	ldi	r25, 0x01	; 1
     25a:	0e 94 c5 00 	call	0x18a	; 0x18a <SPI_MasterTransmitString>
			second_counter_2 = 0;
     25e:	10 92 7b 01 	sts	0x017B, r1	; 0x80017b <__data_end+0x1>
     262:	10 92 7a 01 	sts	0x017A, r1	; 0x80017a <__data_end>
			touch_counter_2 = 0;
     266:	10 92 a3 01 	sts	0x01A3, r1	; 0x8001a3 <touch_counter_2>
     26a:	08 95       	ret
		}
	}
	else if (key_status_2) {
     26c:	88 23       	and	r24, r24
     26e:	49 f0       	breq	.+18     	; 0x282 <touchpin2+0x5c>
		second_counter_2++;
     270:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <__data_end>
     274:	90 91 7b 01 	lds	r25, 0x017B	; 0x80017b <__data_end+0x1>
     278:	01 96       	adiw	r24, 0x01	; 1
     27a:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <__data_end+0x1>
     27e:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <__data_end>
     282:	08 95       	ret

00000284 <touchpin3>:
	}
}

void touchpin3() {
		previous_key_status_3 = key_status_3;
     284:	80 91 a7 01 	lds	r24, 0x01A7	; 0x8001a7 <key_status_3>
     288:	80 93 9c 01 	sts	0x019C, r24	; 0x80019c <previous_key_status_3>
		key_status_3= get_sensor_state(2) & 0x80;
     28c:	82 e0       	ldi	r24, 0x02	; 2
     28e:	90 e0       	ldi	r25, 0x00	; 0
     290:	0e 94 3a 03 	call	0x674	; 0x674 <get_sensor_state>
     294:	80 78       	andi	r24, 0x80	; 128
     296:	80 93 a7 01 	sts	0x01A7, r24	; 0x8001a7 <key_status_3>
		if (key_status_3 && !previous_key_status_3) {
     29a:	88 23       	and	r24, r24
     29c:	c1 f0       	breq	.+48     	; 0x2ce <touchpin3+0x4a>
     29e:	80 91 9c 01 	lds	r24, 0x019C	; 0x80019c <previous_key_status_3>
     2a2:	81 11       	cpse	r24, r1
     2a4:	14 c0       	rjmp	.+40     	; 0x2ce <touchpin3+0x4a>
			touch_counter_3++;
     2a6:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <touch_counter_3>
     2aa:	8f 5f       	subi	r24, 0xFF	; 255
     2ac:	80 93 a6 01 	sts	0x01A6, r24	; 0x8001a6 <touch_counter_3>
			if (touch_counter_3 == 1) {
     2b0:	81 30       	cpi	r24, 0x01	; 1
     2b2:	29 f4       	brne	.+10     	; 0x2be <touchpin3+0x3a>
				SPI_MasterTransmitString("L3");                     // Transmits "L3"
     2b4:	8a e6       	ldi	r24, 0x6A	; 106
     2b6:	91 e0       	ldi	r25, 0x01	; 1
     2b8:	0e 94 c5 00 	call	0x18a	; 0x18a <SPI_MasterTransmitString>
     2bc:	08 95       	ret
			}
			else if (touch_counter_3 == 2) {
     2be:	82 30       	cpi	r24, 0x02	; 2
     2c0:	31 f4       	brne	.+12     	; 0x2ce <touchpin3+0x4a>
				SPI_MasterTransmitString("L3");                     // Transmits "L3"
     2c2:	8a e6       	ldi	r24, 0x6A	; 106
     2c4:	91 e0       	ldi	r25, 0x01	; 1
     2c6:	0e 94 c5 00 	call	0x18a	; 0x18a <SPI_MasterTransmitString>
				touch_counter_3 = 0;
     2ca:	10 92 a6 01 	sts	0x01A6, r1	; 0x8001a6 <touch_counter_3>
     2ce:	08 95       	ret

000002d0 <touchpin4>:
			}
        }
}

void touchpin4() {
	previous_key_status_4 = key_status_4;
     2d0:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <key_status_4>
     2d4:	80 93 a1 01 	sts	0x01A1, r24	; 0x8001a1 <previous_key_status_4>
	key_status_4 = get_sensor_state(3) & 0x80;
     2d8:	83 e0       	ldi	r24, 0x03	; 3
     2da:	90 e0       	ldi	r25, 0x00	; 0
     2dc:	0e 94 3a 03 	call	0x674	; 0x674 <get_sensor_state>
     2e0:	80 78       	andi	r24, 0x80	; 128
     2e2:	80 93 9e 01 	sts	0x019E, r24	; 0x80019e <key_status_4>
    if (key_status_4 && !previous_key_status_4) {
     2e6:	88 23       	and	r24, r24
     2e8:	c1 f0       	breq	.+48     	; 0x31a <touchpin4+0x4a>
     2ea:	80 91 a1 01 	lds	r24, 0x01A1	; 0x8001a1 <previous_key_status_4>
     2ee:	81 11       	cpse	r24, r1
     2f0:	14 c0       	rjmp	.+40     	; 0x31a <touchpin4+0x4a>
	    touch_counter_4++;
     2f2:	80 91 a4 01 	lds	r24, 0x01A4	; 0x8001a4 <touch_counter_4>
     2f6:	8f 5f       	subi	r24, 0xFF	; 255
     2f8:	80 93 a4 01 	sts	0x01A4, r24	; 0x8001a4 <touch_counter_4>
	    if (touch_counter_4 == 1) {
     2fc:	81 30       	cpi	r24, 0x01	; 1
     2fe:	29 f4       	brne	.+10     	; 0x30a <touchpin4+0x3a>
		    SPI_MasterTransmitString("L4");                     // Transmits "L4"
     300:	8d e6       	ldi	r24, 0x6D	; 109
     302:	91 e0       	ldi	r25, 0x01	; 1
     304:	0e 94 c5 00 	call	0x18a	; 0x18a <SPI_MasterTransmitString>
     308:	08 95       	ret
	    }
	    else if (touch_counter_4 == 2) {
     30a:	82 30       	cpi	r24, 0x02	; 2
     30c:	31 f4       	brne	.+12     	; 0x31a <touchpin4+0x4a>
		    SPI_MasterTransmitString("L4");                     // Transmits "L4"
     30e:	8d e6       	ldi	r24, 0x6D	; 109
     310:	91 e0       	ldi	r25, 0x01	; 1
     312:	0e 94 c5 00 	call	0x18a	; 0x18a <SPI_MasterTransmitString>
		    touch_counter_4 = 0;
     316:	10 92 a4 01 	sts	0x01A4, r1	; 0x8001a4 <touch_counter_4>
     31a:	08 95       	ret

0000031c <loop>:
}



void loop() {
	touch_process();
     31c:	0e 94 bf 02 	call	0x57e	; 0x57e <touch_process>
	if (measurement_done_touch == 1) {
     320:	80 91 82 01 	lds	r24, 0x0182	; 0x800182 <measurement_done_touch>
     324:	81 30       	cpi	r24, 0x01	; 1
     326:	41 f5       	brne	.+80     	; 0x378 <loop+0x5c>
		measurement_done_touch = 0;
     328:	10 92 82 01 	sts	0x0182, r1	; 0x800182 <measurement_done_touch>
		touchpin1();
     32c:	0e 94 e4 00 	call	0x1c8	; 0x1c8 <touchpin1>
		touchpin2();
     330:	0e 94 13 01 	call	0x226	; 0x226 <touchpin2>
		touchpin3();
     334:	0e 94 42 01 	call	0x284	; 0x284 <touchpin3>
		touchpin4();
     338:	0e 94 68 01 	call	0x2d0	; 0x2d0 <touchpin4>

		// Check if both touchpin1 (second_counter) and touchpin3 (second_counter_2) have been pressed for 10 seconds
		if (second_counter >= 200 && second_counter_2 >= 200) {
     33c:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <second_counter>
     340:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <second_counter+0x1>
     344:	88 3c       	cpi	r24, 0xC8	; 200
     346:	91 05       	cpc	r25, r1
     348:	b8 f0       	brcs	.+46     	; 0x378 <loop+0x5c>
     34a:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <__data_end>
     34e:	90 91 7b 01 	lds	r25, 0x017B	; 0x80017b <__data_end+0x1>
     352:	88 3c       	cpi	r24, 0xC8	; 200
     354:	91 05       	cpc	r25, r1
     356:	80 f0       	brcs	.+32     	; 0x378 <loop+0x5c>
			SPI_MasterTransmitString("H1");                     // Transmits "H1"
     358:	80 e7       	ldi	r24, 0x70	; 112
     35a:	91 e0       	ldi	r25, 0x01	; 1
     35c:	0e 94 c5 00 	call	0x18a	; 0x18a <SPI_MasterTransmitString>
			second_counter = 0;
     360:	10 92 7d 01 	sts	0x017D, r1	; 0x80017d <second_counter+0x1>
     364:	10 92 7c 01 	sts	0x017C, r1	; 0x80017c <second_counter>
			second_counter_2 = 0;
     368:	10 92 7b 01 	sts	0x017B, r1	; 0x80017b <__data_end+0x1>
     36c:	10 92 7a 01 	sts	0x017A, r1	; 0x80017a <__data_end>
			touch_counter_1 = 0;
     370:	10 92 9d 01 	sts	0x019D, r1	; 0x80019d <touch_counter_1>
			touch_counter_2 = 0;
     374:	10 92 a3 01 	sts	0x01A3, r1	; 0x8001a3 <touch_counter_2>
     378:	08 95       	ret

0000037a <main>:
volatile uint16_t second_counter = 0;
volatile uint16_t second_counter_2 = 0;

int main(void)
{
	atmel_start_init();
     37a:	0e 94 85 00 	call	0x10a	; 0x10a <atmel_start_init>
	cpu_irq_enable();
     37e:	78 94       	sei
	SPI_MasterInit();
     380:	0e 94 b1 00 	call	0x162	; 0x162 <SPI_MasterInit>
	sei();
     384:	78 94       	sei
	while (1)
	{
		loop();
     386:	0e 94 8e 01 	call	0x31c	; 0x31c <loop>
     38a:	fd cf       	rjmp	.-6      	; 0x386 <main+0xc>

0000038c <datastreamer_init>:
Input  : none
Output : none
Notes  :
============================================================================*/
void datastreamer_init(void)
{
     38c:	08 95       	ret

0000038e <datastreamer_transmit>:
Input  : Byte to be transmitted
Output : none
Notes  :
============================================================================*/
void datastreamer_transmit(uint8_t data_byte)
{
     38e:	cf 93       	push	r28
     390:	c8 2f       	mov	r28, r24
	while (!USART_is_tx_ready())
     392:	0e 94 4f 04 	call	0x89e	; 0x89e <USART_is_tx_ready>
     396:	88 23       	and	r24, r24
     398:	e1 f3       	breq	.-8      	; 0x392 <datastreamer_transmit+0x4>
		;

	USART_write(data_byte);
     39a:	8c 2f       	mov	r24, r28
     39c:	0e 94 5f 04 	call	0x8be	; 0x8be <USART_write>

	while (USART_is_tx_busy())
     3a0:	0e 94 55 04 	call	0x8aa	; 0x8aa <USART_is_tx_busy>
     3a4:	81 11       	cpse	r24, r1
     3a6:	fc cf       	rjmp	.-8      	; 0x3a0 <datastreamer_transmit+0x12>
		;
}
     3a8:	cf 91       	pop	r28
     3aa:	08 95       	ret

000003ac <datastreamer_output>:
Output : none
Notes  : The data visualizer scripts that are generated in the project should be
         set on the data visualizer software.
============================================================================*/
void datastreamer_output(void)
{
     3ac:	0f 93       	push	r16
     3ae:	1f 93       	push	r17
     3b0:	cf 93       	push	r28
     3b2:	df 93       	push	r29
     3b4:	00 d0       	rcall	.+0      	; 0x3b6 <datastreamer_output+0xa>
     3b6:	cd b7       	in	r28, 0x3d	; 61
     3b8:	de b7       	in	r29, 0x3e	; 62
	static uint8_t    sequence = 0u;
	uint16_t          u16temp_output;
	uint8_t           u8temp_output, send_header;
	volatile uint16_t count_bytes_out;

	send_header = sequence & (0x0f);
     3ba:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <sequence.2486>
     3be:	8f 70       	andi	r24, 0x0F	; 15
	if (send_header == 0) {
     3c0:	51 f0       	breq	.+20     	; 0x3d6 <datastreamer_output+0x2a>
     3c2:	0e c0       	rjmp	.+28     	; 0x3e0 <datastreamer_output+0x34>
		for (i = 0; i < sizeof(data); i++) {
			datastreamer_transmit(data[i]);
     3c4:	f8 01       	movw	r30, r16
     3c6:	e0 50       	subi	r30, 0x00	; 0
     3c8:	ff 4f       	sbci	r31, 0xFF	; 255
     3ca:	80 81       	ld	r24, Z
     3cc:	0e 94 c7 01 	call	0x38e	; 0x38e <datastreamer_transmit>
	uint8_t           u8temp_output, send_header;
	volatile uint16_t count_bytes_out;

	send_header = sequence & (0x0f);
	if (send_header == 0) {
		for (i = 0; i < sizeof(data); i++) {
     3d0:	0f 5f       	subi	r16, 0xFF	; 255
     3d2:	1f 4f       	sbci	r17, 0xFF	; 255
     3d4:	02 c0       	rjmp	.+4      	; 0x3da <datastreamer_output+0x2e>
     3d6:	00 e0       	ldi	r16, 0x00	; 0
     3d8:	10 e0       	ldi	r17, 0x00	; 0
     3da:	03 31       	cpi	r16, 0x13	; 19
     3dc:	11 05       	cpc	r17, r1
     3de:	90 f3       	brcs	.-28     	; 0x3c4 <datastreamer_output+0x18>
			datastreamer_transmit(data[i]);
		}
	}

	// Start token
	datastreamer_transmit(0x55);
     3e0:	85 e5       	ldi	r24, 0x55	; 85
     3e2:	0e 94 c7 01 	call	0x38e	; 0x38e <datastreamer_transmit>

	// Frame Start
	datastreamer_transmit(sequence);
     3e6:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <sequence.2486>
     3ea:	0e 94 c7 01 	call	0x38e	; 0x38e <datastreamer_transmit>
	for (count_bytes_out = 0u; count_bytes_out < DEF_NUM_CHANNELS; count_bytes_out++) {
     3ee:	1a 82       	std	Y+2, r1	; 0x02
     3f0:	19 82       	std	Y+1, r1	; 0x01
     3f2:	4e c0       	rjmp	.+156    	; 0x490 <__EEPROM_REGION_LENGTH__+0x90>

		/* Signals */
		u16temp_output = get_sensor_node_signal(count_bytes_out);
     3f4:	89 81       	ldd	r24, Y+1	; 0x01
     3f6:	9a 81       	ldd	r25, Y+2	; 0x02
     3f8:	0e 94 14 03 	call	0x628	; 0x628 <get_sensor_node_signal>
     3fc:	19 2f       	mov	r17, r25
		datastreamer_transmit((uint8_t)u16temp_output);
     3fe:	0e 94 c7 01 	call	0x38e	; 0x38e <datastreamer_transmit>
		datastreamer_transmit((uint8_t)(u16temp_output >> 8u));
     402:	81 2f       	mov	r24, r17
     404:	0e 94 c7 01 	call	0x38e	; 0x38e <datastreamer_transmit>

		/* Reference */
		u16temp_output = get_sensor_node_reference(count_bytes_out);
     408:	89 81       	ldd	r24, Y+1	; 0x01
     40a:	9a 81       	ldd	r25, Y+2	; 0x02
     40c:	0e 94 21 03 	call	0x642	; 0x642 <get_sensor_node_reference>
     410:	19 2f       	mov	r17, r25
		datastreamer_transmit((uint8_t)u16temp_output);
     412:	0e 94 c7 01 	call	0x38e	; 0x38e <datastreamer_transmit>
		datastreamer_transmit((uint8_t)(u16temp_output >> 8u));
     416:	81 2f       	mov	r24, r17
     418:	0e 94 c7 01 	call	0x38e	; 0x38e <datastreamer_transmit>

		/* Touch delta */
		temp_int_calc = get_sensor_node_signal(count_bytes_out);
     41c:	89 81       	ldd	r24, Y+1	; 0x01
     41e:	9a 81       	ldd	r25, Y+2	; 0x02
     420:	0e 94 14 03 	call	0x628	; 0x628 <get_sensor_node_signal>
     424:	8c 01       	movw	r16, r24
		temp_int_calc -= get_sensor_node_reference(count_bytes_out);
     426:	89 81       	ldd	r24, Y+1	; 0x01
     428:	9a 81       	ldd	r25, Y+2	; 0x02
     42a:	0e 94 21 03 	call	0x642	; 0x642 <get_sensor_node_reference>
     42e:	08 1b       	sub	r16, r24
     430:	19 0b       	sbc	r17, r25
		u16temp_output = (uint16_t)(temp_int_calc);
		datastreamer_transmit((uint8_t)u16temp_output);
     432:	80 2f       	mov	r24, r16
     434:	0e 94 c7 01 	call	0x38e	; 0x38e <datastreamer_transmit>
		datastreamer_transmit((uint8_t)(u16temp_output >> 8u));
     438:	81 2f       	mov	r24, r17
     43a:	0e 94 c7 01 	call	0x38e	; 0x38e <datastreamer_transmit>

		/* Comp Caps */
		u16temp_output = get_sensor_cc_val(count_bytes_out);
     43e:	89 81       	ldd	r24, Y+1	; 0x01
     440:	9a 81       	ldd	r25, Y+2	; 0x02
     442:	0e 94 2d 03 	call	0x65a	; 0x65a <get_sensor_cc_val>
     446:	19 2f       	mov	r17, r25
		datastreamer_transmit((uint8_t)u16temp_output);
     448:	0e 94 c7 01 	call	0x38e	; 0x38e <datastreamer_transmit>
		datastreamer_transmit((uint8_t)(u16temp_output >> 8u));
     44c:	81 2f       	mov	r24, r17
     44e:	0e 94 c7 01 	call	0x38e	; 0x38e <datastreamer_transmit>

		/* State */
		u8temp_output = get_sensor_state(count_bytes_out);
     452:	89 81       	ldd	r24, Y+1	; 0x01
     454:	9a 81       	ldd	r25, Y+2	; 0x02
     456:	0e 94 3a 03 	call	0x674	; 0x674 <get_sensor_state>
		if (0u != (u8temp_output & 0x80)) {
     45a:	88 23       	and	r24, r24
     45c:	24 f4       	brge	.+8      	; 0x466 <__EEPROM_REGION_LENGTH__+0x66>
			datastreamer_transmit(0x01);
     45e:	81 e0       	ldi	r24, 0x01	; 1
     460:	0e 94 c7 01 	call	0x38e	; 0x38e <datastreamer_transmit>
     464:	03 c0       	rjmp	.+6      	; 0x46c <__EEPROM_REGION_LENGTH__+0x6c>
		} else {
			datastreamer_transmit(0x00);
     466:	80 e0       	ldi	r24, 0x00	; 0
     468:	0e 94 c7 01 	call	0x38e	; 0x38e <datastreamer_transmit>
		}

		/* Threshold */
		datastreamer_transmit(qtlib_key_configs_set1[count_bytes_out].channel_threshold);
     46c:	89 81       	ldd	r24, Y+1	; 0x01
     46e:	9a 81       	ldd	r25, Y+2	; 0x02
     470:	fc 01       	movw	r30, r24
     472:	ee 0f       	add	r30, r30
     474:	ff 1f       	adc	r31, r31
     476:	8e 0f       	add	r24, r30
     478:	9f 1f       	adc	r25, r31
     47a:	fc 01       	movw	r30, r24
     47c:	e5 5e       	subi	r30, 0xE5	; 229
     47e:	fe 4f       	sbci	r31, 0xFE	; 254
     480:	80 81       	ld	r24, Z
     482:	0e 94 c7 01 	call	0x38e	; 0x38e <datastreamer_transmit>
	// Start token
	datastreamer_transmit(0x55);

	// Frame Start
	datastreamer_transmit(sequence);
	for (count_bytes_out = 0u; count_bytes_out < DEF_NUM_CHANNELS; count_bytes_out++) {
     486:	89 81       	ldd	r24, Y+1	; 0x01
     488:	9a 81       	ldd	r25, Y+2	; 0x02
     48a:	01 96       	adiw	r24, 0x01	; 1
     48c:	9a 83       	std	Y+2, r25	; 0x02
     48e:	89 83       	std	Y+1, r24	; 0x01
     490:	89 81       	ldd	r24, Y+1	; 0x01
     492:	9a 81       	ldd	r25, Y+2	; 0x02
     494:	04 97       	sbiw	r24, 0x04	; 4
     496:	08 f4       	brcc	.+2      	; 0x49a <__EEPROM_REGION_LENGTH__+0x9a>
     498:	ad cf       	rjmp	.-166    	; 0x3f4 <datastreamer_output+0x48>
		/* Threshold */
		datastreamer_transmit(qtlib_key_configs_set1[count_bytes_out].channel_threshold);
	}

	/* Other Debug Parameters */
	datastreamer_transmit(module_error_code);
     49a:	80 91 81 01 	lds	r24, 0x0181	; 0x800181 <module_error_code>
     49e:	0e 94 c7 01 	call	0x38e	; 0x38e <datastreamer_transmit>

	/* Frame End */
	datastreamer_transmit(sequence++);
     4a2:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <sequence.2486>
     4a6:	91 e0       	ldi	r25, 0x01	; 1
     4a8:	98 0f       	add	r25, r24
     4aa:	90 93 7e 01 	sts	0x017E, r25	; 0x80017e <sequence.2486>
     4ae:	0e 94 c7 01 	call	0x38e	; 0x38e <datastreamer_transmit>

	/* End token */
	datastreamer_transmit(~0x55);
     4b2:	8a ea       	ldi	r24, 0xAA	; 170
     4b4:	0e 94 c7 01 	call	0x38e	; 0x38e <datastreamer_transmit>
}
     4b8:	0f 90       	pop	r0
     4ba:	0f 90       	pop	r0
     4bc:	df 91       	pop	r29
     4be:	cf 91       	pop	r28
     4c0:	1f 91       	pop	r17
     4c2:	0f 91       	pop	r16
     4c4:	08 95       	ret

000004c6 <touch_ptc_pin_config>:
{
	/* Calibrate Node */
	qtm_calibrate_sensor_node(&qtlib_acq_set1, sensor_node);
	/* Initialize key */
	qtm_init_sensor_key(&qtlib_key_set1, sensor_node, &ptc_qtlib_node_stat1[sensor_node]);
}
     4c6:	82 b1       	in	r24, 0x02	; 2
     4c8:	87 7f       	andi	r24, 0xF7	; 247
     4ca:	82 b9       	out	0x02, r24	; 2
     4cc:	82 b1       	in	r24, 0x02	; 2
     4ce:	8f 7d       	andi	r24, 0xDF	; 223
     4d0:	82 b9       	out	0x02, r24	; 2
     4d2:	82 b1       	in	r24, 0x02	; 2
     4d4:	8b 7f       	andi	r24, 0xFB	; 251
     4d6:	82 b9       	out	0x02, r24	; 2
     4d8:	82 b1       	in	r24, 0x02	; 2
     4da:	8f 7b       	andi	r24, 0xBF	; 191
     4dc:	82 b9       	out	0x02, r24	; 2
     4de:	08 95       	ret

000004e0 <qtm_measure_complete_callback>:
     4e0:	81 e0       	ldi	r24, 0x01	; 1
     4e2:	80 93 83 01 	sts	0x0183, r24	; 0x800183 <touch_postprocess_request>
     4e6:	08 95       	ret

000004e8 <touch_sensors_config>:
     4e8:	cf 93       	push	r28
     4ea:	df 93       	push	r29
     4ec:	81 e3       	ldi	r24, 0x31	; 49
     4ee:	91 e0       	ldi	r25, 0x01	; 1
     4f0:	0e 94 0e 0b 	call	0x161c	; 0x161c <qtm_ptc_init_acquisition_module>
     4f4:	82 ec       	ldi	r24, 0xC2	; 194
     4f6:	91 e0       	ldi	r25, 0x01	; 1
     4f8:	0e 94 9f 0b 	call	0x173e	; 0x173e <qtm_ptc_qtlib_assign_signal_memory>
     4fc:	c0 e0       	ldi	r28, 0x00	; 0
     4fe:	d0 e0       	ldi	r29, 0x00	; 0
     500:	0b c0       	rjmp	.+22     	; 0x518 <touch_sensors_config+0x30>
     502:	be 01       	movw	r22, r28
     504:	81 e3       	ldi	r24, 0x31	; 49
     506:	91 e0       	ldi	r25, 0x01	; 1
     508:	0e 94 a2 0c 	call	0x1944	; 0x1944 <qtm_enable_sensor_node>
     50c:	be 01       	movw	r22, r28
     50e:	81 e3       	ldi	r24, 0x31	; 49
     510:	91 e0       	ldi	r25, 0x01	; 1
     512:	0e 94 c1 0c 	call	0x1982	; 0x1982 <qtm_calibrate_sensor_node>
     516:	21 96       	adiw	r28, 0x01	; 1
     518:	c4 30       	cpi	r28, 0x04	; 4
     51a:	d1 05       	cpc	r29, r1
     51c:	90 f3       	brcs	.-28     	; 0x502 <touch_sensors_config+0x1a>
     51e:	c0 e0       	ldi	r28, 0x00	; 0
     520:	d0 e0       	ldi	r29, 0x00	; 0
     522:	0f c0       	rjmp	.+30     	; 0x542 <touch_sensors_config+0x5a>
     524:	ae 01       	movw	r20, r28
     526:	44 0f       	add	r20, r20
     528:	55 1f       	adc	r21, r21
     52a:	44 0f       	add	r20, r20
     52c:	55 1f       	adc	r21, r21
     52e:	4c 0f       	add	r20, r28
     530:	5d 1f       	adc	r21, r29
     532:	42 55       	subi	r20, 0x52	; 82
     534:	5e 4f       	sbci	r21, 0xFE	; 254
     536:	6c 2f       	mov	r22, r28
     538:	83 e1       	ldi	r24, 0x13	; 19
     53a:	91 e0       	ldi	r25, 0x01	; 1
     53c:	0e 94 da 04 	call	0x9b4	; 0x9b4 <qtm_init_sensor_key>
     540:	21 96       	adiw	r28, 0x01	; 1
     542:	c4 30       	cpi	r28, 0x04	; 4
     544:	d1 05       	cpc	r29, r1
     546:	70 f3       	brcs	.-36     	; 0x524 <touch_sensors_config+0x3c>
     548:	80 e0       	ldi	r24, 0x00	; 0
     54a:	df 91       	pop	r29
     54c:	cf 91       	pop	r28
     54e:	08 95       	ret

00000550 <qtm_error_callback>:
     550:	8f 5f       	subi	r24, 0xFF	; 255
     552:	80 93 81 01 	sts	0x0181, r24	; 0x800181 <module_error_code>
     556:	0e 94 d6 01 	call	0x3ac	; 0x3ac <datastreamer_output>
     55a:	08 95       	ret

0000055c <Timer_set_comp_a>:
     55c:	87 bd       	out	0x27, r24	; 39
     55e:	08 95       	ret

00000560 <touch_init>:
     560:	88 e0       	ldi	r24, 0x08	; 8
     562:	0e 94 ae 02 	call	0x55c	; 0x55c <Timer_set_comp_a>
     566:	e3 e6       	ldi	r30, 0x63	; 99
     568:	f0 e0       	ldi	r31, 0x00	; 0
     56a:	80 81       	ld	r24, Z
     56c:	87 7f       	andi	r24, 0xF7	; 247
     56e:	80 83       	st	Z, r24
     570:	0e 94 63 02 	call	0x4c6	; 0x4c6 <touch_ptc_pin_config>
     574:	0e 94 74 02 	call	0x4e8	; 0x4e8 <touch_sensors_config>
     578:	0e 94 c6 01 	call	0x38c	; 0x38c <datastreamer_init>
     57c:	08 95       	ret

0000057e <touch_process>:
     57e:	80 91 84 01 	lds	r24, 0x0184	; 0x800184 <time_to_measure_touch_flag>
     582:	81 30       	cpi	r24, 0x01	; 1
     584:	51 f4       	brne	.+20     	; 0x59a <touch_process+0x1c>
     586:	60 e7       	ldi	r22, 0x70	; 112
     588:	72 e0       	ldi	r23, 0x02	; 2
     58a:	81 e3       	ldi	r24, 0x31	; 49
     58c:	91 e0       	ldi	r25, 0x01	; 1
     58e:	0e 94 a9 0b 	call	0x1752	; 0x1752 <qtm_ptc_start_measurement_seq>
     592:	81 11       	cpse	r24, r1
     594:	02 c0       	rjmp	.+4      	; 0x59a <touch_process+0x1c>
     596:	10 92 84 01 	sts	0x0184, r1	; 0x800184 <time_to_measure_touch_flag>
     59a:	80 91 83 01 	lds	r24, 0x0183	; 0x800183 <touch_postprocess_request>
     59e:	81 30       	cpi	r24, 0x01	; 1
     5a0:	19 f5       	brne	.+70     	; 0x5e8 <touch_process+0x6a>
     5a2:	10 92 83 01 	sts	0x0183, r1	; 0x800183 <touch_postprocess_request>
     5a6:	0e 94 a7 09 	call	0x134e	; 0x134e <qtm_acquisition_process>
     5aa:	81 11       	cpse	r24, r1
     5ac:	0a c0       	rjmp	.+20     	; 0x5c2 <touch_process+0x44>
     5ae:	83 e1       	ldi	r24, 0x13	; 19
     5b0:	91 e0       	ldi	r25, 0x01	; 1
     5b2:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <qtm_key_sensors_process>
     5b6:	88 23       	and	r24, r24
     5b8:	39 f0       	breq	.+14     	; 0x5c8 <touch_process+0x4a>
     5ba:	81 e0       	ldi	r24, 0x01	; 1
     5bc:	0e 94 a8 02 	call	0x550	; 0x550 <qtm_error_callback>
     5c0:	03 c0       	rjmp	.+6      	; 0x5c8 <touch_process+0x4a>
     5c2:	80 e0       	ldi	r24, 0x00	; 0
     5c4:	0e 94 a8 02 	call	0x550	; 0x550 <qtm_error_callback>
     5c8:	e0 91 13 01 	lds	r30, 0x0113	; 0x800113 <qtlib_key_set1>
     5cc:	f0 91 14 01 	lds	r31, 0x0114	; 0x800114 <qtlib_key_set1+0x1>
     5d0:	80 81       	ld	r24, Z
     5d2:	88 23       	and	r24, r24
     5d4:	24 f4       	brge	.+8      	; 0x5de <touch_process+0x60>
     5d6:	81 e0       	ldi	r24, 0x01	; 1
     5d8:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <time_to_measure_touch_flag>
     5dc:	03 c0       	rjmp	.+6      	; 0x5e4 <touch_process+0x66>
     5de:	81 e0       	ldi	r24, 0x01	; 1
     5e0:	80 93 82 01 	sts	0x0182, r24	; 0x800182 <measurement_done_touch>
     5e4:	0e 94 d6 01 	call	0x3ac	; 0x3ac <datastreamer_output>
     5e8:	08 95       	ret

000005ea <touch_timer_handler>:
     5ea:	81 e0       	ldi	r24, 0x01	; 1
     5ec:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <time_to_measure_touch_flag>
     5f0:	84 e1       	ldi	r24, 0x14	; 20
     5f2:	90 e0       	ldi	r25, 0x00	; 0
     5f4:	0e 94 cf 04 	call	0x99e	; 0x99e <qtm_update_qtlib_timer>
     5f8:	08 95       	ret

000005fa <mega_touch_timer>:
     5fa:	80 91 7f 01 	lds	r24, 0x017F	; 0x80017f <touch_time_counter.2335>
     5fe:	90 91 80 01 	lds	r25, 0x0180	; 0x800180 <touch_time_counter.2335+0x1>
     602:	44 97       	sbiw	r24, 0x14	; 20
     604:	39 f4       	brne	.+14     	; 0x614 <mega_touch_timer+0x1a>
     606:	10 92 80 01 	sts	0x0180, r1	; 0x800180 <touch_time_counter.2335+0x1>
     60a:	10 92 7f 01 	sts	0x017F, r1	; 0x80017f <touch_time_counter.2335>
     60e:	0e 94 f5 02 	call	0x5ea	; 0x5ea <touch_timer_handler>
     612:	08 95       	ret
     614:	80 91 7f 01 	lds	r24, 0x017F	; 0x80017f <touch_time_counter.2335>
     618:	90 91 80 01 	lds	r25, 0x0180	; 0x800180 <touch_time_counter.2335+0x1>
     61c:	01 96       	adiw	r24, 0x01	; 1
     61e:	90 93 80 01 	sts	0x0180, r25	; 0x800180 <touch_time_counter.2335+0x1>
     622:	80 93 7f 01 	sts	0x017F, r24	; 0x80017f <touch_time_counter.2335>
     626:	08 95       	ret

00000628 <get_sensor_node_signal>:
     628:	fc 01       	movw	r30, r24
     62a:	ee 0f       	add	r30, r30
     62c:	ff 1f       	adc	r31, r31
     62e:	ee 0f       	add	r30, r30
     630:	ff 1f       	adc	r31, r31
     632:	8e 0f       	add	r24, r30
     634:	9f 1f       	adc	r25, r31
     636:	fc 01       	movw	r30, r24
     638:	e2 55       	subi	r30, 0x52	; 82
     63a:	fe 4f       	sbci	r31, 0xFE	; 254
     63c:	81 81       	ldd	r24, Z+1	; 0x01
     63e:	92 81       	ldd	r25, Z+2	; 0x02
     640:	08 95       	ret

00000642 <get_sensor_node_reference>:
     642:	fc 01       	movw	r30, r24
     644:	ee 0f       	add	r30, r30
     646:	ff 1f       	adc	r31, r31
     648:	e8 0f       	add	r30, r24
     64a:	f9 1f       	adc	r31, r25
     64c:	ee 0f       	add	r30, r30
     64e:	ff 1f       	adc	r31, r31
     650:	e6 53       	subi	r30, 0x36	; 54
     652:	fe 4f       	sbci	r31, 0xFE	; 254
     654:	84 81       	ldd	r24, Z+4	; 0x04
     656:	95 81       	ldd	r25, Z+5	; 0x05
     658:	08 95       	ret

0000065a <get_sensor_cc_val>:
     65a:	fc 01       	movw	r30, r24
     65c:	ee 0f       	add	r30, r30
     65e:	ff 1f       	adc	r31, r31
     660:	ee 0f       	add	r30, r30
     662:	ff 1f       	adc	r31, r31
     664:	8e 0f       	add	r24, r30
     666:	9f 1f       	adc	r25, r31
     668:	fc 01       	movw	r30, r24
     66a:	e2 55       	subi	r30, 0x52	; 82
     66c:	fe 4f       	sbci	r31, 0xFE	; 254
     66e:	83 81       	ldd	r24, Z+3	; 0x03
     670:	94 81       	ldd	r25, Z+4	; 0x04
     672:	08 95       	ret

00000674 <get_sensor_state>:
     674:	e0 91 17 01 	lds	r30, 0x0117	; 0x800117 <qtlib_key_set1+0x4>
     678:	f0 91 18 01 	lds	r31, 0x0118	; 0x800118 <qtlib_key_set1+0x5>
     67c:	9c 01       	movw	r18, r24
     67e:	22 0f       	add	r18, r18
     680:	33 1f       	adc	r19, r19
     682:	82 0f       	add	r24, r18
     684:	93 1f       	adc	r25, r19
     686:	88 0f       	add	r24, r24
     688:	99 1f       	adc	r25, r25
     68a:	e8 0f       	add	r30, r24
     68c:	f9 1f       	adc	r31, r25
     68e:	80 81       	ld	r24, Z
     690:	08 95       	ret

00000692 <__vector_39>:
Input  : none
Output : none
Notes  : none
============================================================================*/
ISR(PTC_EOC_vect)
{
     692:	1f 92       	push	r1
     694:	0f 92       	push	r0
     696:	0f b6       	in	r0, 0x3f	; 63
     698:	0f 92       	push	r0
     69a:	11 24       	eor	r1, r1
     69c:	2f 93       	push	r18
     69e:	3f 93       	push	r19
     6a0:	4f 93       	push	r20
     6a2:	5f 93       	push	r21
     6a4:	6f 93       	push	r22
     6a6:	7f 93       	push	r23
     6a8:	8f 93       	push	r24
     6aa:	9f 93       	push	r25
     6ac:	af 93       	push	r26
     6ae:	bf 93       	push	r27
     6b0:	ef 93       	push	r30
     6b2:	ff 93       	push	r31
	qtm_m324pb_ptc_handler_eoc();
     6b4:	0e 94 01 0d 	call	0x1a02	; 0x1a02 <qtm_m324pb_ptc_handler_eoc>
}
     6b8:	ff 91       	pop	r31
     6ba:	ef 91       	pop	r30
     6bc:	bf 91       	pop	r27
     6be:	af 91       	pop	r26
     6c0:	9f 91       	pop	r25
     6c2:	8f 91       	pop	r24
     6c4:	7f 91       	pop	r23
     6c6:	6f 91       	pop	r22
     6c8:	5f 91       	pop	r21
     6ca:	4f 91       	pop	r20
     6cc:	3f 91       	pop	r19
     6ce:	2f 91       	pop	r18
     6d0:	0f 90       	pop	r0
     6d2:	0f be       	out	0x3f, r0	; 63
     6d4:	0f 90       	pop	r0
     6d6:	1f 90       	pop	r1
     6d8:	18 95       	reti

000006da <SPI_0_initialization>:
 */
static inline void PORTB_set_pin_dir(const uint8_t pin, const enum port_dir direction)
{
	switch (direction) {
	case PORT_DIR_IN:
		DDRB &= ~(1 << pin);
     6da:	84 b1       	in	r24, 0x04	; 4
     6dc:	8f 7b       	andi	r24, 0xBF	; 191
     6de:	84 b9       	out	0x04, r24	; 4
		DDRB &= ~(1 << pin);

		PORTB |= 1 << pin;
	} else if (pull_mode == PORT_PULL_OFF) {

		PORTB &= ~(1 << pin);
     6e0:	85 b1       	in	r24, 0x05	; 5
     6e2:	8f 7b       	andi	r24, 0xBF	; 191
     6e4:	85 b9       	out	0x05, r24	; 5
	switch (direction) {
	case PORT_DIR_IN:
		DDRB &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		DDRB |= 1 << pin;
     6e6:	84 b1       	in	r24, 0x04	; 4
     6e8:	80 62       	ori	r24, 0x20	; 32
     6ea:	84 b9       	out	0x04, r24	; 4
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level) {
		PORTB |= 1 << pin;
	} else {
		PORTB &= ~(1 << pin);
     6ec:	85 b1       	in	r24, 0x05	; 5
     6ee:	8f 7d       	andi	r24, 0xDF	; 223
     6f0:	85 b9       	out	0x05, r24	; 5
	switch (direction) {
	case PORT_DIR_IN:
		DDRB &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		DDRB |= 1 << pin;
     6f2:	84 b1       	in	r24, 0x04	; 4
     6f4:	80 68       	ori	r24, 0x80	; 128
     6f6:	84 b9       	out	0x04, r24	; 4
static inline void PORTB_set_pin_level(const uint8_t pin, const bool level)
{
	if (level) {
		PORTB |= 1 << pin;
	} else {
		PORTB &= ~(1 << pin);
     6f8:	85 b1       	in	r24, 0x05	; 5
     6fa:	8f 77       	andi	r24, 0x7F	; 127
     6fc:	85 b9       	out	0x05, r24	; 5
	    // <id> pad_initial_level
	    // <false"> Low
	    // <true"> High
	    false);

	SPI_0_init();
     6fe:	0e 94 cf 03 	call	0x79e	; 0x79e <SPI_0_init>
     702:	08 95       	ret

00000704 <Timer_initialization>:
}

void Timer_initialization(void)
{

	Timer_init();
     704:	0e 94 31 04 	call	0x862	; 0x862 <Timer_init>
     708:	08 95       	ret

0000070a <TIMER_0_initialization>:
}

void TIMER_0_initialization(void)
{

	TIMER_0_init();
     70a:	0e 94 2a 04 	call	0x854	; 0x854 <TIMER_0_init>
     70e:	08 95       	ret

00000710 <USART_initialization>:
 */
static inline void PORTD_set_pin_dir(const uint8_t pin, const enum port_dir direction)
{
	switch (direction) {
	case PORT_DIR_IN:
		DDRD &= ~(1 << pin);
     710:	8a b1       	in	r24, 0x0a	; 10
     712:	8e 7f       	andi	r24, 0xFE	; 254
     714:	8a b9       	out	0x0a, r24	; 10
		DDRD &= ~(1 << pin);

		PORTD |= 1 << pin;
	} else if (pull_mode == PORT_PULL_OFF) {

		PORTD &= ~(1 << pin);
     716:	8b b1       	in	r24, 0x0b	; 11
     718:	8e 7f       	andi	r24, 0xFE	; 254
     71a:	8b b9       	out	0x0b, r24	; 11
	switch (direction) {
	case PORT_DIR_IN:
		DDRD &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		DDRD |= 1 << pin;
     71c:	8a b1       	in	r24, 0x0a	; 10
     71e:	82 60       	ori	r24, 0x02	; 2
     720:	8a b9       	out	0x0a, r24	; 10
static inline void PORTD_set_pin_level(const uint8_t pin, const bool level)
{
	if (level) {
		PORTD |= 1 << pin;
	} else {
		PORTD &= ~(1 << pin);
     722:	8b b1       	in	r24, 0x0b	; 11
     724:	8d 7f       	andi	r24, 0xFD	; 253
     726:	8b b9       	out	0x0b, r24	; 11
	    // <id> pad_initial_level
	    // <false"> Low
	    // <true"> High
	    false);

	USART_init();
     728:	0e 94 3e 04 	call	0x87c	; 0x87c <USART_init>
     72c:	08 95       	ret

0000072e <system_init>:
{
	/* On AVR devices all peripherals are enabled from power on reset, this
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	PRR1 = (1 << PRTIM4) | (1 << PRTIM3);
     72e:	83 e0       	ldi	r24, 0x03	; 3
     730:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <__TEXT_REGION_LENGTH__+0x7f8065>

	PRR0 = (1 << PRTIM2) | (1 << PRTIM0) | (1 << PRTIM1) | (1 << PRTWI0) | (1 << PRUSART1) | (1 << PRUSART0)
     734:	8f ef       	ldi	r24, 0xFF	; 255
     736:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7f8064>
	       | (1 << PRADC) | (1 << PRSPI0);

	PRR2 = (1 << PRUSART2) | (1 << PRSPI1) | (1 << PRPTC) | (1 << PRTWI1);
     73a:	9f e0       	ldi	r25, 0x0F	; 15
     73c:	90 93 63 00 	sts	0x0063, r25	; 0x800063 <__TEXT_REGION_LENGTH__+0x7f8063>
		break;
	case PORT_DIR_OUT:
		DDRA |= mask;
		break;
	case PORT_DIR_OFF:
		DDRA &= ~mask;
     740:	91 b1       	in	r25, 0x01	; 1
     742:	11 b8       	out	0x01, r1	; 1

		PORTA |= mask;
     744:	92 b1       	in	r25, 0x02	; 2
     746:	82 b9       	out	0x02, r24	; 2
		break;
	case PORT_DIR_OUT:
		DDRB |= mask;
		break;
	case PORT_DIR_OFF:
		DDRB &= ~mask;
     748:	94 b1       	in	r25, 0x04	; 4
     74a:	14 b8       	out	0x04, r1	; 4

		PORTB |= mask;
     74c:	95 b1       	in	r25, 0x05	; 5
     74e:	85 b9       	out	0x05, r24	; 5
		break;
	case PORT_DIR_OUT:
		DDRC |= mask;
		break;
	case PORT_DIR_OFF:
		DDRC &= ~mask;
     750:	97 b1       	in	r25, 0x07	; 7
     752:	17 b8       	out	0x07, r1	; 7

		PORTC |= mask;
     754:	98 b1       	in	r25, 0x08	; 8
     756:	88 b9       	out	0x08, r24	; 8
		break;
	case PORT_DIR_OUT:
		DDRD |= mask;
		break;
	case PORT_DIR_OFF:
		DDRD &= ~mask;
     758:	9a b1       	in	r25, 0x0a	; 10
     75a:	1a b8       	out	0x0a, r1	; 10

		PORTD |= mask;
     75c:	9b b1       	in	r25, 0x0b	; 11
     75e:	8b b9       	out	0x0b, r24	; 11
		break;
	case PORT_DIR_OUT:
		DDRE |= mask;
		break;
	case PORT_DIR_OFF:
		DDRE &= ~mask;
     760:	8d b1       	in	r24, 0x0d	; 13
     762:	80 78       	andi	r24, 0x80	; 128
     764:	8d b9       	out	0x0d, r24	; 13

		PORTE |= mask;
     766:	8e b1       	in	r24, 0x0e	; 14
     768:	8f 67       	ori	r24, 0x7F	; 127
     76a:	8e b9       	out	0x0e, r24	; 14
 * \return Initialization status.
 */
static inline int8_t sysctrl_init()
{
	/* Set up system clock prescaler according to configuration */
	protected_write_io((void *)&CLKPR, 1 << CLKPCE, (0 << CLKPS3) | (0 << CLKPS2) | (0 << CLKPS1) | (0 << CLKPS0));
     76c:	40 e0       	ldi	r20, 0x00	; 0
     76e:	60 e8       	ldi	r22, 0x80	; 128
     770:	81 e6       	ldi	r24, 0x61	; 97
     772:	90 e0       	ldi	r25, 0x00	; 0
     774:	0e 94 c8 03 	call	0x790	; 0x790 <protected_write_io>

	SMCR = (0 << SM2) | (0 << SM1) | (0 << SM0) | // Idle
     778:	13 be       	out	0x33, r1	; 51
	       (0 << SE);

	MCUCR = (0 << PUD);
     77a:	15 be       	out	0x35, r1	; 53

	ENABLE_INTERRUPTS();
     77c:	78 94       	sei
{
	mcu_init();

	sysctrl_init();

	SPI_0_initialization();
     77e:	0e 94 6d 03 	call	0x6da	; 0x6da <SPI_0_initialization>

	Timer_initialization();
     782:	0e 94 82 03 	call	0x704	; 0x704 <Timer_initialization>

	TIMER_0_initialization();
     786:	0e 94 85 03 	call	0x70a	; 0x70a <TIMER_0_initialization>

	USART_initialization();
     78a:	0e 94 88 03 	call	0x710	; 0x710 <USART_initialization>
     78e:	08 95       	ret

00000790 <protected_write_io>:
     790:	2f b7       	in	r18, 0x3f	; 63
     792:	f8 94       	cli
     794:	fc 01       	movw	r30, r24
     796:	60 83       	st	Z, r22
     798:	40 83       	st	Z, r20
     79a:	2f bf       	out	0x3f, r18	; 63
     79c:	08 95       	ret

0000079e <SPI_0_init>:
     79e:	e4 e6       	ldi	r30, 0x64	; 100
     7a0:	f0 e0       	ldi	r31, 0x00	; 0
     7a2:	80 81       	ld	r24, Z
     7a4:	8b 7f       	andi	r24, 0xFB	; 251
     7a6:	80 83       	st	Z, r24
     7a8:	80 ed       	ldi	r24, 0xD0	; 208
     7aa:	8c bd       	out	0x2c, r24	; 44
     7ac:	e5 e8       	ldi	r30, 0x85	; 133
     7ae:	f1 e0       	ldi	r31, 0x01	; 1
     7b0:	10 82       	st	Z, r1
     7b2:	16 82       	std	Z+6, r1	; 0x06
     7b4:	15 82       	std	Z+5, r1	; 0x05
     7b6:	08 95       	ret

000007b8 <__vector_19>:
     7b8:	1f 92       	push	r1
     7ba:	0f 92       	push	r0
     7bc:	0f b6       	in	r0, 0x3f	; 63
     7be:	0f 92       	push	r0
     7c0:	11 24       	eor	r1, r1
     7c2:	2f 93       	push	r18
     7c4:	3f 93       	push	r19
     7c6:	4f 93       	push	r20
     7c8:	5f 93       	push	r21
     7ca:	6f 93       	push	r22
     7cc:	7f 93       	push	r23
     7ce:	8f 93       	push	r24
     7d0:	9f 93       	push	r25
     7d2:	af 93       	push	r26
     7d4:	bf 93       	push	r27
     7d6:	ef 93       	push	r30
     7d8:	ff 93       	push	r31
     7da:	9e b5       	in	r25, 0x2e	; 46
     7dc:	80 91 89 01 	lds	r24, 0x0189	; 0x800189 <SPI_0_desc+0x4>
     7e0:	82 30       	cpi	r24, 0x02	; 2
     7e2:	29 f0       	breq	.+10     	; 0x7ee <__vector_19+0x36>
     7e4:	e0 91 86 01 	lds	r30, 0x0186	; 0x800186 <SPI_0_desc+0x1>
     7e8:	f0 91 87 01 	lds	r31, 0x0187	; 0x800187 <SPI_0_desc+0x2>
     7ec:	90 83       	st	Z, r25
     7ee:	e5 e8       	ldi	r30, 0x85	; 133
     7f0:	f1 e0       	ldi	r31, 0x01	; 1
     7f2:	a1 81       	ldd	r26, Z+1	; 0x01
     7f4:	b2 81       	ldd	r27, Z+2	; 0x02
     7f6:	9d 01       	movw	r18, r26
     7f8:	2f 5f       	subi	r18, 0xFF	; 255
     7fa:	3f 4f       	sbci	r19, 0xFF	; 255
     7fc:	32 83       	std	Z+2, r19	; 0x02
     7fe:	21 83       	std	Z+1, r18	; 0x01
     800:	81 30       	cpi	r24, 0x01	; 1
     802:	19 f0       	breq	.+6      	; 0x80a <__DATA_REGION_LENGTH__+0xa>
     804:	11 96       	adiw	r26, 0x01	; 1
     806:	9c 91       	ld	r25, X
     808:	01 c0       	rjmp	.+2      	; 0x80c <__DATA_REGION_LENGTH__+0xc>
     80a:	90 e0       	ldi	r25, 0x00	; 0
     80c:	e5 e8       	ldi	r30, 0x85	; 133
     80e:	f1 e0       	ldi	r31, 0x01	; 1
     810:	83 81       	ldd	r24, Z+3	; 0x03
     812:	81 50       	subi	r24, 0x01	; 1
     814:	83 83       	std	Z+3, r24	; 0x03
     816:	88 23       	and	r24, r24
     818:	11 f0       	breq	.+4      	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
     81a:	9e bd       	out	0x2e, r25	; 46
     81c:	0a c0       	rjmp	.+20     	; 0x832 <__DATA_REGION_LENGTH__+0x32>
     81e:	e5 e8       	ldi	r30, 0x85	; 133
     820:	f1 e0       	ldi	r31, 0x01	; 1
     822:	83 e0       	ldi	r24, 0x03	; 3
     824:	80 83       	st	Z, r24
     826:	05 80       	ldd	r0, Z+5	; 0x05
     828:	f6 81       	ldd	r31, Z+6	; 0x06
     82a:	e0 2d       	mov	r30, r0
     82c:	30 97       	sbiw	r30, 0x00	; 0
     82e:	09 f0       	breq	.+2      	; 0x832 <__DATA_REGION_LENGTH__+0x32>
     830:	09 95       	icall
     832:	ff 91       	pop	r31
     834:	ef 91       	pop	r30
     836:	bf 91       	pop	r27
     838:	af 91       	pop	r26
     83a:	9f 91       	pop	r25
     83c:	8f 91       	pop	r24
     83e:	7f 91       	pop	r23
     840:	6f 91       	pop	r22
     842:	5f 91       	pop	r21
     844:	4f 91       	pop	r20
     846:	3f 91       	pop	r19
     848:	2f 91       	pop	r18
     84a:	0f 90       	pop	r0
     84c:	0f be       	out	0x3f, r0	; 63
     84e:	0f 90       	pop	r0
     850:	1f 90       	pop	r1
     852:	18 95       	reti

00000854 <TIMER_0_init>:
     854:	e4 e6       	ldi	r30, 0x64	; 100
     856:	f0 e0       	ldi	r31, 0x00	; 0
     858:	80 81       	ld	r24, Z
     85a:	87 7f       	andi	r24, 0xF7	; 247
     85c:	80 83       	st	Z, r24
     85e:	80 e0       	ldi	r24, 0x00	; 0
     860:	08 95       	ret

00000862 <Timer_init>:
     862:	e4 e6       	ldi	r30, 0x64	; 100
     864:	f0 e0       	ldi	r31, 0x00	; 0
     866:	80 81       	ld	r24, Z
     868:	8f 7d       	andi	r24, 0xDF	; 223
     86a:	80 83       	st	Z, r24
     86c:	82 e0       	ldi	r24, 0x02	; 2
     86e:	84 bd       	out	0x24, r24	; 36
     870:	95 e0       	ldi	r25, 0x05	; 5
     872:	95 bd       	out	0x25, r25	; 37
     874:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>
     878:	80 e0       	ldi	r24, 0x00	; 0
     87a:	08 95       	ret

0000087c <USART_init>:
uint8_t USART_read()
{
	while (!(UCSR0A & (1 << RXC)))
		;
	return UDR0;
}
     87c:	e4 e6       	ldi	r30, 0x64	; 100
     87e:	f0 e0       	ldi	r31, 0x00	; 0
     880:	80 81       	ld	r24, Z
     882:	8d 7f       	andi	r24, 0xFD	; 253
     884:	80 83       	st	Z, r24
     886:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
     88a:	8c e0       	ldi	r24, 0x0C	; 12
     88c:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
     890:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     894:	88 e0       	ldi	r24, 0x08	; 8
     896:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
     89a:	80 e0       	ldi	r24, 0x00	; 0
     89c:	08 95       	ret

0000089e <USART_is_tx_ready>:
     89e:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     8a2:	85 fb       	bst	r24, 5
     8a4:	88 27       	eor	r24, r24
     8a6:	80 f9       	bld	r24, 0
     8a8:	08 95       	ret

000008aa <USART_is_tx_busy>:
     8aa:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     8ae:	82 95       	swap	r24
     8b0:	86 95       	lsr	r24
     8b2:	86 95       	lsr	r24
     8b4:	83 70       	andi	r24, 0x03	; 3
     8b6:	91 e0       	ldi	r25, 0x01	; 1
     8b8:	89 27       	eor	r24, r25
     8ba:	81 70       	andi	r24, 0x01	; 1
     8bc:	08 95       	ret

000008be <USART_write>:
 *
 * \return Nothing
 */
void USART_write(const uint8_t data)
{
	while (!(UCSR0A & (1 << UDRE)))
     8be:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     8c2:	95 ff       	sbrs	r25, 5
     8c4:	fc cf       	rjmp	.-8      	; 0x8be <USART_write>
		;
	UDR0 = data;
     8c6:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
     8ca:	08 95       	ret

000008cc <check_for_aks_block>:
     8cc:	cf 92       	push	r12
     8ce:	df 92       	push	r13
     8d0:	ff 92       	push	r15
     8d2:	0f 93       	push	r16
     8d4:	1f 93       	push	r17
     8d6:	cf 93       	push	r28
     8d8:	df 93       	push	r29
     8da:	ec 01       	movw	r28, r24
     8dc:	ae 81       	ldd	r26, Y+6	; 0x06
     8de:	bf 81       	ldd	r27, Y+7	; 0x07
     8e0:	eb 01       	movw	r28, r22
     8e2:	cc 0f       	add	r28, r28
     8e4:	dd 1f       	adc	r29, r29
     8e6:	c6 0f       	add	r28, r22
     8e8:	d7 1f       	adc	r29, r23
     8ea:	ca 0f       	add	r28, r26
     8ec:	db 1f       	adc	r29, r27
     8ee:	fa 80       	ldd	r15, Y+2	; 0x02
     8f0:	fc 01       	movw	r30, r24
     8f2:	44 81       	ldd	r20, Z+4	; 0x04
     8f4:	55 81       	ldd	r21, Z+5	; 0x05
     8f6:	e6 e0       	ldi	r30, 0x06	; 6
     8f8:	e6 9f       	mul	r30, r22
     8fa:	90 01       	movw	r18, r0
     8fc:	e7 9f       	mul	r30, r23
     8fe:	30 0d       	add	r19, r0
     900:	11 24       	eor	r1, r1
     902:	8a 01       	movw	r16, r20
     904:	02 0f       	add	r16, r18
     906:	13 1f       	adc	r17, r19
     908:	f8 01       	movw	r30, r16
     90a:	22 81       	ldd	r18, Z+2	; 0x02
     90c:	33 81       	ldd	r19, Z+3	; 0x03
     90e:	f9 01       	movw	r30, r18
     910:	21 81       	ldd	r18, Z+1	; 0x01
     912:	32 81       	ldd	r19, Z+2	; 0x02
     914:	f8 01       	movw	r30, r16
     916:	04 81       	ldd	r16, Z+4	; 0x04
     918:	15 81       	ldd	r17, Z+5	; 0x05
     91a:	20 1b       	sub	r18, r16
     91c:	31 0b       	sbc	r19, r17
     91e:	e8 81       	ld	r30, Y
     920:	2e 1b       	sub	r18, r30
     922:	31 09       	sbc	r19, r1
     924:	ec 01       	movw	r28, r24
     926:	ea 81       	ldd	r30, Y+2	; 0x02
     928:	fb 81       	ldd	r31, Y+3	; 0x03
     92a:	00 81       	ld	r16, Z
     92c:	11 81       	ldd	r17, Z+1	; 0x01
     92e:	fa 01       	movw	r30, r20
     930:	40 e0       	ldi	r20, 0x00	; 0
     932:	50 e0       	ldi	r21, 0x00	; 0
     934:	40 17       	cp	r20, r16
     936:	51 07       	cpc	r21, r17
     938:	39 f1       	breq	.+78     	; 0x988 <__stack+0x89>
     93a:	46 17       	cp	r20, r22
     93c:	57 07       	cpc	r21, r23
     93e:	f9 f0       	breq	.+62     	; 0x97e <__stack+0x7f>
     940:	12 96       	adiw	r26, 0x02	; 2
     942:	8c 91       	ld	r24, X
     944:	12 97       	sbiw	r26, 0x02	; 2
     946:	f8 12       	cpse	r15, r24
     948:	1a c0       	rjmp	.+52     	; 0x97e <__stack+0x7f>
     94a:	80 81       	ld	r24, Z
     94c:	85 58       	subi	r24, 0x85	; 133
     94e:	82 30       	cpi	r24, 0x02	; 2
     950:	e8 f0       	brcs	.+58     	; 0x98c <__stack+0x8d>
     952:	c4 80       	ldd	r12, Z+4	; 0x04
     954:	d5 80       	ldd	r13, Z+5	; 0x05
     956:	82 81       	ldd	r24, Z+2	; 0x02
     958:	93 81       	ldd	r25, Z+3	; 0x03
     95a:	ec 01       	movw	r28, r24
     95c:	89 81       	ldd	r24, Y+1	; 0x01
     95e:	9a 81       	ldd	r25, Y+2	; 0x02
     960:	c8 16       	cp	r12, r24
     962:	d9 06       	cpc	r13, r25
     964:	60 f4       	brcc	.+24     	; 0x97e <__stack+0x7f>
     966:	8c 19       	sub	r24, r12
     968:	9d 09       	sbc	r25, r13
     96a:	cc 91       	ld	r28, X
     96c:	d0 e0       	ldi	r29, 0x00	; 0
     96e:	c8 17       	cp	r28, r24
     970:	d9 07       	cpc	r29, r25
     972:	28 f4       	brcc	.+10     	; 0x97e <__stack+0x7f>
     974:	8c 1b       	sub	r24, r28
     976:	9d 0b       	sbc	r25, r29
     978:	28 17       	cp	r18, r24
     97a:	39 07       	cpc	r19, r25
     97c:	38 f0       	brcs	.+14     	; 0x98c <__stack+0x8d>
     97e:	4f 5f       	subi	r20, 0xFF	; 255
     980:	5f 4f       	sbci	r21, 0xFF	; 255
     982:	13 96       	adiw	r26, 0x03	; 3
     984:	36 96       	adiw	r30, 0x06	; 6
     986:	d6 cf       	rjmp	.-84     	; 0x934 <__stack+0x35>
     988:	80 e0       	ldi	r24, 0x00	; 0
     98a:	01 c0       	rjmp	.+2      	; 0x98e <__stack+0x8f>
     98c:	81 e0       	ldi	r24, 0x01	; 1
     98e:	df 91       	pop	r29
     990:	cf 91       	pop	r28
     992:	1f 91       	pop	r17
     994:	0f 91       	pop	r16
     996:	ff 90       	pop	r15
     998:	df 90       	pop	r13
     99a:	cf 90       	pop	r12
     99c:	08 95       	ret

0000099e <qtm_update_qtlib_timer>:
     99e:	20 91 8c 01 	lds	r18, 0x018C	; 0x80018c <qtm_local_ms_timecount>
     9a2:	30 91 8d 01 	lds	r19, 0x018D	; 0x80018d <qtm_local_ms_timecount+0x1>
     9a6:	82 0f       	add	r24, r18
     9a8:	93 1f       	adc	r25, r19
     9aa:	90 93 8d 01 	sts	0x018D, r25	; 0x80018d <qtm_local_ms_timecount+0x1>
     9ae:	80 93 8c 01 	sts	0x018C, r24	; 0x80018c <qtm_local_ms_timecount>
     9b2:	08 95       	ret

000009b4 <qtm_init_sensor_key>:
     9b4:	00 97       	sbiw	r24, 0x00	; 0
     9b6:	d9 f0       	breq	.+54     	; 0x9ee <qtm_init_sensor_key+0x3a>
     9b8:	41 15       	cp	r20, r1
     9ba:	51 05       	cpc	r21, r1
     9bc:	c1 f0       	breq	.+48     	; 0x9ee <qtm_init_sensor_key+0x3a>
     9be:	26 e0       	ldi	r18, 0x06	; 6
     9c0:	62 9f       	mul	r22, r18
     9c2:	b0 01       	movw	r22, r0
     9c4:	11 24       	eor	r1, r1
     9c6:	dc 01       	movw	r26, r24
     9c8:	14 96       	adiw	r26, 0x04	; 4
     9ca:	ed 91       	ld	r30, X+
     9cc:	fc 91       	ld	r31, X
     9ce:	15 97       	sbiw	r26, 0x05	; 5
     9d0:	e6 0f       	add	r30, r22
     9d2:	f7 1f       	adc	r31, r23
     9d4:	21 e0       	ldi	r18, 0x01	; 1
     9d6:	20 83       	st	Z, r18
     9d8:	14 96       	adiw	r26, 0x04	; 4
     9da:	8d 91       	ld	r24, X+
     9dc:	9c 91       	ld	r25, X
     9de:	15 97       	sbiw	r26, 0x05	; 5
     9e0:	fc 01       	movw	r30, r24
     9e2:	e6 0f       	add	r30, r22
     9e4:	f7 1f       	adc	r31, r23
     9e6:	53 83       	std	Z+3, r21	; 0x03
     9e8:	42 83       	std	Z+2, r20	; 0x02
     9ea:	80 e0       	ldi	r24, 0x00	; 0
     9ec:	08 95       	ret
     9ee:	8b e0       	ldi	r24, 0x0B	; 11
     9f0:	08 95       	ret

000009f2 <qtm_key_sensors_process>:
     9f2:	2f 92       	push	r2
     9f4:	3f 92       	push	r3
     9f6:	4f 92       	push	r4
     9f8:	5f 92       	push	r5
     9fa:	6f 92       	push	r6
     9fc:	7f 92       	push	r7
     9fe:	8f 92       	push	r8
     a00:	9f 92       	push	r9
     a02:	af 92       	push	r10
     a04:	bf 92       	push	r11
     a06:	cf 92       	push	r12
     a08:	df 92       	push	r13
     a0a:	ef 92       	push	r14
     a0c:	ff 92       	push	r15
     a0e:	0f 93       	push	r16
     a10:	1f 93       	push	r17
     a12:	cf 93       	push	r28
     a14:	df 93       	push	r29
     a16:	00 97       	sbiw	r24, 0x00	; 0
     a18:	09 f4       	brne	.+2      	; 0xa1c <qtm_key_sensors_process+0x2a>
     a1a:	7e c3       	rjmp	.+1788   	; 0x1118 <qtm_key_sensors_process+0x726>
     a1c:	ec 01       	movw	r28, r24
     a1e:	a1 2c       	mov	r10, r1
     a20:	b1 2c       	mov	r11, r1
     a22:	81 2c       	mov	r8, r1
     a24:	91 2c       	mov	r9, r1
     a26:	21 2c       	mov	r2, r1
     a28:	d1 2c       	mov	r13, r1
     a2a:	55 24       	eor	r5, r5
     a2c:	53 94       	inc	r5
     a2e:	33 e0       	ldi	r19, 0x03	; 3
     a30:	c3 2e       	mov	r12, r19
     a32:	45 e8       	ldi	r20, 0x85	; 133
     a34:	64 2e       	mov	r6, r20
     a36:	56 e8       	ldi	r21, 0x86	; 134
     a38:	75 2e       	mov	r7, r21
     a3a:	62 e0       	ldi	r22, 0x02	; 2
     a3c:	36 2e       	mov	r3, r22
     a3e:	78 e0       	ldi	r23, 0x08	; 8
     a40:	47 2e       	mov	r4, r23
     a42:	ea 81       	ldd	r30, Y+2	; 0x02
     a44:	fb 81       	ldd	r31, Y+3	; 0x03
     a46:	80 81       	ld	r24, Z
     a48:	91 81       	ldd	r25, Z+1	; 0x01
     a4a:	88 16       	cp	r8, r24
     a4c:	99 06       	cpc	r9, r25
     a4e:	08 f0       	brcs	.+2      	; 0xa52 <qtm_key_sensors_process+0x60>
     a50:	a6 c1       	rjmp	.+844    	; 0xd9e <qtm_key_sensors_process+0x3ac>
     a52:	75 01       	movw	r14, r10
     a54:	ee 0c       	add	r14, r14
     a56:	ff 1c       	adc	r15, r15
     a58:	ec 81       	ldd	r30, Y+4	; 0x04
     a5a:	fd 81       	ldd	r31, Y+5	; 0x05
     a5c:	ee 0d       	add	r30, r14
     a5e:	ff 1d       	adc	r31, r15
     a60:	a2 81       	ldd	r26, Z+2	; 0x02
     a62:	b3 81       	ldd	r27, Z+3	; 0x03
     a64:	9c 91       	ld	r25, X
     a66:	9e 71       	andi	r25, 0x1E	; 30
     a68:	09 f0       	breq	.+2      	; 0xa6c <qtm_key_sensors_process+0x7a>
     a6a:	50 82       	st	Z, r5
     a6c:	0c 81       	ldd	r16, Y+4	; 0x04
     a6e:	1d 81       	ldd	r17, Y+5	; 0x05
     a70:	0e 0d       	add	r16, r14
     a72:	1f 1d       	adc	r17, r15
     a74:	d8 01       	movw	r26, r16
     a76:	8c 91       	ld	r24, X
     a78:	84 30       	cpi	r24, 0x04	; 4
     a7a:	09 f4       	brne	.+2      	; 0xa7e <qtm_key_sensors_process+0x8c>
     a7c:	9e c0       	rjmp	.+316    	; 0xbba <qtm_key_sensors_process+0x1c8>
     a7e:	38 f4       	brcc	.+14     	; 0xa8e <qtm_key_sensors_process+0x9c>
     a80:	82 30       	cpi	r24, 0x02	; 2
     a82:	d1 f0       	breq	.+52     	; 0xab8 <qtm_key_sensors_process+0xc6>
     a84:	08 f0       	brcs	.+2      	; 0xa88 <qtm_key_sensors_process+0x96>
     a86:	45 c0       	rjmp	.+138    	; 0xb12 <qtm_key_sensors_process+0x120>
     a88:	81 30       	cpi	r24, 0x01	; 1
     a8a:	59 f0       	breq	.+22     	; 0xaa2 <qtm_key_sensors_process+0xb0>
     a8c:	81 c1       	rjmp	.+770    	; 0xd90 <qtm_key_sensors_process+0x39e>
     a8e:	85 38       	cpi	r24, 0x85	; 133
     a90:	09 f4       	brne	.+2      	; 0xa94 <qtm_key_sensors_process+0xa2>
     a92:	bf c0       	rjmp	.+382    	; 0xc12 <qtm_key_sensors_process+0x220>
     a94:	86 38       	cpi	r24, 0x86	; 134
     a96:	09 f4       	brne	.+2      	; 0xa9a <qtm_key_sensors_process+0xa8>
     a98:	f5 c0       	rjmp	.+490    	; 0xc84 <qtm_key_sensors_process+0x292>
     a9a:	87 30       	cpi	r24, 0x07	; 7
     a9c:	09 f0       	breq	.+2      	; 0xaa0 <qtm_key_sensors_process+0xae>
     a9e:	78 c1       	rjmp	.+752    	; 0xd90 <qtm_key_sensors_process+0x39e>
     aa0:	36 c1       	rjmp	.+620    	; 0xd0e <qtm_key_sensors_process+0x31c>
     aa2:	91 11       	cpse	r25, r1
     aa4:	67 c1       	rjmp	.+718    	; 0xd74 <qtm_key_sensors_process+0x382>
     aa6:	f8 01       	movw	r30, r16
     aa8:	30 82       	st	Z, r3
     aaa:	8c 81       	ldd	r24, Y+4	; 0x04
     aac:	9d 81       	ldd	r25, Y+5	; 0x05
     aae:	fc 01       	movw	r30, r24
     ab0:	ee 0d       	add	r30, r14
     ab2:	ff 1d       	adc	r31, r15
     ab4:	41 82       	std	Z+1, r4	; 0x01
     ab6:	5e c1       	rjmp	.+700    	; 0xd74 <qtm_key_sensors_process+0x382>
     ab8:	d8 01       	movw	r26, r16
     aba:	11 96       	adiw	r26, 0x01	; 1
     abc:	2c 91       	ld	r18, X
     abe:	11 97       	sbiw	r26, 0x01	; 1
     ac0:	22 23       	and	r18, r18
     ac2:	29 f1       	breq	.+74     	; 0xb0e <qtm_key_sensors_process+0x11c>
     ac4:	12 96       	adiw	r26, 0x02	; 2
     ac6:	ed 91       	ld	r30, X+
     ac8:	fc 91       	ld	r31, X
     aca:	13 97       	sbiw	r26, 0x03	; 3
     acc:	25 30       	cpi	r18, 0x05	; 5
     ace:	18 f0       	brcs	.+6      	; 0xad6 <qtm_key_sensors_process+0xe4>
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	92 81       	ldd	r25, Z+2	; 0x02
     ad4:	0e c0       	rjmp	.+28     	; 0xaf2 <qtm_key_sensors_process+0x100>
     ad6:	d8 01       	movw	r26, r16
     ad8:	14 96       	adiw	r26, 0x04	; 4
     ada:	8d 91       	ld	r24, X+
     adc:	9c 91       	ld	r25, X
     ade:	15 97       	sbiw	r26, 0x05	; 5
     ae0:	41 81       	ldd	r20, Z+1	; 0x01
     ae2:	52 81       	ldd	r21, Z+2	; 0x02
     ae4:	84 17       	cp	r24, r20
     ae6:	95 07       	cpc	r25, r21
     ae8:	69 f0       	breq	.+26     	; 0xb04 <qtm_key_sensors_process+0x112>
     aea:	48 17       	cp	r20, r24
     aec:	59 07       	cpc	r21, r25
     aee:	30 f4       	brcc	.+12     	; 0xafc <qtm_key_sensors_process+0x10a>
     af0:	01 97       	sbiw	r24, 0x01	; 1
     af2:	15 96       	adiw	r26, 0x05	; 5
     af4:	9c 93       	st	X, r25
     af6:	8e 93       	st	-X, r24
     af8:	14 97       	sbiw	r26, 0x04	; 4
     afa:	04 c0       	rjmp	.+8      	; 0xb04 <qtm_key_sensors_process+0x112>
     afc:	01 96       	adiw	r24, 0x01	; 1
     afe:	f8 01       	movw	r30, r16
     b00:	95 83       	std	Z+5, r25	; 0x05
     b02:	84 83       	std	Z+4, r24	; 0x04
     b04:	21 50       	subi	r18, 0x01	; 1
     b06:	d8 01       	movw	r26, r16
     b08:	11 96       	adiw	r26, 0x01	; 1
     b0a:	2c 93       	st	X, r18
     b0c:	33 c1       	rjmp	.+614    	; 0xd74 <qtm_key_sensors_process+0x382>
     b0e:	f8 01       	movw	r30, r16
     b10:	2d c1       	rjmp	.+602    	; 0xd6c <qtm_key_sensors_process+0x37a>
     b12:	d8 01       	movw	r26, r16
     b14:	14 96       	adiw	r26, 0x04	; 4
     b16:	2d 91       	ld	r18, X+
     b18:	3c 91       	ld	r19, X
     b1a:	15 97       	sbiw	r26, 0x05	; 5
     b1c:	12 96       	adiw	r26, 0x02	; 2
     b1e:	ed 91       	ld	r30, X+
     b20:	fc 91       	ld	r31, X
     b22:	13 97       	sbiw	r26, 0x03	; 3
     b24:	41 81       	ldd	r20, Z+1	; 0x01
     b26:	52 81       	ldd	r21, Z+2	; 0x02
     b28:	24 17       	cp	r18, r20
     b2a:	35 07       	cpc	r19, r21
     b2c:	09 f4       	brne	.+2      	; 0xb30 <qtm_key_sensors_process+0x13e>
     b2e:	30 c1       	rjmp	.+608    	; 0xd90 <qtm_key_sensors_process+0x39e>
     b30:	8e 81       	ldd	r24, Y+6	; 0x06
     b32:	9f 81       	ldd	r25, Y+7	; 0x07
     b34:	42 17       	cp	r20, r18
     b36:	53 07       	cpc	r21, r19
     b38:	f8 f4       	brcc	.+62     	; 0xb78 <qtm_key_sensors_process+0x186>
     b3a:	ea 81       	ldd	r30, Y+2	; 0x02
     b3c:	fb 81       	ldd	r31, Y+3	; 0x03
     b3e:	24 1b       	sub	r18, r20
     b40:	35 0b       	sbc	r19, r21
     b42:	dc 01       	movw	r26, r24
     b44:	aa 0d       	add	r26, r10
     b46:	bb 1d       	adc	r27, r11
     b48:	8c 91       	ld	r24, X
     b4a:	90 e0       	ldi	r25, 0x00	; 0
     b4c:	05 80       	ldd	r0, Z+5	; 0x05
     b4e:	02 c0       	rjmp	.+4      	; 0xb54 <qtm_key_sensors_process+0x162>
     b50:	95 95       	asr	r25
     b52:	87 95       	ror	r24
     b54:	0a 94       	dec	r0
     b56:	e2 f7       	brpl	.-8      	; 0xb50 <qtm_key_sensors_process+0x15e>
     b58:	99 27       	eor	r25, r25
     b5a:	28 17       	cp	r18, r24
     b5c:	39 07       	cpc	r19, r25
     b5e:	08 f4       	brcc	.+2      	; 0xb62 <qtm_key_sensors_process+0x170>
     b60:	17 c1       	rjmp	.+558    	; 0xd90 <qtm_key_sensors_process+0x39e>
     b62:	84 81       	ldd	r24, Z+4	; 0x04
     b64:	88 23       	and	r24, r24
     b66:	09 f4       	brne	.+2      	; 0xb6a <qtm_key_sensors_process+0x178>
     b68:	13 c1       	rjmp	.+550    	; 0xd90 <qtm_key_sensors_process+0x39e>
     b6a:	87 e0       	ldi	r24, 0x07	; 7
     b6c:	f8 01       	movw	r30, r16
     b6e:	80 83       	st	Z, r24
     b70:	ea 81       	ldd	r30, Y+2	; 0x02
     b72:	fb 81       	ldd	r31, Y+3	; 0x03
     b74:	24 81       	ldd	r18, Z+4	; 0x04
     b76:	1a c0       	rjmp	.+52     	; 0xbac <qtm_key_sensors_process+0x1ba>
     b78:	fc 01       	movw	r30, r24
     b7a:	ea 0d       	add	r30, r10
     b7c:	fb 1d       	adc	r31, r11
     b7e:	42 1b       	sub	r20, r18
     b80:	53 0b       	sbc	r21, r19
     b82:	80 81       	ld	r24, Z
     b84:	90 e0       	ldi	r25, 0x00	; 0
     b86:	48 17       	cp	r20, r24
     b88:	59 07       	cpc	r21, r25
     b8a:	08 f4       	brcc	.+2      	; 0xb8e <qtm_key_sensors_process+0x19c>
     b8c:	01 c1       	rjmp	.+514    	; 0xd90 <qtm_key_sensors_process+0x39e>
     b8e:	82 81       	ldd	r24, Z+2	; 0x02
     b90:	88 23       	and	r24, r24
     b92:	31 f0       	breq	.+12     	; 0xba0 <qtm_key_sensors_process+0x1ae>
     b94:	b4 01       	movw	r22, r8
     b96:	ce 01       	movw	r24, r28
     b98:	0e 94 66 04 	call	0x8cc	; 0x8cc <check_for_aks_block>
     b9c:	81 11       	cpse	r24, r1
     b9e:	f8 c0       	rjmp	.+496    	; 0xd90 <qtm_key_sensors_process+0x39e>
     ba0:	e4 e0       	ldi	r30, 0x04	; 4
     ba2:	d8 01       	movw	r26, r16
     ba4:	ec 93       	st	X, r30
     ba6:	ea 81       	ldd	r30, Y+2	; 0x02
     ba8:	fb 81       	ldd	r31, Y+3	; 0x03
     baa:	22 81       	ldd	r18, Z+2	; 0x02
     bac:	8c 81       	ldd	r24, Y+4	; 0x04
     bae:	9d 81       	ldd	r25, Y+5	; 0x05
     bb0:	fc 01       	movw	r30, r24
     bb2:	ee 0d       	add	r30, r14
     bb4:	ff 1d       	adc	r31, r15
     bb6:	21 83       	std	Z+1, r18	; 0x01
     bb8:	dd c0       	rjmp	.+442    	; 0xd74 <qtm_key_sensors_process+0x382>
     bba:	d8 01       	movw	r26, r16
     bbc:	14 96       	adiw	r26, 0x04	; 4
     bbe:	2d 91       	ld	r18, X+
     bc0:	3c 91       	ld	r19, X
     bc2:	15 97       	sbiw	r26, 0x05	; 5
     bc4:	12 96       	adiw	r26, 0x02	; 2
     bc6:	ed 91       	ld	r30, X+
     bc8:	fc 91       	ld	r31, X
     bca:	13 97       	sbiw	r26, 0x03	; 3
     bcc:	81 81       	ldd	r24, Z+1	; 0x01
     bce:	92 81       	ldd	r25, Z+2	; 0x02
     bd0:	82 17       	cp	r24, r18
     bd2:	93 07       	cpc	r25, r19
     bd4:	08 f4       	brcc	.+2      	; 0xbd8 <qtm_key_sensors_process+0x1e6>
     bd6:	bb c0       	rjmp	.+374    	; 0xd4e <qtm_key_sensors_process+0x35c>
     bd8:	ee 81       	ldd	r30, Y+6	; 0x06
     bda:	ff 81       	ldd	r31, Y+7	; 0x07
     bdc:	ea 0d       	add	r30, r10
     bde:	fb 1d       	adc	r31, r11
     be0:	82 1b       	sub	r24, r18
     be2:	93 0b       	sbc	r25, r19
     be4:	20 81       	ld	r18, Z
     be6:	30 e0       	ldi	r19, 0x00	; 0
     be8:	28 17       	cp	r18, r24
     bea:	39 07       	cpc	r19, r25
     bec:	08 f0       	brcs	.+2      	; 0xbf0 <qtm_key_sensors_process+0x1fe>
     bee:	c5 c0       	rjmp	.+394    	; 0xd7a <qtm_key_sensors_process+0x388>
     bf0:	82 81       	ldd	r24, Z+2	; 0x02
     bf2:	88 23       	and	r24, r24
     bf4:	31 f0       	breq	.+12     	; 0xc02 <qtm_key_sensors_process+0x210>
     bf6:	b4 01       	movw	r22, r8
     bf8:	ce 01       	movw	r24, r28
     bfa:	0e 94 66 04 	call	0x8cc	; 0x8cc <check_for_aks_block>
     bfe:	81 11       	cpse	r24, r1
     c00:	c7 c0       	rjmp	.+398    	; 0xd90 <qtm_key_sensors_process+0x39e>
     c02:	f8 01       	movw	r30, r16
     c04:	81 81       	ldd	r24, Z+1	; 0x01
     c06:	88 23       	and	r24, r24
     c08:	09 f4       	brne	.+2      	; 0xc0c <qtm_key_sensors_process+0x21a>
     c0a:	6a c0       	rjmp	.+212    	; 0xce0 <qtm_key_sensors_process+0x2ee>
     c0c:	81 50       	subi	r24, 0x01	; 1
     c0e:	81 83       	std	Z+1, r24	; 0x01
     c10:	b1 c0       	rjmp	.+354    	; 0xd74 <qtm_key_sensors_process+0x382>
     c12:	e8 81       	ld	r30, Y
     c14:	f9 81       	ldd	r31, Y+1	; 0x01
     c16:	aa 81       	ldd	r26, Y+2	; 0x02
     c18:	bb 81       	ldd	r27, Y+3	; 0x03
     c1a:	18 96       	adiw	r26, 0x08	; 8
     c1c:	8c 91       	ld	r24, X
     c1e:	83 83       	std	Z+3, r24	; 0x03
     c20:	ec 81       	ldd	r30, Y+4	; 0x04
     c22:	fd 81       	ldd	r31, Y+5	; 0x05
     c24:	ee 0d       	add	r30, r14
     c26:	ff 1d       	adc	r31, r15
     c28:	44 81       	ldd	r20, Z+4	; 0x04
     c2a:	55 81       	ldd	r21, Z+5	; 0x05
     c2c:	a2 81       	ldd	r26, Z+2	; 0x02
     c2e:	b3 81       	ldd	r27, Z+3	; 0x03
     c30:	11 96       	adiw	r26, 0x01	; 1
     c32:	8d 91       	ld	r24, X+
     c34:	9c 91       	ld	r25, X
     c36:	12 97       	sbiw	r26, 0x02	; 2
     c38:	84 17       	cp	r24, r20
     c3a:	95 07       	cpc	r25, r21
     c3c:	c0 f0       	brcs	.+48     	; 0xc6e <qtm_key_sensors_process+0x27c>
     c3e:	ae 81       	ldd	r26, Y+6	; 0x06
     c40:	bf 81       	ldd	r27, Y+7	; 0x07
     c42:	aa 0d       	add	r26, r10
     c44:	bb 1d       	adc	r27, r11
     c46:	6c 91       	ld	r22, X
     c48:	26 2f       	mov	r18, r22
     c4a:	30 e0       	ldi	r19, 0x00	; 0
     c4c:	11 96       	adiw	r26, 0x01	; 1
     c4e:	7c 91       	ld	r23, X
     c50:	7f 5f       	subi	r23, 0xFF	; 255
     c52:	02 c0       	rjmp	.+4      	; 0xc58 <qtm_key_sensors_process+0x266>
     c54:	35 95       	asr	r19
     c56:	27 95       	ror	r18
     c58:	7a 95       	dec	r23
     c5a:	e2 f7       	brpl	.-8      	; 0xc54 <qtm_key_sensors_process+0x262>
     c5c:	84 1b       	sub	r24, r20
     c5e:	95 0b       	sbc	r25, r21
     c60:	62 1b       	sub	r22, r18
     c62:	26 2f       	mov	r18, r22
     c64:	30 e0       	ldi	r19, 0x00	; 0
     c66:	28 17       	cp	r18, r24
     c68:	39 07       	cpc	r19, r25
     c6a:	08 f4       	brcc	.+2      	; 0xc6e <qtm_key_sensors_process+0x27c>
     c6c:	8f c0       	rjmp	.+286    	; 0xd8c <qtm_key_sensors_process+0x39a>
     c6e:	70 82       	st	Z, r7
     c70:	ea 81       	ldd	r30, Y+2	; 0x02
     c72:	fb 81       	ldd	r31, Y+3	; 0x03
     c74:	22 81       	ldd	r18, Z+2	; 0x02
     c76:	8c 81       	ldd	r24, Y+4	; 0x04
     c78:	9d 81       	ldd	r25, Y+5	; 0x05
     c7a:	fc 01       	movw	r30, r24
     c7c:	ee 0d       	add	r30, r14
     c7e:	ff 1d       	adc	r31, r15
     c80:	21 83       	std	Z+1, r18	; 0x01
     c82:	42 c0       	rjmp	.+132    	; 0xd08 <qtm_key_sensors_process+0x316>
     c84:	d8 01       	movw	r26, r16
     c86:	14 96       	adiw	r26, 0x04	; 4
     c88:	6d 91       	ld	r22, X+
     c8a:	7c 91       	ld	r23, X
     c8c:	15 97       	sbiw	r26, 0x05	; 5
     c8e:	12 96       	adiw	r26, 0x02	; 2
     c90:	ed 91       	ld	r30, X+
     c92:	fc 91       	ld	r31, X
     c94:	13 97       	sbiw	r26, 0x03	; 3
     c96:	21 81       	ldd	r18, Z+1	; 0x01
     c98:	32 81       	ldd	r19, Z+2	; 0x02
     c9a:	26 17       	cp	r18, r22
     c9c:	37 07       	cpc	r19, r23
     c9e:	58 f4       	brcc	.+22     	; 0xcb6 <qtm_key_sensors_process+0x2c4>
     ca0:	11 96       	adiw	r26, 0x01	; 1
     ca2:	8c 91       	ld	r24, X
     ca4:	11 97       	sbiw	r26, 0x01	; 1
     ca6:	81 11       	cpse	r24, r1
     ca8:	02 c0       	rjmp	.+4      	; 0xcae <qtm_key_sensors_process+0x2bc>
     caa:	cc 92       	st	X, r12
     cac:	6f c0       	rjmp	.+222    	; 0xd8c <qtm_key_sensors_process+0x39a>
     cae:	81 50       	subi	r24, 0x01	; 1
     cb0:	f8 01       	movw	r30, r16
     cb2:	81 83       	std	Z+1, r24	; 0x01
     cb4:	6b c0       	rjmp	.+214    	; 0xd8c <qtm_key_sensors_process+0x39a>
     cb6:	ee 81       	ldd	r30, Y+6	; 0x06
     cb8:	ff 81       	ldd	r31, Y+7	; 0x07
     cba:	ea 0d       	add	r30, r10
     cbc:	fb 1d       	adc	r31, r11
     cbe:	80 81       	ld	r24, Z
     cc0:	48 2f       	mov	r20, r24
     cc2:	50 e0       	ldi	r21, 0x00	; 0
     cc4:	91 81       	ldd	r25, Z+1	; 0x01
     cc6:	9f 5f       	subi	r25, 0xFF	; 255
     cc8:	02 c0       	rjmp	.+4      	; 0xcce <qtm_key_sensors_process+0x2dc>
     cca:	55 95       	asr	r21
     ccc:	47 95       	ror	r20
     cce:	9a 95       	dec	r25
     cd0:	e2 f7       	brpl	.-8      	; 0xcca <qtm_key_sensors_process+0x2d8>
     cd2:	26 1b       	sub	r18, r22
     cd4:	37 0b       	sbc	r19, r23
     cd6:	84 1b       	sub	r24, r20
     cd8:	90 e0       	ldi	r25, 0x00	; 0
     cda:	82 17       	cp	r24, r18
     cdc:	93 07       	cpc	r25, r19
     cde:	60 f4       	brcc	.+24     	; 0xcf8 <qtm_key_sensors_process+0x306>
     ce0:	d8 01       	movw	r26, r16
     ce2:	6c 92       	st	X, r6
     ce4:	ea 81       	ldd	r30, Y+2	; 0x02
     ce6:	fb 81       	ldd	r31, Y+3	; 0x03
     ce8:	23 81       	ldd	r18, Z+3	; 0x03
     cea:	8c 81       	ldd	r24, Y+4	; 0x04
     cec:	9d 81       	ldd	r25, Y+5	; 0x05
     cee:	fc 01       	movw	r30, r24
     cf0:	ee 0d       	add	r30, r14
     cf2:	ff 1d       	adc	r31, r15
     cf4:	21 83       	std	Z+1, r18	; 0x01
     cf6:	4a c0       	rjmp	.+148    	; 0xd8c <qtm_key_sensors_process+0x39a>
     cf8:	f8 01       	movw	r30, r16
     cfa:	81 81       	ldd	r24, Z+1	; 0x01
     cfc:	81 11       	cpse	r24, r1
     cfe:	02 c0       	rjmp	.+4      	; 0xd04 <qtm_key_sensors_process+0x312>
     d00:	c0 82       	st	Z, r12
     d02:	44 c0       	rjmp	.+136    	; 0xd8c <qtm_key_sensors_process+0x39a>
     d04:	81 50       	subi	r24, 0x01	; 1
     d06:	81 83       	std	Z+1, r24	; 0x01
     d08:	22 24       	eor	r2, r2
     d0a:	23 94       	inc	r2
     d0c:	33 c0       	rjmp	.+102    	; 0xd74 <qtm_key_sensors_process+0x382>
     d0e:	f8 01       	movw	r30, r16
     d10:	24 81       	ldd	r18, Z+4	; 0x04
     d12:	35 81       	ldd	r19, Z+5	; 0x05
     d14:	02 80       	ldd	r0, Z+2	; 0x02
     d16:	f3 81       	ldd	r31, Z+3	; 0x03
     d18:	e0 2d       	mov	r30, r0
     d1a:	81 81       	ldd	r24, Z+1	; 0x01
     d1c:	92 81       	ldd	r25, Z+2	; 0x02
     d1e:	82 17       	cp	r24, r18
     d20:	93 07       	cpc	r25, r19
     d22:	58 f5       	brcc	.+86     	; 0xd7a <qtm_key_sensors_process+0x388>
     d24:	28 1b       	sub	r18, r24
     d26:	39 0b       	sbc	r19, r25
     d28:	ee 81       	ldd	r30, Y+6	; 0x06
     d2a:	ff 81       	ldd	r31, Y+7	; 0x07
     d2c:	ea 0d       	add	r30, r10
     d2e:	fb 1d       	adc	r31, r11
     d30:	80 81       	ld	r24, Z
     d32:	90 e0       	ldi	r25, 0x00	; 0
     d34:	ea 81       	ldd	r30, Y+2	; 0x02
     d36:	fb 81       	ldd	r31, Y+3	; 0x03
     d38:	05 80       	ldd	r0, Z+5	; 0x05
     d3a:	02 c0       	rjmp	.+4      	; 0xd40 <qtm_key_sensors_process+0x34e>
     d3c:	95 95       	asr	r25
     d3e:	87 95       	ror	r24
     d40:	0a 94       	dec	r0
     d42:	e2 f7       	brpl	.-8      	; 0xd3c <qtm_key_sensors_process+0x34a>
     d44:	99 27       	eor	r25, r25
     d46:	28 17       	cp	r18, r24
     d48:	39 07       	cpc	r19, r25
     d4a:	18 f4       	brcc	.+6      	; 0xd52 <qtm_key_sensors_process+0x360>
     d4c:	d8 01       	movw	r26, r16
     d4e:	cc 92       	st	X, r12
     d50:	16 c0       	rjmp	.+44     	; 0xd7e <qtm_key_sensors_process+0x38c>
     d52:	f8 01       	movw	r30, r16
     d54:	81 81       	ldd	r24, Z+1	; 0x01
     d56:	81 11       	cpse	r24, r1
     d58:	0b c0       	rjmp	.+22     	; 0xd70 <qtm_key_sensors_process+0x37e>
     d5a:	50 82       	st	Z, r5
     d5c:	8c 81       	ldd	r24, Y+4	; 0x04
     d5e:	9d 81       	ldd	r25, Y+5	; 0x05
     d60:	fc 01       	movw	r30, r24
     d62:	ee 0d       	add	r30, r14
     d64:	ff 1d       	adc	r31, r15
     d66:	02 80       	ldd	r0, Z+2	; 0x02
     d68:	f3 81       	ldd	r31, Z+3	; 0x03
     d6a:	e0 2d       	mov	r30, r0
     d6c:	c0 82       	st	Z, r12
     d6e:	10 c0       	rjmp	.+32     	; 0xd90 <qtm_key_sensors_process+0x39e>
     d70:	81 50       	subi	r24, 0x01	; 1
     d72:	81 83       	std	Z+1, r24	; 0x01
     d74:	dd 24       	eor	r13, r13
     d76:	d3 94       	inc	r13
     d78:	0b c0       	rjmp	.+22     	; 0xd90 <qtm_key_sensors_process+0x39e>
     d7a:	f8 01       	movw	r30, r16
     d7c:	c0 82       	st	Z, r12
     d7e:	8c 81       	ldd	r24, Y+4	; 0x04
     d80:	9d 81       	ldd	r25, Y+5	; 0x05
     d82:	fc 01       	movw	r30, r24
     d84:	ee 0d       	add	r30, r14
     d86:	ff 1d       	adc	r31, r15
     d88:	11 82       	std	Z+1, r1	; 0x01
     d8a:	02 c0       	rjmp	.+4      	; 0xd90 <qtm_key_sensors_process+0x39e>
     d8c:	22 24       	eor	r2, r2
     d8e:	23 94       	inc	r2
     d90:	ff ef       	ldi	r31, 0xFF	; 255
     d92:	8f 1a       	sub	r8, r31
     d94:	9f 0a       	sbc	r9, r31
     d96:	83 e0       	ldi	r24, 0x03	; 3
     d98:	a8 0e       	add	r10, r24
     d9a:	b1 1c       	adc	r11, r1
     d9c:	52 ce       	rjmp	.-860    	; 0xa42 <qtm_key_sensors_process+0x50>
     d9e:	e8 81       	ld	r30, Y
     da0:	f9 81       	ldd	r31, Y+1	; 0x01
     da2:	80 81       	ld	r24, Z
     da4:	87 ff       	sbrs	r24, 7
     da6:	23 c0       	rjmp	.+70     	; 0xdee <qtm_key_sensors_process+0x3fc>
     da8:	40 e0       	ldi	r20, 0x00	; 0
     daa:	50 e0       	ldi	r21, 0x00	; 0
     dac:	20 e0       	ldi	r18, 0x00	; 0
     dae:	30 e0       	ldi	r19, 0x00	; 0
     db0:	ea 81       	ldd	r30, Y+2	; 0x02
     db2:	fb 81       	ldd	r31, Y+3	; 0x03
     db4:	80 81       	ld	r24, Z
     db6:	91 81       	ldd	r25, Z+1	; 0x01
     db8:	28 17       	cp	r18, r24
     dba:	39 07       	cpc	r19, r25
     dbc:	98 f4       	brcc	.+38     	; 0xde4 <qtm_key_sensors_process+0x3f2>
     dbe:	ec 81       	ldd	r30, Y+4	; 0x04
     dc0:	fd 81       	ldd	r31, Y+5	; 0x05
     dc2:	e4 0f       	add	r30, r20
     dc4:	f5 1f       	adc	r31, r21
     dc6:	a2 81       	ldd	r26, Z+2	; 0x02
     dc8:	b3 81       	ldd	r27, Z+3	; 0x03
     dca:	8c 91       	ld	r24, X
     dcc:	80 fd       	sbrc	r24, 0
     dce:	05 c0       	rjmp	.+10     	; 0xdda <qtm_key_sensors_process+0x3e8>
     dd0:	90 81       	ld	r25, Z
     dd2:	97 7f       	andi	r25, 0xF7	; 247
     dd4:	11 f0       	breq	.+4      	; 0xdda <qtm_key_sensors_process+0x3e8>
     dd6:	81 60       	ori	r24, 0x01	; 1
     dd8:	8c 93       	st	X, r24
     dda:	2f 5f       	subi	r18, 0xFF	; 255
     ddc:	3f 4f       	sbci	r19, 0xFF	; 255
     dde:	4a 5f       	subi	r20, 0xFA	; 250
     de0:	5f 4f       	sbci	r21, 0xFF	; 255
     de2:	e6 cf       	rjmp	.-52     	; 0xdb0 <qtm_key_sensors_process+0x3be>
     de4:	e8 81       	ld	r30, Y
     de6:	f9 81       	ldd	r31, Y+1	; 0x01
     de8:	80 81       	ld	r24, Z
     dea:	8f 77       	andi	r24, 0x7F	; 127
     dec:	80 83       	st	Z, r24
     dee:	d1 10       	cpse	r13, r1
     df0:	07 c0       	rjmp	.+14     	; 0xe00 <qtm_key_sensors_process+0x40e>
     df2:	e8 81       	ld	r30, Y
     df4:	f9 81       	ldd	r31, Y+1	; 0x01
     df6:	21 10       	cpse	r2, r1
     df8:	6f c0       	rjmp	.+222    	; 0xed8 <qtm_key_sensors_process+0x4e6>
     dfa:	80 81       	ld	r24, Z
     dfc:	8e 7f       	andi	r24, 0xFE	; 254
     dfe:	6e c0       	rjmp	.+220    	; 0xedc <qtm_key_sensors_process+0x4ea>
     e00:	ea 81       	ldd	r30, Y+2	; 0x02
     e02:	fb 81       	ldd	r31, Y+3	; 0x03
     e04:	81 85       	ldd	r24, Z+9	; 0x09
     e06:	88 23       	and	r24, r24
     e08:	a1 f3       	breq	.-24     	; 0xdf2 <qtm_key_sensors_process+0x400>
     e0a:	e8 81       	ld	r30, Y
     e0c:	f9 81       	ldd	r31, Y+1	; 0x01
     e0e:	80 81       	ld	r24, Z
     e10:	80 68       	ori	r24, 0x80	; 128
     e12:	80 83       	st	Z, r24
     e14:	ea 81       	ldd	r30, Y+2	; 0x02
     e16:	fb 81       	ldd	r31, Y+3	; 0x03
     e18:	81 85       	ldd	r24, Z+9	; 0x09
     e1a:	81 30       	cpi	r24, 0x01	; 1
     e1c:	51 f7       	brne	.-44     	; 0xdf2 <qtm_key_sensors_process+0x400>
     e1e:	40 e0       	ldi	r20, 0x00	; 0
     e20:	50 e0       	ldi	r21, 0x00	; 0
     e22:	20 e0       	ldi	r18, 0x00	; 0
     e24:	30 e0       	ldi	r19, 0x00	; 0
     e26:	96 e0       	ldi	r25, 0x06	; 6
     e28:	d9 2e       	mov	r13, r25
     e2a:	ea 81       	ldd	r30, Y+2	; 0x02
     e2c:	fb 81       	ldd	r31, Y+3	; 0x03
     e2e:	60 81       	ld	r22, Z
     e30:	71 81       	ldd	r23, Z+1	; 0x01
     e32:	26 17       	cp	r18, r22
     e34:	37 07       	cpc	r19, r23
     e36:	e8 f6       	brcc	.-70     	; 0xdf2 <qtm_key_sensors_process+0x400>
     e38:	0c 81       	ldd	r16, Y+4	; 0x04
     e3a:	1d 81       	ldd	r17, Y+5	; 0x05
     e3c:	fa 01       	movw	r30, r20
     e3e:	ee 0f       	add	r30, r30
     e40:	ff 1f       	adc	r31, r31
     e42:	e0 0f       	add	r30, r16
     e44:	f1 1f       	adc	r31, r17
     e46:	80 81       	ld	r24, Z
     e48:	98 2f       	mov	r25, r24
     e4a:	97 7f       	andi	r25, 0xF7	; 247
     e4c:	a1 f1       	breq	.+104    	; 0xeb6 <qtm_key_sensors_process+0x4c4>
     e4e:	85 38       	cpi	r24, 0x85	; 133
     e50:	11 f0       	breq	.+4      	; 0xe56 <qtm_key_sensors_process+0x464>
     e52:	83 30       	cpi	r24, 0x03	; 3
     e54:	b1 f5       	brne	.+108    	; 0xec2 <qtm_key_sensors_process+0x4d0>
     e56:	ee 80       	ldd	r14, Y+6	; 0x06
     e58:	ff 80       	ldd	r15, Y+7	; 0x07
     e5a:	d7 01       	movw	r26, r14
     e5c:	a4 0f       	add	r26, r20
     e5e:	b5 1f       	adc	r27, r21
     e60:	12 96       	adiw	r26, 0x02	; 2
     e62:	bc 90       	ld	r11, X
     e64:	bb 20       	and	r11, r11
     e66:	39 f1       	breq	.+78     	; 0xeb6 <qtm_key_sensors_process+0x4c4>
     e68:	80 e0       	ldi	r24, 0x00	; 0
     e6a:	90 e0       	ldi	r25, 0x00	; 0
     e6c:	c1 2c       	mov	r12, r1
     e6e:	86 17       	cp	r24, r22
     e70:	97 07       	cpc	r25, r23
     e72:	f8 f4       	brcc	.+62     	; 0xeb2 <qtm_key_sensors_process+0x4c0>
     e74:	28 17       	cp	r18, r24
     e76:	39 07       	cpc	r19, r25
     e78:	d1 f0       	breq	.+52     	; 0xeae <qtm_key_sensors_process+0x4bc>
     e7a:	d8 9e       	mul	r13, r24
     e7c:	d0 01       	movw	r26, r0
     e7e:	d9 9e       	mul	r13, r25
     e80:	b0 0d       	add	r27, r0
     e82:	11 24       	eor	r1, r1
     e84:	a0 0f       	add	r26, r16
     e86:	b1 1f       	adc	r27, r17
     e88:	ac 91       	ld	r26, X
     e8a:	a4 30       	cpi	r26, 0x04	; 4
     e8c:	11 f0       	breq	.+4      	; 0xe92 <qtm_key_sensors_process+0x4a0>
     e8e:	a6 38       	cpi	r26, 0x86	; 134
     e90:	71 f4       	brne	.+28     	; 0xeae <qtm_key_sensors_process+0x4bc>
     e92:	dc 01       	movw	r26, r24
     e94:	aa 0f       	add	r26, r26
     e96:	bb 1f       	adc	r27, r27
     e98:	a8 0f       	add	r26, r24
     e9a:	b9 1f       	adc	r27, r25
     e9c:	ae 0d       	add	r26, r14
     e9e:	bf 1d       	adc	r27, r15
     ea0:	12 96       	adiw	r26, 0x02	; 2
     ea2:	ac 91       	ld	r26, X
     ea4:	ba 12       	cpse	r11, r26
     ea6:	03 c0       	rjmp	.+6      	; 0xeae <qtm_key_sensors_process+0x4bc>
     ea8:	cb 01       	movw	r24, r22
     eaa:	cc 24       	eor	r12, r12
     eac:	c3 94       	inc	r12
     eae:	01 96       	adiw	r24, 0x01	; 1
     eb0:	de cf       	rjmp	.-68     	; 0xe6e <qtm_key_sensors_process+0x47c>
     eb2:	c1 10       	cpse	r12, r1
     eb4:	06 c0       	rjmp	.+12     	; 0xec2 <qtm_key_sensors_process+0x4d0>
     eb6:	02 80       	ldd	r0, Z+2	; 0x02
     eb8:	f3 81       	ldd	r31, Z+3	; 0x03
     eba:	e0 2d       	mov	r30, r0
     ebc:	80 81       	ld	r24, Z
     ebe:	8e 7f       	andi	r24, 0xFE	; 254
     ec0:	05 c0       	rjmp	.+10     	; 0xecc <qtm_key_sensors_process+0x4da>
     ec2:	02 80       	ldd	r0, Z+2	; 0x02
     ec4:	f3 81       	ldd	r31, Z+3	; 0x03
     ec6:	e0 2d       	mov	r30, r0
     ec8:	80 81       	ld	r24, Z
     eca:	81 60       	ori	r24, 0x01	; 1
     ecc:	80 83       	st	Z, r24
     ece:	2f 5f       	subi	r18, 0xFF	; 255
     ed0:	3f 4f       	sbci	r19, 0xFF	; 255
     ed2:	4d 5f       	subi	r20, 0xFD	; 253
     ed4:	5f 4f       	sbci	r21, 0xFF	; 255
     ed6:	a9 cf       	rjmp	.-174    	; 0xe2a <qtm_key_sensors_process+0x438>
     ed8:	80 81       	ld	r24, Z
     eda:	81 60       	ori	r24, 0x01	; 1
     edc:	80 83       	st	Z, r24
     ede:	80 91 8c 01 	lds	r24, 0x018C	; 0x80018c <qtm_local_ms_timecount>
     ee2:	90 91 8d 01 	lds	r25, 0x018D	; 0x80018d <qtm_local_ms_timecount+0x1>
     ee6:	e8 81       	ld	r30, Y
     ee8:	f9 81       	ldd	r31, Y+1	; 0x01
     eea:	21 81       	ldd	r18, Z+1	; 0x01
     eec:	32 81       	ldd	r19, Z+2	; 0x02
     eee:	a9 01       	movw	r20, r18
     ef0:	48 53       	subi	r20, 0x38	; 56
     ef2:	5f 4f       	sbci	r21, 0xFF	; 255
     ef4:	48 17       	cp	r20, r24
     ef6:	59 07       	cpc	r21, r25
     ef8:	38 f4       	brcc	.+14     	; 0xf08 <qtm_key_sensors_process+0x516>
     efa:	82 1b       	sub	r24, r18
     efc:	93 0b       	sbc	r25, r19
     efe:	aa 24       	eor	r10, r10
     f00:	a3 94       	inc	r10
     f02:	a3 e0       	ldi	r26, 0x03	; 3
     f04:	ba 2e       	mov	r11, r26
     f06:	44 c0       	rjmp	.+136    	; 0xf90 <qtm_key_sensors_process+0x59e>
     f08:	82 17       	cp	r24, r18
     f0a:	93 07       	cpc	r25, r19
     f0c:	10 f0       	brcs	.+4      	; 0xf12 <qtm_key_sensors_process+0x520>
     f0e:	80 e0       	ldi	r24, 0x00	; 0
     f10:	04 c1       	rjmp	.+520    	; 0x111a <qtm_key_sensors_process+0x728>
     f12:	82 1b       	sub	r24, r18
     f14:	93 0b       	sbc	r25, r19
     f16:	01 97       	sbiw	r24, 0x01	; 1
     f18:	89 3c       	cpi	r24, 0xC9	; 201
     f1a:	91 05       	cpc	r25, r1
     f1c:	c0 f3       	brcs	.-16     	; 0xf0e <qtm_key_sensors_process+0x51c>
     f1e:	ef cf       	rjmp	.-34     	; 0xefe <qtm_key_sensors_process+0x50c>
     f20:	88 5c       	subi	r24, 0xC8	; 200
     f22:	91 09       	sbc	r25, r1
     f24:	e8 81       	ld	r30, Y
     f26:	f9 81       	ldd	r31, Y+1	; 0x01
     f28:	21 81       	ldd	r18, Z+1	; 0x01
     f2a:	32 81       	ldd	r19, Z+2	; 0x02
     f2c:	28 53       	subi	r18, 0x38	; 56
     f2e:	3f 4f       	sbci	r19, 0xFF	; 255
     f30:	32 83       	std	Z+2, r19	; 0x02
     f32:	21 83       	std	Z+1, r18	; 0x01
     f34:	23 81       	ldd	r18, Z+3	; 0x03
     f36:	21 11       	cpse	r18, r1
     f38:	96 c0       	rjmp	.+300    	; 0x1066 <qtm_key_sensors_process+0x674>
     f3a:	24 81       	ldd	r18, Z+4	; 0x04
     f3c:	22 23       	and	r18, r18
     f3e:	11 f0       	breq	.+4      	; 0xf44 <qtm_key_sensors_process+0x552>
     f40:	21 50       	subi	r18, 0x01	; 1
     f42:	24 83       	std	Z+4, r18	; 0x04
     f44:	e8 81       	ld	r30, Y
     f46:	f9 81       	ldd	r31, Y+1	; 0x01
     f48:	25 81       	ldd	r18, Z+5	; 0x05
     f4a:	22 23       	and	r18, r18
     f4c:	11 f0       	breq	.+4      	; 0xf52 <qtm_key_sensors_process+0x560>
     f4e:	21 50       	subi	r18, 0x01	; 1
     f50:	25 83       	std	Z+5, r18	; 0x05
     f52:	8a 80       	ldd	r8, Y+2	; 0x02
     f54:	9b 80       	ldd	r9, Y+3	; 0x03
     f56:	d4 01       	movw	r26, r8
     f58:	16 96       	adiw	r26, 0x06	; 6
     f5a:	2c 91       	ld	r18, X
     f5c:	16 97       	sbiw	r26, 0x06	; 6
     f5e:	21 11       	cpse	r18, r1
     f60:	1b c0       	rjmp	.+54     	; 0xf98 <qtm_key_sensors_process+0x5a6>
     f62:	8a 80       	ldd	r8, Y+2	; 0x02
     f64:	9b 80       	ldd	r9, Y+3	; 0x03
     f66:	f4 01       	movw	r30, r8
     f68:	27 81       	ldd	r18, Z+7	; 0x07
     f6a:	21 11       	cpse	r18, r1
     f6c:	48 c0       	rjmp	.+144    	; 0xffe <qtm_key_sensors_process+0x60c>
     f6e:	ea 81       	ldd	r30, Y+2	; 0x02
     f70:	fb 81       	ldd	r31, Y+3	; 0x03
     f72:	23 81       	ldd	r18, Z+3	; 0x03
     f74:	22 23       	and	r18, r18
     f76:	61 f0       	breq	.+24     	; 0xf90 <qtm_key_sensors_process+0x59e>
     f78:	20 e0       	ldi	r18, 0x00	; 0
     f7a:	30 e0       	ldi	r19, 0x00	; 0
     f7c:	a0 e0       	ldi	r26, 0x00	; 0
     f7e:	b0 e0       	ldi	r27, 0x00	; 0
     f80:	ea 81       	ldd	r30, Y+2	; 0x02
     f82:	fb 81       	ldd	r31, Y+3	; 0x03
     f84:	40 81       	ld	r20, Z
     f86:	51 81       	ldd	r21, Z+1	; 0x01
     f88:	a4 17       	cp	r26, r20
     f8a:	b5 07       	cpc	r27, r21
     f8c:	08 f4       	brcc	.+2      	; 0xf90 <qtm_key_sensors_process+0x59e>
     f8e:	6e c0       	rjmp	.+220    	; 0x106c <qtm_key_sensors_process+0x67a>
     f90:	89 3c       	cpi	r24, 0xC9	; 201
     f92:	91 05       	cpc	r25, r1
     f94:	28 f6       	brcc	.-118    	; 0xf20 <qtm_key_sensors_process+0x52e>
     f96:	bb cf       	rjmp	.-138    	; 0xf0e <qtm_key_sensors_process+0x51c>
     f98:	08 81       	ld	r16, Y
     f9a:	19 81       	ldd	r17, Y+1	; 0x01
     f9c:	f8 01       	movw	r30, r16
     f9e:	24 81       	ldd	r18, Z+4	; 0x04
     fa0:	21 11       	cpse	r18, r1
     fa2:	df cf       	rjmp	.-66     	; 0xf62 <qtm_key_sensors_process+0x570>
     fa4:	ed 90       	ld	r14, X+
     fa6:	fc 90       	ld	r15, X
     fa8:	60 e0       	ldi	r22, 0x00	; 0
     faa:	70 e0       	ldi	r23, 0x00	; 0
     fac:	40 e0       	ldi	r20, 0x00	; 0
     fae:	50 e0       	ldi	r21, 0x00	; 0
     fb0:	4e 15       	cp	r20, r14
     fb2:	5f 05       	cpc	r21, r15
     fb4:	f1 f0       	breq	.+60     	; 0xff2 <qtm_key_sensors_process+0x600>
     fb6:	ec 81       	ldd	r30, Y+4	; 0x04
     fb8:	fd 81       	ldd	r31, Y+5	; 0x05
     fba:	e6 0f       	add	r30, r22
     fbc:	f7 1f       	adc	r31, r23
     fbe:	20 81       	ld	r18, Z
     fc0:	23 30       	cpi	r18, 0x03	; 3
     fc2:	11 f0       	breq	.+4      	; 0xfc8 <qtm_key_sensors_process+0x5d6>
     fc4:	28 30       	cpi	r18, 0x08	; 8
     fc6:	81 f4       	brne	.+32     	; 0xfe8 <qtm_key_sensors_process+0x5f6>
     fc8:	24 81       	ldd	r18, Z+4	; 0x04
     fca:	35 81       	ldd	r19, Z+5	; 0x05
     fcc:	c2 80       	ldd	r12, Z+2	; 0x02
     fce:	d3 80       	ldd	r13, Z+3	; 0x03
     fd0:	d6 01       	movw	r26, r12
     fd2:	11 96       	adiw	r26, 0x01	; 1
     fd4:	cd 90       	ld	r12, X+
     fd6:	dc 90       	ld	r13, X
     fd8:	12 97       	sbiw	r26, 0x02	; 2
     fda:	2c 15       	cp	r18, r12
     fdc:	3d 05       	cpc	r19, r13
     fde:	20 f4       	brcc	.+8      	; 0xfe8 <qtm_key_sensors_process+0x5f6>
     fe0:	2f 5f       	subi	r18, 0xFF	; 255
     fe2:	3f 4f       	sbci	r19, 0xFF	; 255
     fe4:	35 83       	std	Z+5, r19	; 0x05
     fe6:	24 83       	std	Z+4, r18	; 0x04
     fe8:	4f 5f       	subi	r20, 0xFF	; 255
     fea:	5f 4f       	sbci	r21, 0xFF	; 255
     fec:	6a 5f       	subi	r22, 0xFA	; 250
     fee:	7f 4f       	sbci	r23, 0xFF	; 255
     ff0:	df cf       	rjmp	.-66     	; 0xfb0 <qtm_key_sensors_process+0x5be>
     ff2:	f4 01       	movw	r30, r8
     ff4:	26 81       	ldd	r18, Z+6	; 0x06
     ff6:	d8 01       	movw	r26, r16
     ff8:	14 96       	adiw	r26, 0x04	; 4
     ffa:	2c 93       	st	X, r18
     ffc:	b2 cf       	rjmp	.-156    	; 0xf62 <qtm_key_sensors_process+0x570>
     ffe:	08 81       	ld	r16, Y
    1000:	19 81       	ldd	r17, Y+1	; 0x01
    1002:	d8 01       	movw	r26, r16
    1004:	15 96       	adiw	r26, 0x05	; 5
    1006:	2c 91       	ld	r18, X
    1008:	21 11       	cpse	r18, r1
    100a:	b1 cf       	rjmp	.-158    	; 0xf6e <qtm_key_sensors_process+0x57c>
    100c:	e0 80       	ld	r14, Z
    100e:	f1 80       	ldd	r15, Z+1	; 0x01
    1010:	60 e0       	ldi	r22, 0x00	; 0
    1012:	70 e0       	ldi	r23, 0x00	; 0
    1014:	40 e0       	ldi	r20, 0x00	; 0
    1016:	50 e0       	ldi	r21, 0x00	; 0
    1018:	4e 15       	cp	r20, r14
    101a:	5f 05       	cpc	r21, r15
    101c:	f1 f0       	breq	.+60     	; 0x105a <qtm_key_sensors_process+0x668>
    101e:	ec 81       	ldd	r30, Y+4	; 0x04
    1020:	fd 81       	ldd	r31, Y+5	; 0x05
    1022:	e6 0f       	add	r30, r22
    1024:	f7 1f       	adc	r31, r23
    1026:	20 81       	ld	r18, Z
    1028:	23 30       	cpi	r18, 0x03	; 3
    102a:	11 f0       	breq	.+4      	; 0x1030 <qtm_key_sensors_process+0x63e>
    102c:	28 30       	cpi	r18, 0x08	; 8
    102e:	81 f4       	brne	.+32     	; 0x1050 <qtm_key_sensors_process+0x65e>
    1030:	24 81       	ldd	r18, Z+4	; 0x04
    1032:	35 81       	ldd	r19, Z+5	; 0x05
    1034:	c2 80       	ldd	r12, Z+2	; 0x02
    1036:	d3 80       	ldd	r13, Z+3	; 0x03
    1038:	d6 01       	movw	r26, r12
    103a:	11 96       	adiw	r26, 0x01	; 1
    103c:	cd 90       	ld	r12, X+
    103e:	dc 90       	ld	r13, X
    1040:	12 97       	sbiw	r26, 0x02	; 2
    1042:	c2 16       	cp	r12, r18
    1044:	d3 06       	cpc	r13, r19
    1046:	20 f4       	brcc	.+8      	; 0x1050 <qtm_key_sensors_process+0x65e>
    1048:	21 50       	subi	r18, 0x01	; 1
    104a:	31 09       	sbc	r19, r1
    104c:	35 83       	std	Z+5, r19	; 0x05
    104e:	24 83       	std	Z+4, r18	; 0x04
    1050:	4f 5f       	subi	r20, 0xFF	; 255
    1052:	5f 4f       	sbci	r21, 0xFF	; 255
    1054:	6a 5f       	subi	r22, 0xFA	; 250
    1056:	7f 4f       	sbci	r23, 0xFF	; 255
    1058:	df cf       	rjmp	.-66     	; 0x1018 <qtm_key_sensors_process+0x626>
    105a:	f4 01       	movw	r30, r8
    105c:	27 81       	ldd	r18, Z+7	; 0x07
    105e:	d8 01       	movw	r26, r16
    1060:	15 96       	adiw	r26, 0x05	; 5
    1062:	2c 93       	st	X, r18
    1064:	84 cf       	rjmp	.-248    	; 0xf6e <qtm_key_sensors_process+0x57c>
    1066:	21 50       	subi	r18, 0x01	; 1
    1068:	23 83       	std	Z+3, r18	; 0x03
    106a:	81 cf       	rjmp	.-254    	; 0xf6e <qtm_key_sensors_process+0x57c>
    106c:	a9 01       	movw	r20, r18
    106e:	44 0f       	add	r20, r20
    1070:	55 1f       	adc	r21, r21
    1072:	ec 81       	ldd	r30, Y+4	; 0x04
    1074:	fd 81       	ldd	r31, Y+5	; 0x05
    1076:	e4 0f       	add	r30, r20
    1078:	f5 1f       	adc	r31, r21
    107a:	60 81       	ld	r22, Z
    107c:	65 38       	cpi	r22, 0x85	; 133
    107e:	09 f0       	breq	.+2      	; 0x1082 <qtm_key_sensors_process+0x690>
    1080:	47 c0       	rjmp	.+142    	; 0x1110 <qtm_key_sensors_process+0x71e>
    1082:	61 81       	ldd	r22, Z+1	; 0x01
    1084:	66 23       	and	r22, r22
    1086:	19 f0       	breq	.+6      	; 0x108e <qtm_key_sensors_process+0x69c>
    1088:	61 50       	subi	r22, 0x01	; 1
    108a:	61 83       	std	Z+1, r22	; 0x01
    108c:	41 c0       	rjmp	.+130    	; 0x1110 <qtm_key_sensors_process+0x71e>
    108e:	a0 82       	st	Z, r10
    1090:	6c 81       	ldd	r22, Y+4	; 0x04
    1092:	7d 81       	ldd	r23, Y+5	; 0x05
    1094:	fb 01       	movw	r30, r22
    1096:	e4 0f       	add	r30, r20
    1098:	f5 1f       	adc	r31, r21
    109a:	02 80       	ldd	r0, Z+2	; 0x02
    109c:	f3 81       	ldd	r31, Z+3	; 0x03
    109e:	e0 2d       	mov	r30, r0
    10a0:	b0 82       	st	Z, r11
    10a2:	ee 81       	ldd	r30, Y+6	; 0x06
    10a4:	ff 81       	ldd	r31, Y+7	; 0x07
    10a6:	e2 0f       	add	r30, r18
    10a8:	f3 1f       	adc	r31, r19
    10aa:	d2 80       	ldd	r13, Z+2	; 0x02
    10ac:	dd 20       	and	r13, r13
    10ae:	81 f1       	breq	.+96     	; 0x1110 <qtm_key_sensors_process+0x71e>
    10b0:	40 e0       	ldi	r20, 0x00	; 0
    10b2:	50 e0       	ldi	r21, 0x00	; 0
    10b4:	00 e0       	ldi	r16, 0x00	; 0
    10b6:	10 e0       	ldi	r17, 0x00	; 0
    10b8:	ea 81       	ldd	r30, Y+2	; 0x02
    10ba:	fb 81       	ldd	r31, Y+3	; 0x03
    10bc:	60 81       	ld	r22, Z
    10be:	71 81       	ldd	r23, Z+1	; 0x01
    10c0:	06 17       	cp	r16, r22
    10c2:	17 07       	cpc	r17, r23
    10c4:	28 f5       	brcc	.+74     	; 0x1110 <qtm_key_sensors_process+0x71e>
    10c6:	ee 81       	ldd	r30, Y+6	; 0x06
    10c8:	ff 81       	ldd	r31, Y+7	; 0x07
    10ca:	e4 0f       	add	r30, r20
    10cc:	f5 1f       	adc	r31, r21
    10ce:	62 81       	ldd	r22, Z+2	; 0x02
    10d0:	d6 12       	cpse	r13, r22
    10d2:	19 c0       	rjmp	.+50     	; 0x1106 <qtm_key_sensors_process+0x714>
    10d4:	ba 01       	movw	r22, r20
    10d6:	66 0f       	add	r22, r22
    10d8:	77 1f       	adc	r23, r23
    10da:	ec 81       	ldd	r30, Y+4	; 0x04
    10dc:	fd 81       	ldd	r31, Y+5	; 0x05
    10de:	4f 01       	movw	r8, r30
    10e0:	86 0e       	add	r8, r22
    10e2:	97 1e       	adc	r9, r23
    10e4:	f4 01       	movw	r30, r8
    10e6:	e2 80       	ldd	r14, Z+2	; 0x02
    10e8:	f3 80       	ldd	r15, Z+3	; 0x03
    10ea:	f7 01       	movw	r30, r14
    10ec:	f0 80       	ld	r15, Z
    10ee:	f0 fe       	sbrs	r15, 0
    10f0:	0a c0       	rjmp	.+20     	; 0x1106 <qtm_key_sensors_process+0x714>
    10f2:	f4 01       	movw	r30, r8
    10f4:	a0 82       	st	Z, r10
    10f6:	ec 81       	ldd	r30, Y+4	; 0x04
    10f8:	fd 81       	ldd	r31, Y+5	; 0x05
    10fa:	e6 0f       	add	r30, r22
    10fc:	f7 1f       	adc	r31, r23
    10fe:	02 80       	ldd	r0, Z+2	; 0x02
    1100:	f3 81       	ldd	r31, Z+3	; 0x03
    1102:	e0 2d       	mov	r30, r0
    1104:	b0 82       	st	Z, r11
    1106:	0f 5f       	subi	r16, 0xFF	; 255
    1108:	1f 4f       	sbci	r17, 0xFF	; 255
    110a:	4d 5f       	subi	r20, 0xFD	; 253
    110c:	5f 4f       	sbci	r21, 0xFF	; 255
    110e:	d4 cf       	rjmp	.-88     	; 0x10b8 <qtm_key_sensors_process+0x6c6>
    1110:	11 96       	adiw	r26, 0x01	; 1
    1112:	2d 5f       	subi	r18, 0xFD	; 253
    1114:	3f 4f       	sbci	r19, 0xFF	; 255
    1116:	34 cf       	rjmp	.-408    	; 0xf80 <qtm_key_sensors_process+0x58e>
    1118:	8b e0       	ldi	r24, 0x0B	; 11
    111a:	df 91       	pop	r29
    111c:	cf 91       	pop	r28
    111e:	1f 91       	pop	r17
    1120:	0f 91       	pop	r16
    1122:	ff 90       	pop	r15
    1124:	ef 90       	pop	r14
    1126:	df 90       	pop	r13
    1128:	cf 90       	pop	r12
    112a:	bf 90       	pop	r11
    112c:	af 90       	pop	r10
    112e:	9f 90       	pop	r9
    1130:	8f 90       	pop	r8
    1132:	7f 90       	pop	r7
    1134:	6f 90       	pop	r6
    1136:	5f 90       	pop	r5
    1138:	4f 90       	pop	r4
    113a:	3f 90       	pop	r3
    113c:	2f 90       	pop	r2
    113e:	08 95       	ret

00001140 <select_next_channel_to_measure>:
    1140:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <current_measure_channel>
    1144:	90 91 96 01 	lds	r25, 0x0196	; 0x800196 <current_measure_channel+0x1>
    1148:	a0 91 e2 01 	lds	r26, 0x01E2	; 0x8001e2 <qtm_acquisition_control_working_set_ptr>
    114c:	b0 91 e3 01 	lds	r27, 0x01E3	; 0x8001e3 <qtm_acquisition_control_working_set_ptr+0x1>
    1150:	ed 91       	ld	r30, X+
    1152:	fc 91       	ld	r31, X
    1154:	11 97       	sbiw	r26, 0x01	; 1
    1156:	40 81       	ld	r20, Z
    1158:	51 81       	ldd	r21, Z+1	; 0x01
    115a:	25 e0       	ldi	r18, 0x05	; 5
    115c:	28 9f       	mul	r18, r24
    115e:	b0 01       	movw	r22, r0
    1160:	29 9f       	mul	r18, r25
    1162:	70 0d       	add	r23, r0
    1164:	11 24       	eor	r1, r1
    1166:	20 e0       	ldi	r18, 0x00	; 0
    1168:	30 e0       	ldi	r19, 0x00	; 0
    116a:	84 17       	cp	r24, r20
    116c:	95 07       	cpc	r25, r21
    116e:	a8 f4       	brcc	.+42     	; 0x119a <select_next_channel_to_measure+0x5a>
    1170:	14 96       	adiw	r26, 0x04	; 4
    1172:	ed 91       	ld	r30, X+
    1174:	fc 91       	ld	r31, X
    1176:	15 97       	sbiw	r26, 0x05	; 5
    1178:	e2 0f       	add	r30, r18
    117a:	f3 1f       	adc	r31, r19
    117c:	e6 0f       	add	r30, r22
    117e:	f7 1f       	adc	r31, r23
    1180:	e0 81       	ld	r30, Z
    1182:	2b 5f       	subi	r18, 0xFB	; 251
    1184:	3f 4f       	sbci	r19, 0xFF	; 255
    1186:	e0 fd       	sbrc	r30, 0
    1188:	02 c0       	rjmp	.+4      	; 0x118e <select_next_channel_to_measure+0x4e>
    118a:	01 96       	adiw	r24, 0x01	; 1
    118c:	ee cf       	rjmp	.-36     	; 0x116a <select_next_channel_to_measure+0x2a>
    118e:	90 93 96 01 	sts	0x0196, r25	; 0x800196 <current_measure_channel+0x1>
    1192:	80 93 95 01 	sts	0x0195, r24	; 0x800195 <current_measure_channel>
    1196:	80 e0       	ldi	r24, 0x00	; 0
    1198:	08 95       	ret
    119a:	10 92 96 01 	sts	0x0196, r1	; 0x800196 <current_measure_channel+0x1>
    119e:	10 92 95 01 	sts	0x0195, r1	; 0x800195 <current_measure_channel>
    11a2:	81 e0       	ldi	r24, 0x01	; 1
    11a4:	08 95       	ret

000011a6 <qtm_measure_node>:
    11a6:	4a e0       	ldi	r20, 0x0A	; 10
    11a8:	48 9f       	mul	r20, r24
    11aa:	90 01       	movw	r18, r0
    11ac:	49 9f       	mul	r20, r25
    11ae:	30 0d       	add	r19, r0
    11b0:	11 24       	eor	r1, r1
    11b2:	e0 91 e2 01 	lds	r30, 0x01E2	; 0x8001e2 <qtm_acquisition_control_working_set_ptr>
    11b6:	f0 91 e3 01 	lds	r31, 0x01E3	; 0x8001e3 <qtm_acquisition_control_working_set_ptr+0x1>
    11ba:	02 80       	ldd	r0, Z+2	; 0x02
    11bc:	f3 81       	ldd	r31, Z+3	; 0x03
    11be:	e0 2d       	mov	r30, r0
    11c0:	e2 0f       	add	r30, r18
    11c2:	f3 1f       	adc	r31, r19
    11c4:	42 81       	ldd	r20, Z+2	; 0x02
    11c6:	40 93 f8 00 	sts	0x00F8, r20	; 0x8000f8 <__TEXT_REGION_LENGTH__+0x7f80f8>
    11ca:	e0 91 e2 01 	lds	r30, 0x01E2	; 0x8001e2 <qtm_acquisition_control_working_set_ptr>
    11ce:	f0 91 e3 01 	lds	r31, 0x01E3	; 0x8001e3 <qtm_acquisition_control_working_set_ptr+0x1>
    11d2:	02 80       	ldd	r0, Z+2	; 0x02
    11d4:	f3 81       	ldd	r31, Z+3	; 0x03
    11d6:	e0 2d       	mov	r30, r0
    11d8:	e2 0f       	add	r30, r18
    11da:	f3 1f       	adc	r31, r19
    11dc:	43 81       	ldd	r20, Z+3	; 0x03
    11de:	40 93 f9 00 	sts	0x00F9, r20	; 0x8000f9 <__TEXT_REGION_LENGTH__+0x7f80f9>
    11e2:	e0 91 e2 01 	lds	r30, 0x01E2	; 0x8001e2 <qtm_acquisition_control_working_set_ptr>
    11e6:	f0 91 e3 01 	lds	r31, 0x01E3	; 0x8001e3 <qtm_acquisition_control_working_set_ptr+0x1>
    11ea:	02 80       	ldd	r0, Z+2	; 0x02
    11ec:	f3 81       	ldd	r31, Z+3	; 0x03
    11ee:	e0 2d       	mov	r30, r0
    11f0:	e2 0f       	add	r30, r18
    11f2:	f3 1f       	adc	r31, r19
    11f4:	44 81       	ldd	r20, Z+4	; 0x04
    11f6:	40 93 fa 00 	sts	0x00FA, r20	; 0x8000fa <__TEXT_REGION_LENGTH__+0x7f80fa>
    11fa:	e0 91 e2 01 	lds	r30, 0x01E2	; 0x8001e2 <qtm_acquisition_control_working_set_ptr>
    11fe:	f0 91 e3 01 	lds	r31, 0x01E3	; 0x8001e3 <qtm_acquisition_control_working_set_ptr+0x1>
    1202:	02 80       	ldd	r0, Z+2	; 0x02
    1204:	f3 81       	ldd	r31, Z+3	; 0x03
    1206:	e0 2d       	mov	r30, r0
    1208:	e2 0f       	add	r30, r18
    120a:	f3 1f       	adc	r31, r19
    120c:	42 81       	ldd	r20, Z+2	; 0x02
    120e:	53 81       	ldd	r21, Z+3	; 0x03
    1210:	64 81       	ldd	r22, Z+4	; 0x04
    1212:	75 81       	ldd	r23, Z+5	; 0x05
    1214:	47 2f       	mov	r20, r23
    1216:	55 27       	eor	r21, r21
    1218:	66 27       	eor	r22, r22
    121a:	77 27       	eor	r23, r23
    121c:	40 93 fb 00 	sts	0x00FB, r20	; 0x8000fb <__TEXT_REGION_LENGTH__+0x7f80fb>
    1220:	e0 91 e2 01 	lds	r30, 0x01E2	; 0x8001e2 <qtm_acquisition_control_working_set_ptr>
    1224:	f0 91 e3 01 	lds	r31, 0x01E3	; 0x8001e3 <qtm_acquisition_control_working_set_ptr+0x1>
    1228:	02 80       	ldd	r0, Z+2	; 0x02
    122a:	f3 81       	ldd	r31, Z+3	; 0x03
    122c:	e0 2d       	mov	r30, r0
    122e:	e2 0f       	add	r30, r18
    1230:	f3 1f       	adc	r31, r19
    1232:	40 81       	ld	r20, Z
    1234:	40 93 f2 00 	sts	0x00F2, r20	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7f80f2>
    1238:	e0 91 e2 01 	lds	r30, 0x01E2	; 0x8001e2 <qtm_acquisition_control_working_set_ptr>
    123c:	f0 91 e3 01 	lds	r31, 0x01E3	; 0x8001e3 <qtm_acquisition_control_working_set_ptr+0x1>
    1240:	02 80       	ldd	r0, Z+2	; 0x02
    1242:	f3 81       	ldd	r31, Z+3	; 0x03
    1244:	e0 2d       	mov	r30, r0
    1246:	e2 0f       	add	r30, r18
    1248:	f3 1f       	adc	r31, r19
    124a:	41 81       	ldd	r20, Z+1	; 0x01
    124c:	40 93 f3 00 	sts	0x00F3, r20	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7f80f3>
    1250:	65 e0       	ldi	r22, 0x05	; 5
    1252:	68 9f       	mul	r22, r24
    1254:	a0 01       	movw	r20, r0
    1256:	69 9f       	mul	r22, r25
    1258:	50 0d       	add	r21, r0
    125a:	11 24       	eor	r1, r1
    125c:	e0 91 e2 01 	lds	r30, 0x01E2	; 0x8001e2 <qtm_acquisition_control_working_set_ptr>
    1260:	f0 91 e3 01 	lds	r31, 0x01E3	; 0x8001e3 <qtm_acquisition_control_working_set_ptr+0x1>
    1264:	04 80       	ldd	r0, Z+4	; 0x04
    1266:	f5 81       	ldd	r31, Z+5	; 0x05
    1268:	e0 2d       	mov	r30, r0
    126a:	e4 0f       	add	r30, r20
    126c:	f5 1f       	adc	r31, r21
    126e:	83 81       	ldd	r24, Z+3	; 0x03
    1270:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7f80e5>
    1274:	e0 91 e2 01 	lds	r30, 0x01E2	; 0x8001e2 <qtm_acquisition_control_working_set_ptr>
    1278:	f0 91 e3 01 	lds	r31, 0x01E3	; 0x8001e3 <qtm_acquisition_control_working_set_ptr+0x1>
    127c:	04 80       	ldd	r0, Z+4	; 0x04
    127e:	f5 81       	ldd	r31, Z+5	; 0x05
    1280:	e0 2d       	mov	r30, r0
    1282:	e4 0f       	add	r30, r20
    1284:	f5 1f       	adc	r31, r21
    1286:	83 81       	ldd	r24, Z+3	; 0x03
    1288:	94 81       	ldd	r25, Z+4	; 0x04
    128a:	88 27       	eor	r24, r24
    128c:	9f 73       	andi	r25, 0x3F	; 63
    128e:	90 93 e6 00 	sts	0x00E6, r25	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7f80e6>
    1292:	a0 91 e2 01 	lds	r26, 0x01E2	; 0x8001e2 <qtm_acquisition_control_working_set_ptr>
    1296:	b0 91 e3 01 	lds	r27, 0x01E3	; 0x8001e3 <qtm_acquisition_control_working_set_ptr+0x1>
    129a:	14 96       	adiw	r26, 0x04	; 4
    129c:	ed 91       	ld	r30, X+
    129e:	fc 91       	ld	r31, X
    12a0:	15 97       	sbiw	r26, 0x05	; 5
    12a2:	e4 0f       	add	r30, r20
    12a4:	f5 1f       	adc	r31, r21
    12a6:	80 81       	ld	r24, Z
    12a8:	81 fd       	sbrc	r24, 1
    12aa:	60 83       	st	Z, r22
    12ac:	14 96       	adiw	r26, 0x04	; 4
    12ae:	8d 91       	ld	r24, X+
    12b0:	9c 91       	ld	r25, X
    12b2:	15 97       	sbiw	r26, 0x05	; 5
    12b4:	fc 01       	movw	r30, r24
    12b6:	e4 0f       	add	r30, r20
    12b8:	f5 1f       	adc	r31, r21
    12ba:	80 81       	ld	r24, Z
    12bc:	8c 71       	andi	r24, 0x1C	; 28
    12be:	71 f4       	brne	.+28     	; 0x12dc <qtm_measure_node+0x136>
    12c0:	12 96       	adiw	r26, 0x02	; 2
    12c2:	ed 91       	ld	r30, X+
    12c4:	fc 91       	ld	r31, X
    12c6:	13 97       	sbiw	r26, 0x03	; 3
    12c8:	e2 0f       	add	r30, r18
    12ca:	f3 1f       	adc	r31, r19
    12cc:	e0 85       	ldd	r30, Z+8	; 0x08
    12ce:	e2 95       	swap	r30
    12d0:	ef 70       	andi	r30, 0x0F	; 15
    12d2:	f0 e0       	ldi	r31, 0x00	; 0
    12d4:	ed 58       	subi	r30, 0x8D	; 141
    12d6:	fe 4f       	sbci	r31, 0xFE	; 254
    12d8:	80 81       	ld	r24, Z
    12da:	01 c0       	rjmp	.+2      	; 0x12de <qtm_measure_node+0x138>
    12dc:	8f e3       	ldi	r24, 0x3F	; 63
    12de:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7f80e7>
    12e2:	e0 91 e2 01 	lds	r30, 0x01E2	; 0x8001e2 <qtm_acquisition_control_working_set_ptr>
    12e6:	f0 91 e3 01 	lds	r31, 0x01E3	; 0x8001e3 <qtm_acquisition_control_working_set_ptr+0x1>
    12ea:	02 80       	ldd	r0, Z+2	; 0x02
    12ec:	f3 81       	ldd	r31, Z+3	; 0x03
    12ee:	e0 2d       	mov	r30, r0
    12f0:	e2 0f       	add	r30, r18
    12f2:	f3 1f       	adc	r31, r19
    12f4:	86 81       	ldd	r24, Z+6	; 0x06
    12f6:	8b 3f       	cpi	r24, 0xFB	; 251
    12f8:	10 f4       	brcc	.+4      	; 0x12fe <qtm_measure_node+0x158>
    12fa:	8c 5f       	subi	r24, 0xFC	; 252
    12fc:	01 c0       	rjmp	.+2      	; 0x1300 <qtm_measure_node+0x15a>
    12fe:	8f ef       	ldi	r24, 0xFF	; 255
    1300:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7f80e8>
    1304:	e0 91 e2 01 	lds	r30, 0x01E2	; 0x8001e2 <qtm_acquisition_control_working_set_ptr>
    1308:	f0 91 e3 01 	lds	r31, 0x01E3	; 0x8001e3 <qtm_acquisition_control_working_set_ptr+0x1>
    130c:	02 80       	ldd	r0, Z+2	; 0x02
    130e:	f3 81       	ldd	r31, Z+3	; 0x03
    1310:	e0 2d       	mov	r30, r0
    1312:	e2 0f       	add	r30, r18
    1314:	f3 1f       	adc	r31, r19
    1316:	87 81       	ldd	r24, Z+7	; 0x07
    1318:	80 7f       	andi	r24, 0xF0	; 240
    131a:	91 85       	ldd	r25, Z+9	; 0x09
    131c:	89 2b       	or	r24, r25
    131e:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7f80e4>
    1322:	e0 91 e2 01 	lds	r30, 0x01E2	; 0x8001e2 <qtm_acquisition_control_working_set_ptr>
    1326:	f0 91 e3 01 	lds	r31, 0x01E3	; 0x8001e3 <qtm_acquisition_control_working_set_ptr+0x1>
    132a:	82 81       	ldd	r24, Z+2	; 0x02
    132c:	93 81       	ldd	r25, Z+3	; 0x03
    132e:	fc 01       	movw	r30, r24
    1330:	e2 0f       	add	r30, r18
    1332:	f3 1f       	adc	r31, r19
    1334:	87 81       	ldd	r24, Z+7	; 0x07
    1336:	8f 70       	andi	r24, 0x0F	; 15
    1338:	80 93 e1 00 	sts	0x00E1, r24	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7f80e1>
    133c:	82 e1       	ldi	r24, 0x12	; 18
    133e:	80 93 e0 00 	sts	0x00E0, r24	; 0x8000e0 <__TEXT_REGION_LENGTH__+0x7f80e0>
    1342:	80 91 e9 00 	lds	r24, 0x00E9	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7f80e9>
    1346:	81 60       	ori	r24, 0x01	; 1
    1348:	80 93 e9 00 	sts	0x00E9, r24	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7f80e9>
    134c:	08 95       	ret

0000134e <qtm_acquisition_process>:
    134e:	4f 92       	push	r4
    1350:	5f 92       	push	r5
    1352:	6f 92       	push	r6
    1354:	7f 92       	push	r7
    1356:	8f 92       	push	r8
    1358:	9f 92       	push	r9
    135a:	af 92       	push	r10
    135c:	bf 92       	push	r11
    135e:	cf 92       	push	r12
    1360:	df 92       	push	r13
    1362:	ef 92       	push	r14
    1364:	ff 92       	push	r15
    1366:	0f 93       	push	r16
    1368:	1f 93       	push	r17
    136a:	cf 93       	push	r28
    136c:	df 93       	push	r29
    136e:	80 91 94 01 	lds	r24, 0x0194	; 0x800194 <touch_seq_lib_state>
    1372:	88 23       	and	r24, r24
    1374:	09 f4       	brne	.+2      	; 0x1378 <qtm_acquisition_process+0x2a>
    1376:	31 c1       	rjmp	.+610    	; 0x15da <qtm_acquisition_process+0x28c>
    1378:	a0 91 e2 01 	lds	r26, 0x01E2	; 0x8001e2 <qtm_acquisition_control_working_set_ptr>
    137c:	b0 91 e3 01 	lds	r27, 0x01E3	; 0x8001e3 <qtm_acquisition_control_working_set_ptr+0x1>
    1380:	e0 90 e4 01 	lds	r14, 0x01E4	; 0x8001e4 <qtm_raw_data_measurements_ptr>
    1384:	f0 90 e5 01 	lds	r15, 0x01E5	; 0x8001e5 <qtm_raw_data_measurements_ptr+0x1>
    1388:	41 2c       	mov	r4, r1
    138a:	51 2c       	mov	r5, r1
    138c:	60 e0       	ldi	r22, 0x00	; 0
    138e:	70 e0       	ldi	r23, 0x00	; 0
    1390:	00 e0       	ldi	r16, 0x00	; 0
    1392:	10 e0       	ldi	r17, 0x00	; 0
    1394:	80 e0       	ldi	r24, 0x00	; 0
    1396:	66 24       	eor	r6, r6
    1398:	63 94       	inc	r6
    139a:	91 e8       	ldi	r25, 0x81	; 129
    139c:	79 2e       	mov	r7, r25
    139e:	aa 24       	eor	r10, r10
    13a0:	aa 94       	dec	r10
    13a2:	bb 24       	eor	r11, r11
    13a4:	b3 94       	inc	r11
    13a6:	cd 90       	ld	r12, X+
    13a8:	dc 90       	ld	r13, X
    13aa:	11 97       	sbiw	r26, 0x01	; 1
    13ac:	f6 01       	movw	r30, r12
    13ae:	20 81       	ld	r18, Z
    13b0:	31 81       	ldd	r19, Z+1	; 0x01
    13b2:	02 17       	cp	r16, r18
    13b4:	13 07       	cpc	r17, r19
    13b6:	08 f0       	brcs	.+2      	; 0x13ba <qtm_acquisition_process+0x6c>
    13b8:	0c c1       	rjmp	.+536    	; 0x15d2 <qtm_acquisition_process+0x284>
    13ba:	e7 01       	movw	r28, r14
    13bc:	29 91       	ld	r18, Y+
    13be:	39 91       	ld	r19, Y+
    13c0:	7e 01       	movw	r14, r28
    13c2:	14 96       	adiw	r26, 0x04	; 4
    13c4:	ed 91       	ld	r30, X+
    13c6:	fc 91       	ld	r31, X
    13c8:	15 97       	sbiw	r26, 0x05	; 5
    13ca:	e6 0f       	add	r30, r22
    13cc:	f7 1f       	adc	r31, r23
    13ce:	40 81       	ld	r20, Z
    13d0:	4c 71       	andi	r20, 0x1C	; 28
    13d2:	50 e0       	ldi	r21, 0x00	; 0
    13d4:	56 95       	lsr	r21
    13d6:	47 95       	ror	r20
    13d8:	56 95       	lsr	r21
    13da:	47 95       	ror	r20
    13dc:	41 15       	cp	r20, r1
    13de:	51 05       	cpc	r21, r1
    13e0:	21 f0       	breq	.+8      	; 0x13ea <qtm_acquisition_process+0x9c>
    13e2:	41 30       	cpi	r20, 0x01	; 1
    13e4:	51 05       	cpc	r21, r1
    13e6:	c1 f0       	breq	.+48     	; 0x1418 <qtm_acquisition_process+0xca>
    13e8:	eb c0       	rjmp	.+470    	; 0x15c0 <qtm_acquisition_process+0x272>
    13ea:	12 96       	adiw	r26, 0x02	; 2
    13ec:	4d 91       	ld	r20, X+
    13ee:	5c 91       	ld	r21, X
    13f0:	13 97       	sbiw	r26, 0x03	; 3
    13f2:	44 0d       	add	r20, r4
    13f4:	55 1d       	adc	r21, r5
    13f6:	ea 01       	movw	r28, r20
    13f8:	98 85       	ldd	r25, Y+8	; 0x08
    13fa:	9f 70       	andi	r25, 0x0F	; 15
    13fc:	49 85       	ldd	r20, Y+9	; 0x09
    13fe:	94 17       	cp	r25, r20
    1400:	10 f4       	brcc	.+4      	; 0x1406 <qtm_acquisition_process+0xb8>
    1402:	49 1b       	sub	r20, r25
    1404:	01 c0       	rjmp	.+2      	; 0x1408 <qtm_acquisition_process+0xba>
    1406:	40 e0       	ldi	r20, 0x00	; 0
    1408:	02 c0       	rjmp	.+4      	; 0x140e <qtm_acquisition_process+0xc0>
    140a:	36 95       	lsr	r19
    140c:	27 95       	ror	r18
    140e:	4a 95       	dec	r20
    1410:	e2 f7       	brpl	.-8      	; 0x140a <qtm_acquisition_process+0xbc>
    1412:	32 83       	std	Z+2, r19	; 0x02
    1414:	21 83       	std	Z+1, r18	; 0x01
    1416:	d5 c0       	rjmp	.+426    	; 0x15c2 <qtm_acquisition_process+0x274>
    1418:	12 96       	adiw	r26, 0x02	; 2
    141a:	4d 91       	ld	r20, X+
    141c:	5c 91       	ld	r21, X
    141e:	13 97       	sbiw	r26, 0x03	; 3
    1420:	44 0d       	add	r20, r4
    1422:	55 1d       	adc	r21, r5
    1424:	ea 01       	movw	r28, r20
    1426:	09 84       	ldd	r0, Y+9	; 0x09
    1428:	02 c0       	rjmp	.+4      	; 0x142e <qtm_acquisition_process+0xe0>
    142a:	36 95       	lsr	r19
    142c:	27 95       	ror	r18
    142e:	0a 94       	dec	r0
    1430:	e2 f7       	brpl	.-8      	; 0x142a <qtm_acquisition_process+0xdc>
    1432:	32 83       	std	Z+2, r19	; 0x02
    1434:	21 83       	std	Z+1, r18	; 0x01
    1436:	43 81       	ldd	r20, Z+3	; 0x03
    1438:	54 81       	ldd	r21, Z+4	; 0x04
    143a:	21 15       	cp	r18, r1
    143c:	d2 e0       	ldi	r29, 0x02	; 2
    143e:	3d 07       	cpc	r19, r29
    1440:	20 f0       	brcs	.+8      	; 0x144a <qtm_acquisition_process+0xfc>
    1442:	2f 5f       	subi	r18, 0xFF	; 255
    1444:	31 40       	sbci	r19, 0x01	; 1
    1446:	91 e0       	ldi	r25, 0x01	; 1
    1448:	05 c0       	rjmp	.+10     	; 0x1454 <qtm_acquisition_process+0x106>
    144a:	e5 01       	movw	r28, r10
    144c:	c2 1b       	sub	r28, r18
    144e:	d3 0b       	sbc	r29, r19
    1450:	9e 01       	movw	r18, r28
    1452:	90 e0       	ldi	r25, 0x00	; 0
    1454:	e6 01       	movw	r28, r12
    1456:	da 80       	ldd	r13, Y+2	; 0x02
    1458:	d0 e4       	ldi	r29, 0x40	; 64
    145a:	dd 12       	cpse	r13, r29
    145c:	05 c0       	rjmp	.+10     	; 0x1468 <qtm_acquisition_process+0x11a>
    145e:	36 95       	lsr	r19
    1460:	27 95       	ror	r18
    1462:	99 23       	and	r25, r25
    1464:	19 f0       	breq	.+6      	; 0x146c <qtm_acquisition_process+0x11e>
    1466:	09 c0       	rjmp	.+18     	; 0x147a <qtm_acquisition_process+0x12c>
    1468:	99 23       	and	r25, r25
    146a:	39 f0       	breq	.+14     	; 0x147a <qtm_acquisition_process+0x12c>
    146c:	4f 3f       	cpi	r20, 0xFF	; 255
    146e:	9f e3       	ldi	r25, 0x3F	; 63
    1470:	59 07       	cpc	r21, r25
    1472:	31 f4       	brne	.+12     	; 0x1480 <qtm_acquisition_process+0x132>
    1474:	70 82       	st	Z, r7
    1476:	8e e0       	ldi	r24, 0x0E	; 14
    1478:	07 c0       	rjmp	.+14     	; 0x1488 <qtm_acquisition_process+0x13a>
    147a:	88 24       	eor	r8, r8
    147c:	83 94       	inc	r8
    147e:	01 c0       	rjmp	.+2      	; 0x1482 <qtm_acquisition_process+0x134>
    1480:	81 2c       	mov	r8, r1
    1482:	2a 30       	cpi	r18, 0x0A	; 10
    1484:	31 05       	cpc	r19, r1
    1486:	98 f4       	brcc	.+38     	; 0x14ae <qtm_acquisition_process+0x160>
    1488:	14 96       	adiw	r26, 0x04	; 4
    148a:	ed 91       	ld	r30, X+
    148c:	fc 91       	ld	r31, X
    148e:	15 97       	sbiw	r26, 0x05	; 5
    1490:	e6 0f       	add	r30, r22
    1492:	f7 1f       	adc	r31, r23
    1494:	20 81       	ld	r18, Z
    1496:	27 ff       	sbrs	r18, 7
    1498:	60 82       	st	Z, r6
    149a:	14 96       	adiw	r26, 0x04	; 4
    149c:	ed 91       	ld	r30, X+
    149e:	fc 91       	ld	r31, X
    14a0:	15 97       	sbiw	r26, 0x05	; 5
    14a2:	e6 0f       	add	r30, r22
    14a4:	f7 1f       	adc	r31, r23
    14a6:	5f 73       	andi	r21, 0x3F	; 63
    14a8:	54 83       	std	Z+4, r21	; 0x04
    14aa:	43 83       	std	Z+3, r20	; 0x03
    14ac:	8a c0       	rjmp	.+276    	; 0x15c2 <qtm_acquisition_process+0x274>
    14ae:	6a 01       	movw	r12, r20
    14b0:	cc 24       	eor	r12, r12
    14b2:	c0 e3       	ldi	r28, 0x30	; 48
    14b4:	dc 22       	and	r13, r28
    14b6:	9d 2c       	mov	r9, r13
    14b8:	92 94       	swap	r9
    14ba:	df e0       	ldi	r29, 0x0F	; 15
    14bc:	9d 22       	and	r9, r29
    14be:	6a 01       	movw	r12, r20
    14c0:	cc 24       	eor	r12, r12
    14c2:	df e0       	ldi	r29, 0x0F	; 15
    14c4:	dd 22       	and	r13, r29
    14c6:	9d 2d       	mov	r25, r13
    14c8:	6a 01       	movw	r12, r20
    14ca:	c0 ef       	ldi	r28, 0xF0	; 240
    14cc:	cc 22       	and	r12, r28
    14ce:	dd 24       	eor	r13, r13
    14d0:	54 e0       	ldi	r21, 0x04	; 4
    14d2:	d6 94       	lsr	r13
    14d4:	c7 94       	ror	r12
    14d6:	5a 95       	dec	r21
    14d8:	e1 f7       	brne	.-8      	; 0x14d2 <qtm_acquisition_process+0x184>
    14da:	5c 2d       	mov	r21, r12
    14dc:	4f 70       	andi	r20, 0x0F	; 15
    14de:	81 10       	cpse	r8, r1
    14e0:	32 c0       	rjmp	.+100    	; 0x1546 <qtm_acquisition_process+0x1f8>
    14e2:	20 3d       	cpi	r18, 0xD0	; 208
    14e4:	31 05       	cpc	r19, r1
    14e6:	60 f0       	brcs	.+24     	; 0x1500 <qtm_acquisition_process+0x1b2>
    14e8:	d3 e0       	ldi	r29, 0x03	; 3
    14ea:	9d 16       	cp	r9, r29
    14ec:	49 f0       	breq	.+18     	; 0x1500 <qtm_acquisition_process+0x1b2>
    14ee:	93 94       	inc	r9
    14f0:	2f 5c       	subi	r18, 0xCF	; 207
    14f2:	31 09       	sbc	r19, r1
    14f4:	f6 cf       	rjmp	.-20     	; 0x14e2 <qtm_acquisition_process+0x194>
    14f6:	9f 30       	cpi	r25, 0x0F	; 15
    14f8:	41 f0       	breq	.+16     	; 0x150a <qtm_acquisition_process+0x1bc>
    14fa:	9f 5f       	subi	r25, 0xFF	; 255
    14fc:	25 51       	subi	r18, 0x15	; 21
    14fe:	31 09       	sbc	r19, r1
    1500:	26 31       	cpi	r18, 0x16	; 22
    1502:	31 05       	cpc	r19, r1
    1504:	c0 f7       	brcc	.-16     	; 0x14f6 <qtm_acquisition_process+0x1a8>
    1506:	9f 30       	cpi	r25, 0x0F	; 15
    1508:	69 f4       	brne	.+26     	; 0x1524 <qtm_acquisition_process+0x1d6>
    150a:	93 e0       	ldi	r25, 0x03	; 3
    150c:	99 12       	cpse	r9, r25
    150e:	02 c0       	rjmp	.+4      	; 0x1514 <qtm_acquisition_process+0x1c6>
    1510:	9f e0       	ldi	r25, 0x0F	; 15
    1512:	08 c0       	rjmp	.+16     	; 0x1524 <qtm_acquisition_process+0x1d6>
    1514:	93 94       	inc	r9
    1516:	95 e0       	ldi	r25, 0x05	; 5
    1518:	05 c0       	rjmp	.+10     	; 0x1524 <qtm_acquisition_process+0x1d6>
    151a:	5f 30       	cpi	r21, 0x0F	; 15
    151c:	49 f0       	breq	.+18     	; 0x1530 <qtm_acquisition_process+0x1e2>
    151e:	5f 5f       	subi	r21, 0xFF	; 255
    1520:	22 50       	subi	r18, 0x02	; 2
    1522:	31 09       	sbc	r19, r1
    1524:	23 30       	cpi	r18, 0x03	; 3
    1526:	31 05       	cpc	r19, r1
    1528:	c0 f7       	brcc	.-16     	; 0x151a <qtm_acquisition_process+0x1cc>
    152a:	5f 30       	cpi	r21, 0x0F	; 15
    152c:	09 f0       	breq	.+2      	; 0x1530 <qtm_acquisition_process+0x1e2>
    152e:	5b c0       	rjmp	.+182    	; 0x15e6 <qtm_acquisition_process+0x298>
    1530:	9f 30       	cpi	r25, 0x0F	; 15
    1532:	09 f4       	brne	.+2      	; 0x1536 <qtm_acquisition_process+0x1e8>
    1534:	54 c0       	rjmp	.+168    	; 0x15de <qtm_acquisition_process+0x290>
    1536:	9f 5f       	subi	r25, 0xFF	; 255
    1538:	55 e0       	ldi	r21, 0x05	; 5
    153a:	55 c0       	rjmp	.+170    	; 0x15e6 <qtm_acquisition_process+0x298>
    153c:	99 20       	and	r9, r9
    153e:	61 f0       	breq	.+24     	; 0x1558 <qtm_acquisition_process+0x20a>
    1540:	9a 94       	dec	r9
    1542:	2f 5c       	subi	r18, 0xCF	; 207
    1544:	31 09       	sbc	r19, r1
    1546:	20 3d       	cpi	r18, 0xD0	; 208
    1548:	31 05       	cpc	r19, r1
    154a:	c0 f7       	brcc	.-16     	; 0x153c <qtm_acquisition_process+0x1ee>
    154c:	05 c0       	rjmp	.+10     	; 0x1558 <qtm_acquisition_process+0x20a>
    154e:	99 23       	and	r25, r25
    1550:	41 f0       	breq	.+16     	; 0x1562 <qtm_acquisition_process+0x214>
    1552:	91 50       	subi	r25, 0x01	; 1
    1554:	25 51       	subi	r18, 0x15	; 21
    1556:	31 09       	sbc	r19, r1
    1558:	26 31       	cpi	r18, 0x16	; 22
    155a:	31 05       	cpc	r19, r1
    155c:	c0 f7       	brcc	.-16     	; 0x154e <qtm_acquisition_process+0x200>
    155e:	91 11       	cpse	r25, r1
    1560:	0c c0       	rjmp	.+24     	; 0x157a <qtm_acquisition_process+0x22c>
    1562:	91 10       	cpse	r9, r1
    1564:	02 c0       	rjmp	.+4      	; 0x156a <qtm_acquisition_process+0x21c>
    1566:	90 e0       	ldi	r25, 0x00	; 0
    1568:	08 c0       	rjmp	.+16     	; 0x157a <qtm_acquisition_process+0x22c>
    156a:	9a 94       	dec	r9
    156c:	9a e0       	ldi	r25, 0x0A	; 10
    156e:	05 c0       	rjmp	.+10     	; 0x157a <qtm_acquisition_process+0x22c>
    1570:	55 23       	and	r21, r21
    1572:	41 f0       	breq	.+16     	; 0x1584 <qtm_acquisition_process+0x236>
    1574:	51 50       	subi	r21, 0x01	; 1
    1576:	22 50       	subi	r18, 0x02	; 2
    1578:	31 09       	sbc	r19, r1
    157a:	23 30       	cpi	r18, 0x03	; 3
    157c:	31 05       	cpc	r19, r1
    157e:	c0 f7       	brcc	.-16     	; 0x1570 <qtm_acquisition_process+0x222>
    1580:	51 11       	cpse	r21, r1
    1582:	0d c0       	rjmp	.+26     	; 0x159e <qtm_acquisition_process+0x250>
    1584:	99 23       	and	r25, r25
    1586:	b9 f1       	breq	.+110    	; 0x15f6 <qtm_acquisition_process+0x2a8>
    1588:	91 50       	subi	r25, 0x01	; 1
    158a:	5a e0       	ldi	r21, 0x0A	; 10
    158c:	23 30       	cpi	r18, 0x03	; 3
    158e:	31 05       	cpc	r19, r1
    1590:	d0 f6       	brcc	.-76     	; 0x1546 <qtm_acquisition_process+0x1f8>
    1592:	05 c0       	rjmp	.+10     	; 0x159e <qtm_acquisition_process+0x250>
    1594:	23 30       	cpi	r18, 0x03	; 3
    1596:	31 05       	cpc	r19, r1
    1598:	58 f1       	brcs	.+86     	; 0x15f0 <qtm_acquisition_process+0x2a2>
    159a:	4f e0       	ldi	r20, 0x0F	; 15
    159c:	5f e0       	ldi	r21, 0x0F	; 15
    159e:	29 2d       	mov	r18, r9
    15a0:	30 e0       	ldi	r19, 0x00	; 0
    15a2:	32 2f       	mov	r19, r18
    15a4:	22 27       	eor	r18, r18
    15a6:	32 95       	swap	r19
    15a8:	30 7f       	andi	r19, 0xF0	; 240
    15aa:	39 2b       	or	r19, r25
    15ac:	24 2b       	or	r18, r20
    15ae:	c0 e1       	ldi	r28, 0x10	; 16
    15b0:	5c 9f       	mul	r21, r28
    15b2:	60 01       	movw	r12, r0
    15b4:	11 24       	eor	r1, r1
    15b6:	c2 2a       	or	r12, r18
    15b8:	d3 2a       	or	r13, r19
    15ba:	d4 82       	std	Z+4, r13	; 0x04
    15bc:	c3 82       	std	Z+3, r12	; 0x03
    15be:	01 c0       	rjmp	.+2      	; 0x15c2 <qtm_acquisition_process+0x274>
    15c0:	ff cf       	rjmp	.-2      	; 0x15c0 <qtm_acquisition_process+0x272>
    15c2:	0f 5f       	subi	r16, 0xFF	; 255
    15c4:	1f 4f       	sbci	r17, 0xFF	; 255
    15c6:	6b 5f       	subi	r22, 0xFB	; 251
    15c8:	7f 4f       	sbci	r23, 0xFF	; 255
    15ca:	da e0       	ldi	r29, 0x0A	; 10
    15cc:	4d 0e       	add	r4, r29
    15ce:	51 1c       	adc	r5, r1
    15d0:	ea ce       	rjmp	.-556    	; 0x13a6 <qtm_acquisition_process+0x58>
    15d2:	92 e0       	ldi	r25, 0x02	; 2
    15d4:	90 93 94 01 	sts	0x0194, r25	; 0x800194 <touch_seq_lib_state>
    15d8:	10 c0       	rjmp	.+32     	; 0x15fa <qtm_acquisition_process+0x2ac>
    15da:	83 e0       	ldi	r24, 0x03	; 3
    15dc:	0e c0       	rjmp	.+28     	; 0x15fa <qtm_acquisition_process+0x2ac>
    15de:	53 e0       	ldi	r21, 0x03	; 3
    15e0:	95 16       	cp	r9, r21
    15e2:	c1 f2       	breq	.-80     	; 0x1594 <qtm_acquisition_process+0x246>
    15e4:	5f e0       	ldi	r21, 0x0F	; 15
    15e6:	23 30       	cpi	r18, 0x03	; 3
    15e8:	31 05       	cpc	r19, r1
    15ea:	08 f0       	brcs	.+2      	; 0x15ee <qtm_acquisition_process+0x2a0>
    15ec:	7a cf       	rjmp	.-268    	; 0x14e2 <qtm_acquisition_process+0x194>
    15ee:	d7 cf       	rjmp	.-82     	; 0x159e <qtm_acquisition_process+0x250>
    15f0:	5f e0       	ldi	r21, 0x0F	; 15
    15f2:	4f e0       	ldi	r20, 0x0F	; 15
    15f4:	d4 cf       	rjmp	.-88     	; 0x159e <qtm_acquisition_process+0x250>
    15f6:	50 e0       	ldi	r21, 0x00	; 0
    15f8:	d2 cf       	rjmp	.-92     	; 0x159e <qtm_acquisition_process+0x250>
    15fa:	df 91       	pop	r29
    15fc:	cf 91       	pop	r28
    15fe:	1f 91       	pop	r17
    1600:	0f 91       	pop	r16
    1602:	ff 90       	pop	r15
    1604:	ef 90       	pop	r14
    1606:	df 90       	pop	r13
    1608:	cf 90       	pop	r12
    160a:	bf 90       	pop	r11
    160c:	af 90       	pop	r10
    160e:	9f 90       	pop	r9
    1610:	8f 90       	pop	r8
    1612:	7f 90       	pop	r7
    1614:	6f 90       	pop	r6
    1616:	5f 90       	pop	r5
    1618:	4f 90       	pop	r4
    161a:	08 95       	ret

0000161c <qtm_ptc_init_acquisition_module>:
    161c:	8f 92       	push	r8
    161e:	9f 92       	push	r9
    1620:	af 92       	push	r10
    1622:	bf 92       	push	r11
    1624:	cf 92       	push	r12
    1626:	df 92       	push	r13
    1628:	ef 92       	push	r14
    162a:	ff 92       	push	r15
    162c:	cf 93       	push	r28
    162e:	df 93       	push	r29
    1630:	00 97       	sbiw	r24, 0x00	; 0
    1632:	09 f4       	brne	.+2      	; 0x1636 <qtm_ptc_init_acquisition_module+0x1a>
    1634:	76 c0       	rjmp	.+236    	; 0x1722 <qtm_ptc_init_acquisition_module+0x106>
    1636:	dc 01       	movw	r26, r24
    1638:	ed 91       	ld	r30, X+
    163a:	fc 91       	ld	r31, X
    163c:	c0 80       	ld	r12, Z
    163e:	d1 80       	ldd	r13, Z+1	; 0x01
    1640:	e1 2c       	mov	r14, r1
    1642:	f1 2c       	mov	r15, r1
    1644:	a0 e0       	ldi	r26, 0x00	; 0
    1646:	b0 e0       	ldi	r27, 0x00	; 0
    1648:	40 e0       	ldi	r20, 0x00	; 0
    164a:	50 e0       	ldi	r21, 0x00	; 0
    164c:	ba 01       	movw	r22, r20
    164e:	20 e0       	ldi	r18, 0x00	; 0
    1650:	30 e0       	ldi	r19, 0x00	; 0
    1652:	ac 15       	cp	r26, r12
    1654:	bd 05       	cpc	r27, r13
    1656:	b1 f0       	breq	.+44     	; 0x1684 <qtm_ptc_init_acquisition_module+0x68>
    1658:	ec 01       	movw	r28, r24
    165a:	ea 81       	ldd	r30, Y+2	; 0x02
    165c:	fb 81       	ldd	r31, Y+3	; 0x03
    165e:	ee 0d       	add	r30, r14
    1660:	ff 1d       	adc	r31, r15
    1662:	a0 80       	ld	r10, Z
    1664:	b1 80       	ldd	r11, Z+1	; 0x01
    1666:	2a 29       	or	r18, r10
    1668:	3b 29       	or	r19, r11
    166a:	82 80       	ldd	r8, Z+2	; 0x02
    166c:	93 80       	ldd	r9, Z+3	; 0x03
    166e:	a4 80       	ldd	r10, Z+4	; 0x04
    1670:	b5 80       	ldd	r11, Z+5	; 0x05
    1672:	48 29       	or	r20, r8
    1674:	59 29       	or	r21, r9
    1676:	6a 29       	or	r22, r10
    1678:	7b 29       	or	r23, r11
    167a:	11 96       	adiw	r26, 0x01	; 1
    167c:	da e0       	ldi	r29, 0x0A	; 10
    167e:	ed 0e       	add	r14, r29
    1680:	f1 1c       	adc	r15, r1
    1682:	e7 cf       	rjmp	.-50     	; 0x1652 <qtm_ptc_init_acquisition_module+0x36>
    1684:	41 15       	cp	r20, r1
    1686:	51 05       	cpc	r21, r1
    1688:	61 05       	cpc	r22, r1
    168a:	71 05       	cpc	r23, r1
    168c:	09 f4       	brne	.+2      	; 0x1690 <qtm_ptc_init_acquisition_module+0x74>
    168e:	4b c0       	rjmp	.+150    	; 0x1726 <qtm_ptc_init_acquisition_module+0x10a>
    1690:	e0 91 94 01 	lds	r30, 0x0194	; 0x800194 <touch_seq_lib_state>
    1694:	4a 01       	movw	r8, r20
    1696:	5b 01       	movw	r10, r22
    1698:	88 24       	eor	r8, r8
    169a:	aa 24       	eor	r10, r10
    169c:	bb 24       	eor	r11, r11
    169e:	6a 01       	movw	r12, r20
    16a0:	7b 01       	movw	r14, r22
    16a2:	cc 24       	eor	r12, r12
    16a4:	dd 24       	eor	r13, r13
    16a6:	ff 24       	eor	r15, r15
    16a8:	87 2f       	mov	r24, r23
    16aa:	99 27       	eor	r25, r25
    16ac:	aa 27       	eor	r26, r26
    16ae:	bb 27       	eor	r27, r27
    16b0:	e1 11       	cpse	r30, r1
    16b2:	17 c0       	rjmp	.+46     	; 0x16e2 <qtm_ptc_init_acquisition_module+0xc6>
    16b4:	20 93 f0 00 	sts	0x00F0, r18	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7f80f0>
    16b8:	30 93 f1 00 	sts	0x00F1, r19	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7f80f1>
    16bc:	40 93 f4 00 	sts	0x00F4, r20	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7f80f4>
    16c0:	89 2c       	mov	r8, r9
    16c2:	9a 2c       	mov	r9, r10
    16c4:	ab 2c       	mov	r10, r11
    16c6:	bb 24       	eor	r11, r11
    16c8:	80 92 f5 00 	sts	0x00F5, r8	; 0x8000f5 <__TEXT_REGION_LENGTH__+0x7f80f5>
    16cc:	67 01       	movw	r12, r14
    16ce:	ee 24       	eor	r14, r14
    16d0:	ff 24       	eor	r15, r15
    16d2:	c0 92 f6 00 	sts	0x00F6, r12	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7f80f6>
    16d6:	80 93 f7 00 	sts	0x00F7, r24	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7f80f7>
    16da:	81 e0       	ldi	r24, 0x01	; 1
    16dc:	80 93 94 01 	sts	0x0194, r24	; 0x800194 <touch_seq_lib_state>
    16e0:	1e c0       	rjmp	.+60     	; 0x171e <qtm_ptc_init_acquisition_module+0x102>
    16e2:	e0 91 f0 00 	lds	r30, 0x00F0	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7f80f0>
    16e6:	2e 2b       	or	r18, r30
    16e8:	20 93 f0 00 	sts	0x00F0, r18	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7f80f0>
    16ec:	20 91 f1 00 	lds	r18, 0x00F1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7f80f1>
    16f0:	23 2b       	or	r18, r19
    16f2:	20 93 f1 00 	sts	0x00F1, r18	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7f80f1>
    16f6:	20 91 f4 00 	lds	r18, 0x00F4	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7f80f4>
    16fa:	42 2b       	or	r20, r18
    16fc:	40 93 f4 00 	sts	0x00F4, r20	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7f80f4>
    1700:	20 91 f5 00 	lds	r18, 0x00F5	; 0x8000f5 <__TEXT_REGION_LENGTH__+0x7f80f5>
    1704:	29 29       	or	r18, r9
    1706:	20 93 f5 00 	sts	0x00F5, r18	; 0x8000f5 <__TEXT_REGION_LENGTH__+0x7f80f5>
    170a:	20 91 f6 00 	lds	r18, 0x00F6	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7f80f6>
    170e:	2e 29       	or	r18, r14
    1710:	20 93 f6 00 	sts	0x00F6, r18	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7f80f6>
    1714:	20 91 f7 00 	lds	r18, 0x00F7	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7f80f7>
    1718:	82 2b       	or	r24, r18
    171a:	80 93 f7 00 	sts	0x00F7, r24	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7f80f7>
    171e:	80 e0       	ldi	r24, 0x00	; 0
    1720:	03 c0       	rjmp	.+6      	; 0x1728 <qtm_ptc_init_acquisition_module+0x10c>
    1722:	8b e0       	ldi	r24, 0x0B	; 11
    1724:	01 c0       	rjmp	.+2      	; 0x1728 <qtm_ptc_init_acquisition_module+0x10c>
    1726:	82 e0       	ldi	r24, 0x02	; 2
    1728:	df 91       	pop	r29
    172a:	cf 91       	pop	r28
    172c:	ff 90       	pop	r15
    172e:	ef 90       	pop	r14
    1730:	df 90       	pop	r13
    1732:	cf 90       	pop	r12
    1734:	bf 90       	pop	r11
    1736:	af 90       	pop	r10
    1738:	9f 90       	pop	r9
    173a:	8f 90       	pop	r8
    173c:	08 95       	ret

0000173e <qtm_ptc_qtlib_assign_signal_memory>:
    173e:	00 97       	sbiw	r24, 0x00	; 0
    1740:	31 f0       	breq	.+12     	; 0x174e <qtm_ptc_qtlib_assign_signal_memory+0x10>
    1742:	90 93 e5 01 	sts	0x01E5, r25	; 0x8001e5 <qtm_raw_data_measurements_ptr+0x1>
    1746:	80 93 e4 01 	sts	0x01E4, r24	; 0x8001e4 <qtm_raw_data_measurements_ptr>
    174a:	80 e0       	ldi	r24, 0x00	; 0
    174c:	08 95       	ret
    174e:	8b e0       	ldi	r24, 0x0B	; 11
    1750:	08 95       	ret

00001752 <qtm_ptc_start_measurement_seq>:
    1752:	cf 93       	push	r28
    1754:	df 93       	push	r29
    1756:	00 d0       	rcall	.+0      	; 0x1758 <qtm_ptc_start_measurement_seq+0x6>
    1758:	00 d0       	rcall	.+0      	; 0x175a <qtm_ptc_start_measurement_seq+0x8>
    175a:	cd b7       	in	r28, 0x3d	; 61
    175c:	de b7       	in	r29, 0x3e	; 62
    175e:	10 92 98 01 	sts	0x0198, r1	; 0x800198 <max_conversion_cycles>
    1762:	10 92 99 01 	sts	0x0199, r1	; 0x800199 <max_conversion_cycles+0x1>
    1766:	10 92 9a 01 	sts	0x019A, r1	; 0x80019a <max_conversion_cycles+0x2>
    176a:	10 92 9b 01 	sts	0x019B, r1	; 0x80019b <max_conversion_cycles+0x3>
    176e:	61 15       	cp	r22, r1
    1770:	71 05       	cpc	r23, r1
    1772:	09 f4       	brne	.+2      	; 0x1776 <qtm_ptc_start_measurement_seq+0x24>
    1774:	db c0       	rjmp	.+438    	; 0x192c <qtm_ptc_start_measurement_seq+0x1da>
    1776:	00 97       	sbiw	r24, 0x00	; 0
    1778:	09 f4       	brne	.+2      	; 0x177c <qtm_ptc_start_measurement_seq+0x2a>
    177a:	d8 c0       	rjmp	.+432    	; 0x192c <qtm_ptc_start_measurement_seq+0x1da>
    177c:	20 91 94 01 	lds	r18, 0x0194	; 0x800194 <touch_seq_lib_state>
    1780:	22 23       	and	r18, r18
    1782:	09 f4       	brne	.+2      	; 0x1786 <qtm_ptc_start_measurement_seq+0x34>
    1784:	d5 c0       	rjmp	.+426    	; 0x1930 <qtm_ptc_start_measurement_seq+0x1de>
    1786:	24 30       	cpi	r18, 0x04	; 4
    1788:	09 f0       	breq	.+2      	; 0x178c <qtm_ptc_start_measurement_seq+0x3a>
    178a:	93 c0       	rjmp	.+294    	; 0x18b2 <qtm_ptc_start_measurement_seq+0x160>
    178c:	10 92 97 01 	sts	0x0197, r1	; 0x800197 <ptc_eoc_ok_flag>
    1790:	80 91 e9 00 	lds	r24, 0x00E9	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7f80e9>
    1794:	80 ff       	sbrs	r24, 0
    1796:	8b c0       	rjmp	.+278    	; 0x18ae <qtm_ptc_start_measurement_seq+0x15c>
    1798:	20 91 e8 00 	lds	r18, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7f80e8>
    179c:	30 e0       	ldi	r19, 0x00	; 0
    179e:	a6 e0       	ldi	r26, 0x06	; 6
    17a0:	b0 e0       	ldi	r27, 0x00	; 0
    17a2:	0e 94 46 0d 	call	0x1a8c	; 0x1a8c <__umulhisi3>
    17a6:	60 93 98 01 	sts	0x0198, r22	; 0x800198 <max_conversion_cycles>
    17aa:	70 93 99 01 	sts	0x0199, r23	; 0x800199 <max_conversion_cycles+0x1>
    17ae:	80 93 9a 01 	sts	0x019A, r24	; 0x80019a <max_conversion_cycles+0x2>
    17b2:	90 93 9b 01 	sts	0x019B, r25	; 0x80019b <max_conversion_cycles+0x3>
    17b6:	20 91 e3 00 	lds	r18, 0x00E3	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7f80e3>
    17ba:	2f 70       	andi	r18, 0x0F	; 15
    17bc:	dc 01       	movw	r26, r24
    17be:	cb 01       	movw	r24, r22
    17c0:	82 0f       	add	r24, r18
    17c2:	91 1d       	adc	r25, r1
    17c4:	a1 1d       	adc	r26, r1
    17c6:	b1 1d       	adc	r27, r1
    17c8:	80 93 98 01 	sts	0x0198, r24	; 0x800198 <max_conversion_cycles>
    17cc:	90 93 99 01 	sts	0x0199, r25	; 0x800199 <max_conversion_cycles+0x1>
    17d0:	a0 93 9a 01 	sts	0x019A, r26	; 0x80019a <max_conversion_cycles+0x2>
    17d4:	b0 93 9b 01 	sts	0x019B, r27	; 0x80019b <max_conversion_cycles+0x3>
    17d8:	20 91 e4 00 	lds	r18, 0x00E4	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7f80e4>
    17dc:	27 70       	andi	r18, 0x07	; 7
    17de:	04 c0       	rjmp	.+8      	; 0x17e8 <qtm_ptc_start_measurement_seq+0x96>
    17e0:	88 0f       	add	r24, r24
    17e2:	99 1f       	adc	r25, r25
    17e4:	aa 1f       	adc	r26, r26
    17e6:	bb 1f       	adc	r27, r27
    17e8:	2a 95       	dec	r18
    17ea:	d2 f7       	brpl	.-12     	; 0x17e0 <qtm_ptc_start_measurement_seq+0x8e>
    17ec:	0e 96       	adiw	r24, 0x0e	; 14
    17ee:	a1 1d       	adc	r26, r1
    17f0:	b1 1d       	adc	r27, r1
    17f2:	80 93 98 01 	sts	0x0198, r24	; 0x800198 <max_conversion_cycles>
    17f6:	90 93 99 01 	sts	0x0199, r25	; 0x800199 <max_conversion_cycles+0x1>
    17fa:	a0 93 9a 01 	sts	0x019A, r26	; 0x80019a <max_conversion_cycles+0x2>
    17fe:	b0 93 9b 01 	sts	0x019B, r27	; 0x80019b <max_conversion_cycles+0x3>
    1802:	20 91 e1 00 	lds	r18, 0x00E1	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7f80e1>
    1806:	23 70       	andi	r18, 0x03	; 3
    1808:	04 c0       	rjmp	.+8      	; 0x1812 <qtm_ptc_start_measurement_seq+0xc0>
    180a:	88 0f       	add	r24, r24
    180c:	99 1f       	adc	r25, r25
    180e:	aa 1f       	adc	r26, r26
    1810:	bb 1f       	adc	r27, r27
    1812:	2a 95       	dec	r18
    1814:	d2 f7       	brpl	.-12     	; 0x180a <qtm_ptc_start_measurement_seq+0xb8>
    1816:	22 e0       	ldi	r18, 0x02	; 2
    1818:	b6 95       	lsr	r27
    181a:	a7 95       	ror	r26
    181c:	97 95       	ror	r25
    181e:	87 95       	ror	r24
    1820:	2a 95       	dec	r18
    1822:	d1 f7       	brne	.-12     	; 0x1818 <qtm_ptc_start_measurement_seq+0xc6>
    1824:	80 93 98 01 	sts	0x0198, r24	; 0x800198 <max_conversion_cycles>
    1828:	90 93 99 01 	sts	0x0199, r25	; 0x800199 <max_conversion_cycles+0x1>
    182c:	a0 93 9a 01 	sts	0x019A, r26	; 0x80019a <max_conversion_cycles+0x2>
    1830:	b0 93 9b 01 	sts	0x019B, r27	; 0x80019b <max_conversion_cycles+0x3>
    1834:	19 82       	std	Y+1, r1	; 0x01
    1836:	1a 82       	std	Y+2, r1	; 0x02
    1838:	1b 82       	std	Y+3, r1	; 0x03
    183a:	1c 82       	std	Y+4, r1	; 0x04
    183c:	21 e0       	ldi	r18, 0x01	; 1
    183e:	49 81       	ldd	r20, Y+1	; 0x01
    1840:	5a 81       	ldd	r21, Y+2	; 0x02
    1842:	6b 81       	ldd	r22, Y+3	; 0x03
    1844:	7c 81       	ldd	r23, Y+4	; 0x04
    1846:	48 17       	cp	r20, r24
    1848:	59 07       	cpc	r21, r25
    184a:	6a 07       	cpc	r22, r26
    184c:	7b 07       	cpc	r23, r27
    184e:	b0 f4       	brcc	.+44     	; 0x187c <qtm_ptc_start_measurement_seq+0x12a>
    1850:	30 91 97 01 	lds	r19, 0x0197	; 0x800197 <ptc_eoc_ok_flag>
    1854:	33 23       	and	r19, r19
    1856:	29 f0       	breq	.+10     	; 0x1862 <qtm_ptc_start_measurement_seq+0x110>
    1858:	89 83       	std	Y+1, r24	; 0x01
    185a:	9a 83       	std	Y+2, r25	; 0x02
    185c:	ab 83       	std	Y+3, r26	; 0x03
    185e:	bc 83       	std	Y+4, r27	; 0x04
    1860:	20 e0       	ldi	r18, 0x00	; 0
    1862:	49 81       	ldd	r20, Y+1	; 0x01
    1864:	5a 81       	ldd	r21, Y+2	; 0x02
    1866:	6b 81       	ldd	r22, Y+3	; 0x03
    1868:	7c 81       	ldd	r23, Y+4	; 0x04
    186a:	4f 5f       	subi	r20, 0xFF	; 255
    186c:	5f 4f       	sbci	r21, 0xFF	; 255
    186e:	6f 4f       	sbci	r22, 0xFF	; 255
    1870:	7f 4f       	sbci	r23, 0xFF	; 255
    1872:	49 83       	std	Y+1, r20	; 0x01
    1874:	5a 83       	std	Y+2, r21	; 0x02
    1876:	6b 83       	std	Y+3, r22	; 0x03
    1878:	7c 83       	std	Y+4, r23	; 0x04
    187a:	e1 cf       	rjmp	.-62     	; 0x183e <qtm_ptc_start_measurement_seq+0xec>
    187c:	22 23       	and	r18, r18
    187e:	b9 f0       	breq	.+46     	; 0x18ae <qtm_ptc_start_measurement_seq+0x15c>
    1880:	80 91 e9 00 	lds	r24, 0x00E9	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7f80e9>
    1884:	80 ff       	sbrs	r24, 0
    1886:	13 c0       	rjmp	.+38     	; 0x18ae <qtm_ptc_start_measurement_seq+0x15c>
    1888:	10 92 e0 00 	sts	0x00E0, r1	; 0x8000e0 <__TEXT_REGION_LENGTH__+0x7f80e0>
    188c:	00 00       	nop
    188e:	82 e1       	ldi	r24, 0x12	; 18
    1890:	80 93 e0 00 	sts	0x00E0, r24	; 0x8000e0 <__TEXT_REGION_LENGTH__+0x7f80e0>
    1894:	00 00       	nop
    1896:	81 e0       	ldi	r24, 0x01	; 1
    1898:	80 93 e9 00 	sts	0x00E9, r24	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7f80e9>
    189c:	80 91 90 01 	lds	r24, 0x0190	; 0x800190 <ptc_lockups>
    18a0:	90 91 91 01 	lds	r25, 0x0191	; 0x800191 <ptc_lockups+0x1>
    18a4:	01 96       	adiw	r24, 0x01	; 1
    18a6:	90 93 91 01 	sts	0x0191, r25	; 0x800191 <ptc_lockups+0x1>
    18aa:	80 93 90 01 	sts	0x0190, r24	; 0x800190 <ptc_lockups>
    18ae:	81 e0       	ldi	r24, 0x01	; 1
    18b0:	42 c0       	rjmp	.+132    	; 0x1936 <qtm_ptc_start_measurement_seq+0x1e4>
    18b2:	90 93 e3 01 	sts	0x01E3, r25	; 0x8001e3 <qtm_acquisition_control_working_set_ptr+0x1>
    18b6:	80 93 e2 01 	sts	0x01E2, r24	; 0x8001e2 <qtm_acquisition_control_working_set_ptr>
    18ba:	70 93 8f 01 	sts	0x018F, r23	; 0x80018f <ptc_seq_measure_complete_pointer+0x1>
    18be:	60 93 8e 01 	sts	0x018E, r22	; 0x80018e <ptc_seq_measure_complete_pointer>
    18c2:	dc 01       	movw	r26, r24
    18c4:	ed 91       	ld	r30, X+
    18c6:	fc 91       	ld	r31, X
    18c8:	82 81       	ldd	r24, Z+2	; 0x02
    18ca:	80 34       	cpi	r24, 0x40	; 64
    18cc:	11 f4       	brne	.+4      	; 0x18d2 <qtm_ptc_start_measurement_seq+0x180>
    18ce:	88 e0       	ldi	r24, 0x08	; 8
    18d0:	03 c0       	rjmp	.+6      	; 0x18d8 <qtm_ptc_start_measurement_seq+0x186>
    18d2:	80 38       	cpi	r24, 0x80	; 128
    18d4:	79 f5       	brne	.+94     	; 0x1934 <qtm_ptc_start_measurement_seq+0x1e2>
    18d6:	8a e0       	ldi	r24, 0x0A	; 10
    18d8:	80 93 e2 00 	sts	0x00E2, r24	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7f80e2>
    18dc:	e0 91 e2 01 	lds	r30, 0x01E2	; 0x8001e2 <qtm_acquisition_control_working_set_ptr>
    18e0:	f0 91 e3 01 	lds	r31, 0x01E3	; 0x8001e3 <qtm_acquisition_control_working_set_ptr+0x1>
    18e4:	01 90       	ld	r0, Z+
    18e6:	f0 81       	ld	r31, Z
    18e8:	e0 2d       	mov	r30, r0
    18ea:	84 81       	ldd	r24, Z+4	; 0x04
    18ec:	80 31       	cpi	r24, 0x10	; 16
    18ee:	08 f0       	brcs	.+2      	; 0x18f2 <qtm_ptc_start_measurement_seq+0x1a0>
    18f0:	80 e1       	ldi	r24, 0x10	; 16
    18f2:	80 93 e3 00 	sts	0x00E3, r24	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7f80e3>
    18f6:	81 e0       	ldi	r24, 0x01	; 1
    18f8:	84 bf       	out	0x34, r24	; 52
    18fa:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7f8074>
    18fe:	10 92 96 01 	sts	0x0196, r1	; 0x800196 <current_measure_channel+0x1>
    1902:	10 92 95 01 	sts	0x0195, r1	; 0x800195 <current_measure_channel>
    1906:	0e 94 a0 08 	call	0x1140	; 0x1140 <select_next_channel_to_measure>
    190a:	81 11       	cpse	r24, r1
    190c:	0b c0       	rjmp	.+22     	; 0x1924 <qtm_ptc_start_measurement_seq+0x1d2>
    190e:	84 e0       	ldi	r24, 0x04	; 4
    1910:	80 93 94 01 	sts	0x0194, r24	; 0x800194 <touch_seq_lib_state>
    1914:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <current_measure_channel>
    1918:	90 91 96 01 	lds	r25, 0x0196	; 0x800196 <current_measure_channel+0x1>
    191c:	0e 94 d3 08 	call	0x11a6	; 0x11a6 <qtm_measure_node>
    1920:	80 e0       	ldi	r24, 0x00	; 0
    1922:	09 c0       	rjmp	.+18     	; 0x1936 <qtm_ptc_start_measurement_seq+0x1e4>
    1924:	82 e0       	ldi	r24, 0x02	; 2
    1926:	80 93 94 01 	sts	0x0194, r24	; 0x800194 <touch_seq_lib_state>
    192a:	05 c0       	rjmp	.+10     	; 0x1936 <qtm_ptc_start_measurement_seq+0x1e4>
    192c:	8b e0       	ldi	r24, 0x0B	; 11
    192e:	03 c0       	rjmp	.+6      	; 0x1936 <qtm_ptc_start_measurement_seq+0x1e4>
    1930:	83 e0       	ldi	r24, 0x03	; 3
    1932:	01 c0       	rjmp	.+2      	; 0x1936 <qtm_ptc_start_measurement_seq+0x1e4>
    1934:	82 e0       	ldi	r24, 0x02	; 2
    1936:	0f 90       	pop	r0
    1938:	0f 90       	pop	r0
    193a:	0f 90       	pop	r0
    193c:	0f 90       	pop	r0
    193e:	df 91       	pop	r29
    1940:	cf 91       	pop	r28
    1942:	08 95       	ret

00001944 <qtm_enable_sensor_node>:
    1944:	00 97       	sbiw	r24, 0x00	; 0
    1946:	c9 f0       	breq	.+50     	; 0x197a <qtm_enable_sensor_node+0x36>
    1948:	dc 01       	movw	r26, r24
    194a:	ed 91       	ld	r30, X+
    194c:	fc 91       	ld	r31, X
    194e:	11 97       	sbiw	r26, 0x01	; 1
    1950:	20 81       	ld	r18, Z
    1952:	31 81       	ldd	r19, Z+1	; 0x01
    1954:	26 17       	cp	r18, r22
    1956:	37 07       	cpc	r19, r23
    1958:	90 f0       	brcs	.+36     	; 0x197e <qtm_enable_sensor_node+0x3a>
    195a:	45 e0       	ldi	r20, 0x05	; 5
    195c:	46 9f       	mul	r20, r22
    195e:	90 01       	movw	r18, r0
    1960:	47 9f       	mul	r20, r23
    1962:	30 0d       	add	r19, r0
    1964:	11 24       	eor	r1, r1
    1966:	14 96       	adiw	r26, 0x04	; 4
    1968:	ed 91       	ld	r30, X+
    196a:	fc 91       	ld	r31, X
    196c:	15 97       	sbiw	r26, 0x05	; 5
    196e:	e2 0f       	add	r30, r18
    1970:	f3 1f       	adc	r31, r19
    1972:	81 e0       	ldi	r24, 0x01	; 1
    1974:	80 83       	st	Z, r24
    1976:	80 e0       	ldi	r24, 0x00	; 0
    1978:	08 95       	ret
    197a:	8b e0       	ldi	r24, 0x0B	; 11
    197c:	08 95       	ret
    197e:	82 e0       	ldi	r24, 0x02	; 2
    1980:	08 95       	ret

00001982 <qtm_calibrate_sensor_node>:
    1982:	00 97       	sbiw	r24, 0x00	; 0
    1984:	d1 f1       	breq	.+116    	; 0x19fa <qtm_calibrate_sensor_node+0x78>
    1986:	dc 01       	movw	r26, r24
    1988:	ed 91       	ld	r30, X+
    198a:	fc 91       	ld	r31, X
    198c:	11 97       	sbiw	r26, 0x01	; 1
    198e:	20 81       	ld	r18, Z
    1990:	31 81       	ldd	r19, Z+1	; 0x01
    1992:	26 17       	cp	r18, r22
    1994:	37 07       	cpc	r19, r23
    1996:	98 f1       	brcs	.+102    	; 0x19fe <qtm_calibrate_sensor_node+0x7c>
    1998:	22 81       	ldd	r18, Z+2	; 0x02
    199a:	14 96       	adiw	r26, 0x04	; 4
    199c:	ed 91       	ld	r30, X+
    199e:	fc 91       	ld	r31, X
    19a0:	15 97       	sbiw	r26, 0x05	; 5
    19a2:	20 34       	cpi	r18, 0x40	; 64
    19a4:	59 f4       	brne	.+22     	; 0x19bc <qtm_calibrate_sensor_node+0x3a>
    19a6:	85 e0       	ldi	r24, 0x05	; 5
    19a8:	86 9f       	mul	r24, r22
    19aa:	d0 01       	movw	r26, r0
    19ac:	87 9f       	mul	r24, r23
    19ae:	b0 0d       	add	r27, r0
    19b0:	11 24       	eor	r1, r1
    19b2:	ae 0f       	add	r26, r30
    19b4:	bf 1f       	adc	r27, r31
    19b6:	84 e3       	ldi	r24, 0x34	; 52
    19b8:	92 e0       	ldi	r25, 0x02	; 2
    19ba:	0c c0       	rjmp	.+24     	; 0x19d4 <qtm_calibrate_sensor_node+0x52>
    19bc:	20 38       	cpi	r18, 0x80	; 128
    19be:	81 f4       	brne	.+32     	; 0x19e0 <qtm_calibrate_sensor_node+0x5e>
    19c0:	85 e0       	ldi	r24, 0x05	; 5
    19c2:	86 9f       	mul	r24, r22
    19c4:	d0 01       	movw	r26, r0
    19c6:	87 9f       	mul	r24, r23
    19c8:	b0 0d       	add	r27, r0
    19ca:	11 24       	eor	r1, r1
    19cc:	ae 0f       	add	r26, r30
    19ce:	bf 1f       	adc	r27, r31
    19d0:	87 e6       	ldi	r24, 0x67	; 103
    19d2:	95 e0       	ldi	r25, 0x05	; 5
    19d4:	14 96       	adiw	r26, 0x04	; 4
    19d6:	9c 93       	st	X, r25
    19d8:	8e 93       	st	-X, r24
    19da:	13 97       	sbiw	r26, 0x03	; 3
    19dc:	80 e0       	ldi	r24, 0x00	; 0
    19de:	01 c0       	rjmp	.+2      	; 0x19e2 <qtm_calibrate_sensor_node+0x60>
    19e0:	82 e0       	ldi	r24, 0x02	; 2
    19e2:	95 e0       	ldi	r25, 0x05	; 5
    19e4:	96 9f       	mul	r25, r22
    19e6:	90 01       	movw	r18, r0
    19e8:	97 9f       	mul	r25, r23
    19ea:	30 0d       	add	r19, r0
    19ec:	11 24       	eor	r1, r1
    19ee:	e2 0f       	add	r30, r18
    19f0:	f3 1f       	adc	r31, r19
    19f2:	90 81       	ld	r25, Z
    19f4:	92 60       	ori	r25, 0x02	; 2
    19f6:	90 83       	st	Z, r25
    19f8:	08 95       	ret
    19fa:	8b e0       	ldi	r24, 0x0B	; 11
    19fc:	08 95       	ret
    19fe:	82 e0       	ldi	r24, 0x02	; 2
    1a00:	08 95       	ret

00001a02 <qtm_m324pb_ptc_handler_eoc>:
    1a02:	10 92 e0 00 	sts	0x00E0, r1	; 0x8000e0 <__TEXT_REGION_LENGTH__+0x7f80e0>
    1a06:	80 91 ee 00 	lds	r24, 0x00EE	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7f80ee>
    1a0a:	20 91 ef 00 	lds	r18, 0x00EF	; 0x8000ef <__TEXT_REGION_LENGTH__+0x7f80ef>
    1a0e:	e0 91 95 01 	lds	r30, 0x0195	; 0x800195 <current_measure_channel>
    1a12:	f0 91 96 01 	lds	r31, 0x0196	; 0x800196 <current_measure_channel+0x1>
    1a16:	ee 0f       	add	r30, r30
    1a18:	ff 1f       	adc	r31, r31
    1a1a:	40 91 e4 01 	lds	r20, 0x01E4	; 0x8001e4 <qtm_raw_data_measurements_ptr>
    1a1e:	50 91 e5 01 	lds	r21, 0x01E5	; 0x8001e5 <qtm_raw_data_measurements_ptr+0x1>
    1a22:	e4 0f       	add	r30, r20
    1a24:	f5 1f       	adc	r31, r21
    1a26:	90 e0       	ldi	r25, 0x00	; 0
    1a28:	92 2b       	or	r25, r18
    1a2a:	91 83       	std	Z+1, r25	; 0x01
    1a2c:	80 83       	st	Z, r24
    1a2e:	80 91 92 01 	lds	r24, 0x0192	; 0x800192 <good_eocs>
    1a32:	90 91 93 01 	lds	r25, 0x0193	; 0x800193 <good_eocs+0x1>
    1a36:	01 96       	adiw	r24, 0x01	; 1
    1a38:	90 93 93 01 	sts	0x0193, r25	; 0x800193 <good_eocs+0x1>
    1a3c:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <good_eocs>
    1a40:	89 2b       	or	r24, r25
    1a42:	21 f4       	brne	.+8      	; 0x1a4c <qtm_m324pb_ptc_handler_eoc+0x4a>
    1a44:	10 92 91 01 	sts	0x0191, r1	; 0x800191 <ptc_lockups+0x1>
    1a48:	10 92 90 01 	sts	0x0190, r1	; 0x800190 <ptc_lockups>
    1a4c:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <current_measure_channel>
    1a50:	90 91 96 01 	lds	r25, 0x0196	; 0x800196 <current_measure_channel+0x1>
    1a54:	01 96       	adiw	r24, 0x01	; 1
    1a56:	90 93 96 01 	sts	0x0196, r25	; 0x800196 <current_measure_channel+0x1>
    1a5a:	80 93 95 01 	sts	0x0195, r24	; 0x800195 <current_measure_channel>
    1a5e:	0e 94 a0 08 	call	0x1140	; 0x1140 <select_next_channel_to_measure>
    1a62:	81 11       	cpse	r24, r1
    1a64:	0a c0       	rjmp	.+20     	; 0x1a7a <qtm_m324pb_ptc_handler_eoc+0x78>
    1a66:	84 e0       	ldi	r24, 0x04	; 4
    1a68:	80 93 94 01 	sts	0x0194, r24	; 0x800194 <touch_seq_lib_state>
    1a6c:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <current_measure_channel>
    1a70:	90 91 96 01 	lds	r25, 0x0196	; 0x800196 <current_measure_channel+0x1>
    1a74:	0e 94 d3 08 	call	0x11a6	; 0x11a6 <qtm_measure_node>
    1a78:	05 c0       	rjmp	.+10     	; 0x1a84 <qtm_m324pb_ptc_handler_eoc+0x82>
    1a7a:	e0 91 8e 01 	lds	r30, 0x018E	; 0x80018e <ptc_seq_measure_complete_pointer>
    1a7e:	f0 91 8f 01 	lds	r31, 0x018F	; 0x80018f <ptc_seq_measure_complete_pointer+0x1>
    1a82:	09 95       	icall
    1a84:	81 e0       	ldi	r24, 0x01	; 1
    1a86:	80 93 97 01 	sts	0x0197, r24	; 0x800197 <ptc_eoc_ok_flag>
    1a8a:	08 95       	ret

00001a8c <__umulhisi3>:
    1a8c:	a2 9f       	mul	r26, r18
    1a8e:	b0 01       	movw	r22, r0
    1a90:	b3 9f       	mul	r27, r19
    1a92:	c0 01       	movw	r24, r0
    1a94:	a3 9f       	mul	r26, r19
    1a96:	70 0d       	add	r23, r0
    1a98:	81 1d       	adc	r24, r1
    1a9a:	11 24       	eor	r1, r1
    1a9c:	91 1d       	adc	r25, r1
    1a9e:	b2 9f       	mul	r27, r18
    1aa0:	70 0d       	add	r23, r0
    1aa2:	81 1d       	adc	r24, r1
    1aa4:	11 24       	eor	r1, r1
    1aa6:	91 1d       	adc	r25, r1
    1aa8:	08 95       	ret

00001aaa <_exit>:
    1aaa:	f8 94       	cli

00001aac <__stop_program>:
    1aac:	ff cf       	rjmp	.-2      	; 0x1aac <__stop_program>
